045efdd5e New repository initialized by cvs2svn.
162649b70 Initial revision
1fadce6da Initial revision
fccebd978 Fixed problem with characters callback for character entity refs. Was only calling characters(char[],int,int) instead of obeying the "sendCharDataAsCharArray" property in callCharacters(int) method. PR: Obtained from: Submitted by: Reviewed by:	twl@apache.org
758185fa9 Status as of 11/15/1999 PR: Obtained from: Submitted by: Reviewed by:
918201b86 Make encoding UTF-8 PR: Obtained from: Submitted by: Reviewed by:
77a50a0c6 Move call to setSendCharDataAsCharArray to fix null document handler handling PR: Obtained from: Submitted by: Reviewed by:
807cfa1ca Memory consumption and parsing performance improvements for DOM parsers. The following changes were made:
5bdea5849 First checkin. PR: Obtained from: Submitted by: Reviewed by:
edcbc1a7a Added package org.apache.xml. PR: Obtained from: Submitted by: Reviewed by:
dc80376ea Added package org.apache.xml.serialize PR: Obtained from: Submitted by: Reviewed by:
973be346d Went ahead and created singleton empty node list instead of lazy evaluating it. No big deal, really. PR: Obtained from: Submitted by: Reviewed by:
4c937f6e0 Improved memory consumption in Deferred DOM implementation.
09e04d548 Oops! Left a debugging boolean set to true. It only affected the code compiled for output of some debugging tables by the print() method, though. PR: Obtained from: Submitted by: Reviewed by:
7c9a8facf First try of Ant makefile. It currently builds the xerces.jar file from all the source code.
26a9bd7e9 Added synchronized access to static fields. PR: Obtained from: Submitted by: Reviewed by:
dc4982533 BaseSerializer should be public (I bet)...
b555ba286 Added isURI() check and added FRAME to list of empty elements. PR: Obtained from: Submitted by: Reviewed by:
4d178339e Accessing tagName through variable in serializeElement(). PR: Obtained from: Submitted by: Reviewed by:
9c2607c52 No longer buffers the writer or output stream. PR: Obtained from: Submitted by: Reviewed by:
ab57a4bcd Added special case for SCRIPT/STYLE printing. Added different escaping for URI attributes. PR: Obtained from: Submitted by: Reviewed by:
4c7101b4a Changed "UTF8" with standard "UTF-8"
25f3d4e99 Commented out reference to FOPSerializer. PR: Obtained from: Submitted by: Reviewed by:
e67fbaf02 Fix threading bug exposed by Xalan. Proxy checkin for gmarcy@us.ibm.com UTF8DataChunk: make fTempBuffer non-static, null fNextChunk in removeRef() CharDataChunk: null fNextChunk in removeRef() PR: Obtained from: Submitted by: Reviewed by:
a29b2884b Turn off DOM error checking during construction of DOM tree in FULL mode. This speeds up parsing/construction of the tree by about 7 percent. Error checking is turned back on before the document is queried by the user. PR: Obtained from: Submitted by: Reviewed by:
7410c313e Allow parser to deal with data arriving on slow or bursty streams
67e9a3870 Update status file PR: Obtained from: Submitted by: Reviewed by:
b37578d0e one more item PR: Obtained from: Submitted by: Reviewed by:
b78c63496 Removed bogus getValue()
0a1c7e7ce First checkin.
c0385b631 Added org.w3c.dom.html to make
cf27bd5f6 First checkin
bf5a63287 Added html package
d8fc5728f Added org.apache.html.dom package
0f2a25bbf Added org.w3c.dom.html and org.apache.html.dom
626982cbb moved the Xdocs here instead of the xml-site (that should not contain the original documents)
40aab4db7 Here it is, a full working build file for Xerces that does
a7fb40302 Update documentation a little. PR: Obtained from: Submitted by: Reviewed by:
535027ad4 Change version numbers for binary drop PR: Obtained from: Submitted by: Reviewed by:
7125cb60e Minor datatype updates for new Working Draft PR: Obtained from: Submitted by: Reviewed by:
1ce78b909 Sync up documentation. PR: Obtained from: Submitted by: Reviewed by:
6bda92414 Fix null pointer exception in XSchemaValidator when parsing textEntity declarations. PR: Obtained from: Submitted by: Reviewed by:
ea0024e45 remove emacs backups from repository PR: Obtained from: Submitted by: Reviewed by:
d22ff5856 Update docs for 1.0.1 PR: Obtained from: Submitted by: Reviewed by:
6a74bf56b build changes for 1.0.1 packaging moves to .jar files, build docs in repository PR: Obtained from: Submitted by: Reviewed by:
730f2429f add redirecting Readme.html PR: Obtained from: Submitted by: Reviewed by:
acc765fd2 Update docs for streaming character functionality PR: Obtained from: Submitted by: Reviewed by:
b655c36a7 New serializer API (Serializer, DOMSerializer, SerializerFactory). Method and LineSeparator constants are separate classes, outside of OutputFormat. Added TextSerializer. Fixed bug in closing HTML elements in HTMLSerializer. PR: Obtained from: Submitted by: Reviewed by:
9183c39ba *** empty log message ***
655d0b0ee Update the Namespaces impl and added support for other DOM Level 2 core We should now match the match the W3C CR from 991210. -rip
067216da8 Update the Namespaces impl and added support for all DOM Level 2 core We should now match the match the W3C CR from 991210. -rip
d852bbbda Update the Namespaces impl and added support for all DOM Level 2 core We should now match the match the W3C CR from 991210. Specifically for the FooParsers, we have added another callback for the internal Subset as a string DOM2 addition: internalSubset(int); -rip
e4758552b Update the Namespaces impl and added support for all DOM Level 2 core We should now match the match the W3C CR from 991210. Specifically  we have added another callback for the internal Subset as a string DOM2 addition: internalSubset(int); -rip
d91c92039 Match the match the W3C CR from 991210. -rip
ec89cb013 Match the Dom Level 2 W3C CR from 991210. -rip
1c21a1b51 Bug: previousNode (would only go down to the last child of the previous sibling).
9589dc6e2 Fix last minute boo boos' PR: Obtained from: Submitted by: Reviewed by:
b43d3f1f3 More datatype support PR: Obtained from: Submitted by: Reviewed by:
fadb68500 Added missing include
07fc4f0f6 can anyone tell me how something like this can find its way into the CVS?
c7f0a2907 DOM Level 2 - small fixes
36cce1738 DOM Level 2 - upgraded org.w3c.dom Interfaces to: W3C Candidate Recommendation 10 December, 1999 -rip
3ae1f927c Remove JDK 1.2 dependency PR: Obtained from: Submitted by: Reviewed by:
cd6a4fd27 DOM Level 2 - upgraded org.w3c.dom Interfaces to: W3C Candidate Recommendation 10 December, 1999
b2784ea29 We do not support UI Events. -rip
4a762891f Moving to org.w3c.dom -rip
1fdf4a073 Slight mods related to Moving to org.w3c.dom -rip
2b7431f14 Off by one error caused an index out of bounds exception to be thrown when the number of identifiers reached 64. The code throwing the exception was checking to make sure that the current element didn't have more identifiers but its bound check was off by one.
b16be2807 Minor fixes PR: Obtained from: Submitted by: Reviewed by:
499d5cf64 Ted is having a bad day. PR: Obtained from: Submitted by: Reviewed by:
376dde3b1 changed to use w3c interfaces rather than domx ones.
64d849201 removed obsolete domx stuff
344faf25e Added feature so that user can decide whether or not ignorable whitespace text nodes appear in the DOM tree. By default, the text nodes are there and, thus, there appears to be no change from current behavior. PR: Obtained from: Submitted by: Reviewed by:
a74bbf918 This file changed to reflect  org.w3c.dom.events and org.w3c.dom.traversal
467e64b42 fixed Makefiles regarding domx change, patch from Timm Sean, STimm@mailgo.com
9bd567d35 Earlier, a bug related to multi-threading was fixed in the UTF8DataChunk. A temp buffer was inadvertantly made static with no associated synchronized access to the variable which created the possibility of multiple thread each writing to the temp buffer at the same time causing data corruption.
16ac91d55 Bugfixes from gtj@peakin.com: 1. Comment out calls to System.exit(1) 2. Fix reportSchemaError to keep it from swallowing exceptions 3. Correct bugs with integer subtype registration PR: Obtained from: Submitted by: Reviewed by:
4890cb25d Misapplied patch - omitted a throws clause PR: Obtained from: Submitted by: Reviewed by:
c8fd68888 Allow StringValidator to validate maxLength and enumeration facet contraints.
4789a83bc Added changes to allow caching of node children length and quicker access to individual items in the children NodeList. For example, the following loop will see a huge performance boost:
19e9d9a84 Changed NodeImpl to not accept any children, added a new class, NodeContainer, which inherits from NodeImpl to add the capability of having children. This makes leaf nodes, such as Text nodes, smaller, leading to a smaller foot print. Changed AttrImpl, DocumentFragmentImpl, DocumentImpl, DocumentTypeImpl, ElementImpl, ElementDefinitionImpl, EntityImpl, EntityReferenceImple, to inherit from NodeContainer.
ee90fae41 Prevents indentation when preserving white spaces; fixes null pointer exception in printing URL
2a1668a30 Empty cell no longer created when adding a row
7e4d24112 changed AttrImpl and ElementImpl not to support namespaces, added AttrNSImpl and ElementNSImpl which inherit from them and add support for namespaces. changed DocumentImpl to instantiate the appropriate class of Element and Attr, depending on whether namespace support is needed.
f4cb21d45 Multiple CDATA sections now print as one. Serializer now complains about not setting the writer. Fixed indentation in whitespace preserving elements. PR: Obtained from: Submitted by: Reviewed by:
f05c07c27 This patch courtesy of gtj@peakin.com:
da9694407 Prints public/system identifier based on document type. No longer prints DOM entities as internal subset. PR: Obtained from: Submitted by: Reviewed by:
5cce10fed Fixed problem with CData section not closing when recycling element state. PR: Obtained from: Submitted by: Reviewed by:
606e0c1a8 post 1.0.1 version PR: Obtained from: Submitted by: Reviewed by:
690490c80 fixed hasFeature(): if version is null supporting any version returns true, we support MutationEvents
f783bfa26 fixed localName setting in case there is no prefix
4a62a89e6 first drop
eefeee08d taken from xerces/c and converted to Java
880e8d7a1 quick hack (but nice ;-) to have basic assertion support
46b8f2c0b added new tests from DOMMemTest.cpp
9b961f262 made methods static, allowed calling stack to have more than 1 level
096175aaa change constructor to treat an empty string as a null for namespaceURI
881d54bed fixed namespace support
8d67e3f25 empty strings for namespaceURIs are treated as nulls
26898a600 fixed getLocalName
114584727 got rid of namespace related methods that are actually  inherited from NodeImpl
0808cadb9 Fix typos and refer to "sample applications" not "sample parsers" Thanks to keshlam@us.ibm.com PR: Obtained from: Submitted by: Reviewed by:
056635745 implemented latest change from DOM Level 2 spec
8d23c9f79 implemented latest change from DOM Level 2 spec
9d463cb66 implemented latest change from DOM Level 2 spec
6900fc05b another change related to the latest changes in the DOM spec
b267c927b Correct case sensitive filename for README file PR: Obtained from: Submitted by: Reviewed by:
e53af195c Changes to build.xml to produce the same output that the makefiles do.
35999cc53 sorted list of class files
465045855 Get version number ready for 1.0.2 PR: Obtained from: Submitted by: Reviewed by:
2c78fec25 Update docs for 1.0.2 PR: Obtained from: Submitted by: Reviewed by:
5a722d6d9 add migration faq PR: Obtained from: Submitted by: Reviewed by:
1d6398917 committed George T. Joseph contribution
14b906702 Added time datatypes for George T. Joseph changes
463d3fd0c Added Time datatypes to makefile
9514f496d update README to include License info update FAQs on creating a parser to match current architecture PR: Obtained from: Submitted by: Reviewed by:
63dbdb514 Fixed bug in ChunkyByteArray that was being manifested by parsing large UTF-16 files. The ChunkyByteArray holds character data for the readers. This data is stored in an array of chunks. No checks were in the code to resize the array of chunks when needed. Therefore, large files would expose this bug -- files larger than 64 * 16K.
d392d73ec The NodeIteratorImpl.java and the TreeWalkerImpl.java are being moved from the dom.traversal package/dir up to the dom package/dir.
09367c73f The NodeIteratorImpl.java and the TreeWalkerImpl.java are being moved from the dom.traversal package/dir up to the dom package/dir.
8f5b293ab The NodeIteratorImpl.java and the TreeWalkerImpl.java are being moved from the dom.traversal package/dir up to the dom package/dir.
654b596c9 moved one level up
815cb42d5 traversal Impl classes moved one level up
95efd1f84 The only way to deregister a NodeIterator is now through proper DOM2 API, NodeIterator.detach().
ce48bfc4d changelog for 1.0.2 PR: Obtained from: Submitted by: Reviewed by:
26349fb77 Fixed invalid DTD.
07a98f216 An enumeration of allowed version numbers is better than CDATA.
813bb4c35 Javadoc update from @see BaseSerializer to @see BaseMarkupSerializer.
20b9d6d6f Adding new docs.
3aa52198b Add the DOM Level 2 org.w3c.dom.range Range Interfaces
925f503d2 Checkin the initial  DOM Level 2 Range Implementation
b090e3cf2 Updating docs.
0f7cda2ee Checkin the initial  DOM Level 2 Range Interfaces and Implementation
da4af79d0 all namespace declaration attributes are now bound to the predefined namespaceURI http://www.w3.org/2000/xmlns/ prefixes are normalized to null when they are an empty string
364bd900f Checkin the initial RangeText
b2e48f2c7 Docs update.
e1f4962d7 Docs update.
b54e77529 Checkin the initial RangeText
8a302474c Update Schema & Datatypes syntax to 12/17 Working Draft PR: Obtained from: Submitted by: Reviewed by:
255bdeaf5 all namespace declaration attributes are now bound to the predefined namespaceURI http://www.w3.org/2000/xmlns/
e208b5880 Fix line break in cp command PR: Obtained from: Submitted by: Reviewed by:
7e5ced29e Added gtj@peakin.com's patches for annotation handling PR: Obtained from: Submitted by: Reviewed by:
d82871257 1) JAR files contained META-INF directory. Removed. 2) JAR files missing license information. Added. 3) docs/ directory contains CVS directory. Removed. 4) XML docs in binary distribution. Moved to source distribution.
8d4ab8d0f A copy of the LICENSE file must be in the java directory for the build process. Updated Makefile to copy this LICENSE file into the jars.
d84834ba8 ANT build file included in packaging. Removed.
b0def53e1 XML Schema validator added an entity file that must be copied during build process.
09af85675 License link broken. Fixed.
07e21a57d 1) Creating DOM and SAX parser FAQ item was wrong. Fixed. 2) Modified entity, javaparserdirectory, to match.
05632b8c8 CDATA no longer printed in HTML. Fixed indentation for TD/A elements, which caused Netscape to misbehave. Fixed bug in handling closing tag in HTML. PR: Obtained from: Submitted by: Reviewed by:
8fc61db9f Added support for boolean attributes in certain HTML elements. PR: Obtained from: Submitted by: Reviewed by:
3c5923c85 Added TH as a cell element. PR: Obtained from: Submitted by: Reviewed by:
8e71564a8 Off by 1 error in the DeferredDocumentImpl caused an ArrayIndexOutOfBoundsException to occur if the number of identifiers was equal to the size of the identifier index array.
e8c62d4dc List Bundle message for localized exception errors and warning
5138cffe9 added ExceptionMessages to makefile - localize error message from Exceptions
66a341790 changed exception messages for NLS
0f36ff006 added messages for:  org.apache.html, org.apache.xml.serialize, and org.apache.xerces.dom
6f0f10c2d reader exception messages
63664fa4a fixed minor typo
d9329264c printStackTrace Only when debugging PR: Obtained from: Submitted by: Reviewed by:
9178b5af3 Localized exception message
e039e0fa7 Localize ExceptionMessages for org.apache.xerces.utils
62c30cd81 Exception messages for org.apache.xerces.validators
cf159d9ed New files required by SAX2beta.
72a61d946 Modifications for SAX2beta.
461c1be84 Makefile updates for SAX2beta.
d7ee1cf21 Updates for SAX2beta.
27d636ba4 Removing old files for SAX2beta.
cdcf01af5 Added SAX2 interfaces, no support yet
4a7198cbd Comments
ec360b1fa Updated to include localized Messages for FWK, and PAR. -rip
445993440 Fixes name lookup to be case insensitive
a81f7245b Updated to include localized ExceptionMessages. -rip
698495a36 Updated to include localized ExceptionMessages. -rip
66677cb04 Bug in SAX2beta helper class, NamespaceSupport, that made it depend on Java 2.
795f72f7b Oops! Neglected to remove import statement for old SAX2 Configurable interface.
ea001b8ed get rid of duplicate string messages
36e7266ce Get rid of extra messages info
0f2d77f04 Updated to include localized ExceptionMessages. -rip
025bcce77 A utility class to  localize ExceptionMessages. -rip
5aaa985b0 Add utility class to  localize ExceptionMessages. -rip
0c12a3e46 Stray import from old SAX2 remained even though it was never used.
b16da0e7b Spaces instead of tab characters. Also, don't want the ExceptionMessageLocalizer in the build until approved.
5eabc791d Some SAX2beta features are read-only during parser. Added code to check this and throw SAXNotSupportedException as appropriate.
17d89c717 Update change log.
c6ee26aa5 Added support for Ranges fix-up when Text Nodes are split (currently can happen from  insertNode) -rip
b5012676a Configurable still in the Makefile. Removed. Thanks to Sven Reimers <reimers@tu-harburg.de> for the catch.
baca3f109 Change required by SAX2beta.
61964428c Make changes to revert to creating ZIP files for distribution.
dfa51b32a Missing close LI element.
5f511f461 null is a valid value of doctype parameter in createDocument
f4443381e changed (again) to get in line with new spec to come
0ac03e2a8 spec to come says getAttributeNS returns null when attribute is not set. Unlike getAttribute!
75897d7a2 fixed previous change
318ccdb1a added Apache software license to this package
d25e6ac8b changed to avoid NullPointerException on xmlns attributes (oops!)
92b7b3d83 fixed constructor and store given namespaceURI
1ff6bb68e modified handling of namespace declaration attributes
73d6b6337 added special handling of namespace declaration attributes, in the deferred case this is handled by DeferredAttrNSImpl
8ff3ea0cd These samples no longer refer to any *Impl classes, just generic org.w3c.dom Interfaces. -rip
f4056ab0c made various improvements
48c118822 changed to use Assertion class so that problems are easier to spot
d97ea7cd3 Improve reporting of IDREF VC violations Patch due to gtj@peakin.com PR: Obtained from: Submitted by: Reviewed by:
fd893070f snapshot jar files to make xerces build independent of other modules
f658aa9cb revamped all makefiles so that build can be done by simply typing make, without having to set any variables
a871c37d6 no longer needed
7887c91cb Added parallel samples to show use of SAX2 ContentHandler.
5af7b3e06 fixed typo
6c99c7190 Needed by SAX2Count/Writer.java
469d3e4d7 Meow.
a44fb2645 use user's CLASSPATH if there is one
56d769a4e BuildAll BuildAll.bat have been removed
f0042bcf9 another small fix regarding Makefiles
2b5899839 one more change (last one?) to make xerces self-contained
20d347510 Fixed recursion problem that lead to getRows() finding rows inside nested tables. PR: Obtained from: Submitted by: Reviewed by:
57ee656d4 Added SAX2 support (ContentHandler) and namespace handling. PR: Obtained from: Submitted by: Reviewed by:
3ca077874 Update grammar access in order to read a DTD grammar and represent it as XML Schema syntax (Dec WD). These changes do not imply that the parser can correctly process that Schema grammar, though.
5fbb4eefe yet another attempt at making xerces self-contained: until stylebook is upgraded to be SAX2 aware it requires xerces-1.0.1
7f7d3e5fe fixed a bug: for JAR var to be shareable flags must only be specified when instanciated
253abfe05 Update properties and features for SAX2beta.
12d0234f4 changed to work with various versions of cygwin
daa502357 Sync'd the DTD and Schema grammars.
7d0fc9e0b Som changes for SAX2 -rip
ca60fc98d Som changes for SAX2 -rip
8c925bb13 Finally fixed the problem correctly. Confirmed by NS spec, and all IBM devs... An Attr w/o a prefix should not inherit the Element's default namespace.
7feddfa5d No code change. Just a little reformatting :) -rip
300364a5b Minor update.
5e0bfca45 make sure make runs in unix mode on DOS
89d190b11 added information on how to build on Windows with the DOS shell
492c19281 Docs change to remove reference to SAX2 Configurable interface.
630b95a0e Feature http://apache.org/xml/features/domx/grammar-access did not specify the default value in the documentation.
66d61d2ab updated to get to par with the C++ version
35bc5883a Updates to match build output.
3e70054e9 SAX2beta bug fixes.
cfddffb0b SAX2beta bug fixes. (should have been with last commit)
7c533f3db fixed several problems in previous changes
c91c3c17b Bug#36 Fix: setPrefix must update the nodeName as well as the prefix
80b226a04 changed to cope with the fact that ownerDocument is null for a Document node
07ede8293 Document nodes don't have an ownerDocument
133843503 the internalSubset parameter of createDocumentType has been dropped during DOM Level 2 CR, updated the code accordingly.
2b8ed75e0 put back setInternalSubset which is used by DOMParser
a0a81a563 the internalSubset parameter of createDocumentType has been dropped during DOM Level 2 CR, updated the code accordingly.
a339161f2 the internalSubset parameter of createDocumentType has been dropped during DOM Level 2 CR, updated the code accordingly
3b011b33a updated according to latest W3C spec
cba21b845 Instead of commenting out the setURIForQName, and relying on the default being -1, actually set the default. -rip
8cf208ed4 Updated Makefile to fix build problems. Also updated build instructions to match. Now you can build the release packages by just having the source distribution package. Yay!
daf05ce7b Also updated docs that detail the contents of the various distribution packages.
cd53b656c Fixes to document type handling and support for DOM Level 2
5b064fc1f Bug#35 Fix: fixed the cache handling of getLength()
55a9356ee Fixed HTMLElement creation problem due to getOwnerDocument() returning null. (Contributed by Bill Sofko <bsofko@contrariwise.com>)
8592a023b The javax.xml.parsers package as specified by the "Java API for XML Parsers". This is not (C) Apache, because, since it's a javax package implementation, if something arises, I don't want the ASF to be blamed for it.
08aed918a The Xerces implementation of the classes specified by Java JSR 5 (Java Api for XML Parsing). Compliant to today feb. 25, 2000 specification.
6f45ba7f4 Removed class loading mechanism requiring JDK 1.2
972d8a65a Remove dependency on special processing of "init" target
4ffb70622 revamped all makefiles so that build can be done by simply typing make, without having to set any variables
4a3e18e27 moved common rules into src/Makefile.incl and made all makefiles much simpler
e4f51ccd3 Relaxed restraint of xml:space attribute for XHTML DTDs. The following is taken from the XML 1.0 Specification:
fdac46163 Bug#26 fix: changed to not resolve default namespace URI when validation is off
0288f2ac9 Bug#28 fix: fixed end tag <pre> -> </pre>
f09fa5a40 Bug#27 fix: changed default for namespace handling to true to match SAX2 spec
f1ef53b7e PR:34 Obtained from: Submitted by:rpfeiffe@apache.org Reviewed by: PR: Obtained from: Submitted by: Reviewed by: PR: Obtained from: Submitted by: Reviewed by:
a907fe8a1 fix for Bug23: Element Data not normalized...
b6709d168 fixed comments about NON-DOM methods
23e3b5b01 reorganized files and subdirs
6de59d1e5 removed unnecessary code (done in parent class: NodeContainer)
2b9826946 implemented proprietary method DocumentImpl.adoptNode
7ded70581 Xerces 1_0_3 release preparation.
6333d59d2 Wasn't touching src/classfiles_updated which targets in the top level Makefile depended on.
eaaf91a3c Update version number.
b097a462e Minor updates.
b2e78b2e7 A little subtle thing like a "./" :-O
9d26189c6 AndyC's fault: he used backslashes instead of forward slashes for the touch command in the Makefile.incl.
08b70b362 alpha -> beta
fd788f496 Fixed Bug#43: importNode now uses createElementNS and createAttributeNS when the source node is an element or attribute with a namespace. Cleaned up importNode to avoid several unnecessary casts, and allow importing nodes from another DOM implementation (which is one of the purposes of this method!) Reindented importNode to fit within 80 characters...
8d03cd36e Fix defect 48 turns sax namespaces explicitly
f05bca1ff Per 12/17/1999 schema draft fix by Kito D. Mann
6679b5718 fixed Bug #59: once item(index) has been called with index > length our cache is no longer worth anything, so ignore the cache in the next call
4529e1bdf Fixed bugs. Refer to bug report for information. PR: 60
98fbafea9 adoptNode must call setOwnerDocument to make it recursive
e82f5b3cb fixed setOwnerDocument: sometimes nodes is null
a7b44bd34 cloneNode must call adoptNode so that every cloned node is owned by the cloned Document
443cbf753 When an element is cloned, its attributes were cloned but the owner element remained the reference to the original element. Made changes so that the newly cloned attributes picked up the new owner element. PR: 62
6a55b6a8c Related bug that was revealed by fixing the cloneMap in NamedNodeMapImpl. When an attribute was being cloned, it was cloned with the owned attribute set to true. Wrong! Until the cloned node is added to an element, it is *not* owned. So this has been changed. PR: 62
d7628afa3 Attribute contributor for bug report. PR: 62
05dcd65a3 In applets System.getProperty throws a SecurityException. Thanks to Aaron Buchanan <abuchanan@inovacorp.com> and to James Duncan Davidson <james.davidson@eng.sun.com> for this
2b07c5c97 Element Nodes can not have Attr nodes as Children as per DOM - defect 65
fb0d13852 Update the BaseMarkupSerializer in order to not be strictly dependent on DOM Level 2. When the serializer queries the system and public IDs on the DocumentType, I catch the NoSuchMethodError so that reflection can be used if the DOM implementation is not DOM Level 2 compliant.
f60929010 Fixed caption element creation
c42b3686a Fixed element list, title and getElementsByName
6a53b8d27 First checkin
1e1ce5449 Minor bug fixes. Performance improvement, using separate printes for indentation and no indentation. Support for encodings. Support for reusing the serializer. Support for the upcoming Serializer API. PR: Obtained from: Submitted by: Reviewed by:
7b5f09cb8 PR: Obtained from: Submitted by: Reviewed by:
6185c73e0 setAttribute now checks whether the attribute node exists, and uses it if it does. Changed after ElementImpl.cpp rev 1.11
ba43626d3 added missing cast
0dfcd0e57 same fixed has before but for setAttributeNS
5f3c739af fixed getSourceLocation which the change of package name broke
15cc0c3c4 added some tests wrt exceptions raised when manipulating attributes
2c8f46c40 got rid of the owned flag on AttrImpl, use parentNode instead
6ccc0d567 Added whiteboard. Wil checkin the sources sometime tonight.
887ca5f63 Just checking in the sources. No build structure in place as yet
c139791bb SystemLiteral fix to account for relative URI-path submitted by Normam Walsh
c2a5874ec PHASE1: Creating new files for internal re-architecture.
3b1758dbf XML Schema Datatype support utilities Makefile
069379389 Validator refactoring added by Glenn Marcy to support Schema work Makefile
7f95fe347 Regular Expression
747d3b6fe XML Schema datatype support
774a48dd9 XML Schema regex engine
828a377d4 Factoring Validators code by Glenn Marcy
eae5dffd1 factoring DTD Makefile
6b68515f4 Validators Factoring for Schema
291628ca5 Validators Factoring for Schema
07e7fc40f Added Tom Changes to support Schema validation
261a037ea PHASE1: Adding new files.
5f56e6c2c Change to new style of Makefile
7c2727929 PHASE2: Merge changes.
c52aca052 Change fixed minor problem
660d36e27 PHASE2: Build implications of re-architecture.
90dcbfa6a Change for DOM2
78cb5f854 XGrammarWriter is officially unsupported at this time. It needs to be updated to keep in sync with the latest XML Schema draft.
63276c80f PHASE3: Removing old files.
04c6ea0be Added Schema and Factoring packages to Makefile
a3400d399 Changed Debug flag to off
dca1f5ba0 XML Schema Work PR: Obtained from: Submitted by: Reviewed by:
553ae7835 Delete for Schema Work
ba7c749b7 more XML Schema validator changes
1313e7a87 Forgot to update dtds
47d25f4ef forgot the proper ent file
ece9444fa Changes to build it with xerces
09e626fb7 Moved some of the classes from Crimson to the tree package as of now. Need to repackage them somewhere else. Maybe utils
35ae531ab Just using SAX2 events
89b433fc2 Changed build.xml not to use deprecated APIs of ant
87ae37a7b Put the Xalan/Xerces jar first in the style classpath
91740a69b got rid of element attribute from NamedNodeMapImpl, and change ownerDocument to ownerNode which is used instead
e8291262b renamed parentNode to ownerNode to make clear it's not always  the parent
04e15dbdd moved name attribute from NodeImpl to every class that really needs it, so that others (including TextImpl) are smaller
ebde7c6dd moved value and fInternalSetNodeValue attributes from NodeImpl to CharacterDataImpl which is the only class that really needs them, that way other classes (including AttrImpl and ElementImpl!) are smaller
3d5349a60 a mere reindent, but I just couldn't read that code
21c7fbf16 Truly no-op'd the DEBUG stuff. Wait a slowdown that was!
de0b4fb86 Pretty major reorganisation of the classes: NodeImpl is now only a base class that can neither be a parent nor a child. It no longer keeps both a reference to its parent, or element in case of an Attr, and a reference to its ownerDocument. Instead, only one or the other is referenced. When the node has no owner (parent/element) it references its ownerDocument and when it has one it only references its owner and relies on it to have a reference to its ownerDocument. A flag is used to indicate which state the node is in.
28b0f1dfd When validating a document with an associated DTD *and* namespaces are turned on, the validator sees the root element name specified by the DOCTYPE line and the actual root element as different strings. And since the check was just checking StringPool indexes, it signaled an error.
50c7673aa fixed getValue and setValue: for the deferred case synchronizeChildren must be called
af2dbf157 reversed the child node list order: when we only have a link to the first child appendChild is n^2 order, so instead we now store the last child and nodes are linked to their previous sibling. AppendChild is then back to constant time, and when we fluff the nodes up into the DOM later we simply build the list in reverse order.
216420cae added missing methods used by DOMParser
938423aec left over from previous change on order of node lists in deferred DOM
9906afac3 reversed the way we walk child lists related to grammar for efficiency
119ce6296 got rid of some unused code
de546658b most attributes only have their value stored into a single Text node, so getValue() is now optimised to avoid building a StringBuffer in this simple and very common case
0283f2288 Add WML DOM interface and implementation
29c474ea4 Include WML directory in the Makefiles
77c435db6 removed unused code
d5e18b4c6 fixed getOwnerDocument which returned null for Document children
eb6de39ca fixed setOwnerDocument
a4ea92d07 fixed cloneNode and importNode importNode of an EntityRef still needs more work though
0f7433c75 fixed setNamedItem and setNamedItemNS which failed to reset the ownerNode of a replaced element
7a7f90c3a Changed nextMatchingElementAfter to protected to override in HTML DOM
33cd00384 *** empty log message ***
15b59c601 made default setNodeValue really a no-op
304a418da Entity and EntityReference nodes are now readonly as due, EntityReference nodes also are populated when the parser hasn't done it
c9ddd11c6 fixed setNodeValue tests in cases where it's a no-op, added cast to xerces classe to allow building an entity node with its subtree
0f189a64a Made nextMatchingElementAfter protected
17002acfc implemented new methods: hasAttribute and hasAttributeNS
db684eda3 factorized some code to ease maintenance (a little)
f931c875f moved user data storage from NodeImpl to DocumentImpl, getting rid of one pointer on EVERY node\!\!\! \:\-\) I can't believe I didn't see that one earlier...
e1b0db386 one test printout wasn't guarded
5fb6c7aee fixed typo
dfd8b011f added to the javadoc a warning about downside of new implementation of userData
b1feb9baf allows userData to be removed by setting it to null
e1e6a3a87 added warning about removing userData refs as much as possible
a9323a667 we cannot free the parent information when fluffing up a node since we need this information when processing elements with IDs
8ca3d3591 added support for QNames
906cb41f3 changed version numbers for new release
5924cdeb8 changed version numbers for new release
c04457996 added wml to jar and packages
0a754dff7 updated to SAX2
4c8a9d598 updated for new release
f9434dec8 fixed the release date
4bd1e58ab updated to SAX2
6d8af2fc5 updated to SAX2
54266baaa Updated status, based on my latest understanding.
039228b49 Merge schemawork branch into trunk
2c35048d4 Fixing getAttDef() throw Null PointerException,   --ericye
eb0d13229 moved endElement event handler call to after validation
10e010a77 XML documents with "wide" branches causes an array out of bounds exception to be thrown. The validator, when resizing the array of children QNames at a given level, was adding new QNames to the original children array instead of the new, resized array. Since the array size was initially sized to 256, this problem appeared as soon as a branch was 256 elements wide. This bug is now fixed.
2111c4009 Xerces 2.0 Preliminary Architecture Documentation
e2508ff36 Bumped version number from 1.0.4 to 1.1.0 for upcoming build.
39ef4eadb Updated release information for upcoming build of 1.1.0
18cd6c6cc Update Schema support information for upcoming build 1.1.0
afa1b49f1 fix/restructure datatpe WIP
5b637a429 Updated Schema datatype support info
2e1a4fe24 bug fixes, --ericye
ad126e6d8 bug fixes, --ericye
cad915dcf changes to make it conforming to 04/07 schema spec, --ericye
6c50d7039 *** empty log message ***
180a21ab6 1) Updated content models so that they didn't require new element    children arrays each time -- the same array can be reused as    needed. Changes already made in validator to do it this way. 2) Fixed the setting of the attribute type names that are exposed    through the SAX interfaces.
1d2db5e75 bug fixes, --ericye
8e84c961a attributes number now include default with value, --ericye
7549c6762 Exposed enumeration attribute values as string (SAX). Removed dead code.
365d4c9f2 fXXXSymbols to constants, --ericye
09c8218df framework api docs was out, --ericye
8807c2a54 Updated Xerces-J 2.0 Design
4200e3882 fixed bug on source distribution
c3ddf981e fixed WML makefile not included in source distribution
391d8084c Added new DTDs for removing references to sbk: in docs
e281365d5 add attributeDecl from another schema and misc bug fixes, --ericye
4a943090a fix reset didn't reset fXsiURI, --ericye
17c5bef36 requirement for FOP generation
c8f943383 Put in a list of ignore files in the javac task for all the classes that don't compile. Would suggest that all the committers on xerces-j keep this file uptodate so that ant can also be used to build xerces-j
0aaa267e0 Changes for the latest SAX2 and DOM Level 2 stuff
d327c3b03 InputStream derived class needing a close to release resources
9f75937e8 Added javax to the jar task so people who want an alternate JAXP compliant parser can check out the sources and build using ant.
ca9df4cd9 delay the creation of the attributes map as much as possible
3fe1e48db changed default implementation of sync methods to change their flag
62635f2f0 added method to isHex(String )
5451e285d include and import support, misc bug fixes--ericye
f8f83a252 misc bug fixes related with schemaLocation--ericye
2c42b00cd delete all schema files
9daa3e755 delete old DTD files
970c587d1 delete old common files
6c532d19c fInputStream could be null
484fcc569 changed NamedNodeMapImpl to a vanilla implementation moving specific code related to handling attributes into a new subclass AttributeMap. got rid of the direct reference to the default attributes map so that to save a pointer, instead we now have a flag that says whether there are any, and if there are any we do a little more work to find the default attributes map back. But this only happens on attribute removal so it's a good trade-off. This version no longer supports dynamic editing of the default attributes but we do not really support this operation anyway, and if we did that's not the way we'd want to do it. Instead of doing it in a lazy way, which has an overhead on every operation related to attributes we'd better do it on user's demand.
f33e48749 Bug - fix is to assign the array reference
4d4a25a8e Added simple sample that generates a DOM from scratch and uses serializer since we receive so many question about how to it
a4c790da3 Added simple sample that generates a DOM from scratch and uses serializer since we receive so many question about how to it
761ededa1 Added simple sample that generates a DOM from scratch and uses serializer since we receive so many question about how to it - lets try again
27fced950 Fixed ANT makefile to build, package, test and distribute Xerces-J
3316cc034 Needed for ANT
96642efb7 misc bug fixes on schema validation  --ericye
dfdff410c misc bug fixes on schema validation  --ericye
885775bb3 Added target 'all' and fixed a couple of bugs
39bdddb57 minimize use of instanceof operator  --ericye
bafdc5723 changed to be suitable for Windows
5e75a9ce3 performance tunning,  --ericye
3bbd83a7b Re-added grammar access to the DOMParser. In doing so, I fixed the DTD scanner so that it calls the XMLDocumentHandler.DTDHandler methods.
90da27a2c Forgot one file on last commit
451fee32a Will now prepare when one of the DOMSerializer methods are called
1e150d048 Removed whichDocType methods
5010a4089 fix a bug when <element ref= can cause infinite loop --ericye
771e2cfdf turn on Dynamic Validation, if with DTD
135ffa887 Fixed missing method bug
6cfb7baab default attributes weren't marked as unspecified when namespaces are on
4bb3fab00 Dynamic Validation --ericye
5da484623 Comments in the DTD don't 'leak' into the document anymore.
ba69da025 null the fInputStream so we don't ever attempt to close handle twice
1a8dafa94 Fix a bug regarding recursing ComplexType usage pattern, e.g.: <complexType name="a" ...>     <element  name="b" type ="a".... minOccurs="0"....>  --ericye
980fd90b2 Fix a bug regarding recursing ComplexType usage pattern, e.g.: <complexType name="a" ...>     <element  name="b" type ="a".... minOccurs="0"....>  --ericye
33d27ab38 Fix a bug regarding recursing ComplexType usage pattern, e.g.: <complexType name="a" ...>     <element  name="b" type ="a".... minOccurs="0"....>  --ericye
31291dfe3 Introduced <container> tags for the hidden pages
0d4c5484e fixed problem with cloning default attributes
69e0dabca Added Version id
1d08a6160 Changes for new datatype factory architecture
1e0484cef Containers must have source
9e67b0117 Included a new target 'jars'
88df2c716 Sync'd up with latest sources
9d50d245b Corrected Version number that was accidentally overwritten
591a7b90a Updated version number
d227102dd Version Id fix
7918f876f Kento patch
dd948484b Fixed problem with CDATA remaining open in contained element
32a7e45e4 changed copyright to Apache for incorporation to Xerces, based on James Duncan authorization. See http://xml-archive.webweaving.org/xml-archive-xerces-j-dev/0545.html
dbe236a9c changed copyright to Apache for incorporation to Xerces, based on James Duncan authorization. See http://xml-archive.webweaving.org/xml-archive-xerces-j-dev/0545.html
cec129b98 removed some unused code
5d007b79e integrated JAXP to Xerces based on James Duncan authorization. See http://xml-archive.webweaving.org/xml-archive-xerces-j-dev/0545.html
0e954cac8 updated the README to allow building the doc with an older version of the tools
ae57cbeb1 a bunch of bug Fixes on schema validation  --ericye
c06d43427 turn on the namespace when DOMParser read the schema --ericye
6be374df7 turn on the namespace when DOMParser read the included or imported schema --ericye
7581c5c07 changed supports() to use ownerDocument() which is never null
a66682505 Release 1.1.1
17b74e354 release 1.1.1
f1d9d6c08 Now also runs the tests
f2f7cda9a Now also runs the samples
8ff2cff0c Added classes.zip in the classpath
bea551dc3 integrated second set of JAXP files that was left over
c3257a9e8 Need to Revisit architecture - added hack from Kento's to use clone
a4abd8522 Cloning object is not really needed in this architecture
02e19d0b8 a few bug fixes on complexType and element --ericye
ffeac47ef fixed decimal type bug related to integer enumeration
49de42bab bug fixes regarding maxLength, XMLException constructor --ericye
fade105fb Updated design for Xerces-J 2.0. Use the 'design.xsl' stylesheet to transform the 'design.xml' document into HTML.
4470d810a fixed bug with max/min length
719ed15ef 1) Updated "New Features". 2) Fixed documentation bug that still referred to the SAX2 Configurable    interface.
501d3c626 Removed 1.2 call to File#toUrl() to compile under 1.1.
f8ef5a40d Added constrain encoding required for binary type
67d115de4 updated copyright notice to the standard one
7769bca7a Fixed bug for grammar access when the instance document contains a Schema grammar. This caused a NullPointerException.
567a1f1ad Refreshed the jar file
31b63263f fixed yet another bug in cloneMap and made it faster, also reverse the way cloneContent works so that it changes this rather than the map given in argument
caeb10774 Need to discuss this bug with ericye - this is the reported enum bug at Xerces
dbe90b57c Checked DOMImplementation level because level 2.0 implementation do not support getLocalName() this should fix bug reported by Chris Halverson on June 13, 2000
748093190 String index out of bounds exception when scanning QName fixed.
39b027501 When parsing a document with a Schema, the DocumentType node was always returned as null. While this was not a big concern, users asked that the document type node never be null. So now this is fixed and the document type node is always created.
d9c2cd62c Andy fix to Make sure namespace binding is defaulted
75cfac170 Phase one of implementing the <any/> element in XML Schema.
c761db8c3 Schema grammar wasn't being added to the GrammarResolver.
55cbe0ffe The CMAll class should have been called CMAny. Oops! Also, it needed to be added to the Makefile.
84146121d Fixed logical error that caused DOM Serialization bug - please do not change - It may seem counterIntuitive but we really it makes sense - Any node which has not been fluff needs to be fluff up before we serialize
35344cc6c 1) Fixed minor bug in DFAContentModel for <any namespace='NS'/>.    I was only handling <any/>. 2) Reported limitation of "processContents" attribute through    error handler. 3) Added reminders in TraverseSchema to go back and localize the    error message. TODO: Remove all output to System.out/err.
1909cac85 Cleaning up traverse functions, --ericye
9bebeb313 1) Fixed minor bug in DFAContentModel for ANY. 2) Added support for ANY in mixed content models for Schema. 3) Updated XMLContentSpec#toString to produce "meaningful" output    when a content model validation error occurs.
bb5a8cc17 fix a bug : getTypeInfoFromNS() , --ericye
0745946fa Namespace URI not being associated with attributes in deferred mode. Fixed.
4b2262744 fix a bug : when switching to another SchemaGrammar, didn't save the URI to the right variable , --ericye
6fd92792a fix 2 bugs :  1. traverseIncludeDecl,  fSchemaRootElement should change accordingly  2. fixes regarding no-targetnamespace schemas, such as personal-schema.xml.  --ericye
37a693afb Fixed problems with String Datatype Validator minLenth, maxLength, Length.
b9748b5e9 fix a bug :  traverseAttributeDecl, localpart was not set in all code branches, so throw NullPointerException somethimes.  --ericye
026998064 Added resetRegistry method
2db837eca change fRegistry back to non static member
082a391c3 reset DatatypeValidatorFactoryImpl before parser a new entity
581ef983e Default base type of simpleType definitions when not specified. This was causing a NullPointerException.
a96eb5c13 RecurringDurationDatatypeValidator is a Work in Progress - deactivated trap
f166309c3 Added checks so type can not be null and cause a trap
01f2ab0f1 The validator was incorrectly removing prefixes from elements in the instance document that were declared locally in the Schema grammar. I can understand the reasoning behind this decision: it revolves around the elementForm attribute in Schema. But this does *not* change the way that namespace binding works.
8f947bfdc fix traverseAttributeDecl: using the wrong key to look up a datatypevalidator  --ericye
54e764915 fixed length check bug
357e15eed minLength > maxLength in both branches  --ericye
484254472 catch exception and report error when validate attribute value with datatypevalidator  --ericye
e7a8e9553 catch all exception and throw them up as InvalidDatatypexxxx Exceptions
171273097 fixed some messages in pattern validation and lexic. comp
bb46beeba fix 3 bugs:  1. in expandContentModel in the case of {n, m} and n =0;  --ericye  2. separate out attributeFormDefault from elementFromDefault.  3. when not target NS, everything should be in the same default NS,       no exception for localy defined element and attribute.
e16a909d5 follow up today AndyC's fix, do the samething for the attribute. --ericye
a0bbc4dd8 It enables character class subtraction like [a-z-[c]] and fixes some bugs. Kento Tamura fix
2e780e7e7 It enables character class subtraction like [a-z-[c]] and fixes some bugs. Kento Tamura fix also messages
7f918f848 It enables character class subtraction like [a-z-[c]] and fixes some bugs. Kento Tamura fix
bcd9d8612 It enables character class subtraction like [a-z-[c]] and fixes some bugs. Kento Tamura fix
b4092fa9b added space to message
cf536b226 fix isEqual() method, when  compare any leaf from a certain namespace, should only compare their URIs.  -- ericye
f81f60720 Fixed bug in deferred DOM implementation that prevented adjacent text nodes from being pre-normalized after parsing. This caused parsed character data that contained references to the pre-defined entities or character entities to appear in separate text nodes.
bb45d0a2c Change to Pattern facet - only need to instantiate RegularExpression once
476df008b Added URI class contribution made by Paul Eng and iClick.
cfdf691fa 1) Turned on namespace support for ALL parsers, by default. 2) Added feature to enable Schema support to be turned OFF.
443da0c5d Updated documentation for next build and release.
9a6741938 Fixed Lexical comparison in String and QName types
0f6f037e0 Performace- moved instantiation of RegularExpression to the facet so we don't create a RegularExpression object every time that we validate if pattern facet is present
512e072bf fixed lexicographical comparison logical bug in String and QName validators
018242654 Update release informatino.
8c281e2ed Change to allow parser that reads the Schema document to use the entity resolver that is registered on the parser.
64df460d1 Update version number in anticipation of next release.
8eb165dde URIReferenceDatatypeValidator
c90b5c4b8 The attribute declaration syntax changed from using "minOccurs", "maxOccurs", and "default" to using "use" and "value". But the DTD grammar access code was not updated to use these new terms. This bug is fixed.
d585da026 Performance update to XMLValidator to create less objects.
93af9c8d8 Performance update to XMLValidator to create less objects.
4f77446d3 Added argopt like class to be used with Samples
f2f4389f0 added argopt like class, added switch to turn on/off validation, namespace, schema support, etc.
30e80f608 added argopt like class, added switch to turn on/off validation, namespace, schema support, etc.
ed4ec02ec Fixed personal.xsd file to comply with 7 Apr 2000 Schema WD.
d65649a82 Syntax error -- missing comma.
e97800110 Removed NonValidatingDOMParser wrapper class because we are adding a more consistent and easier way of setting parser features into all of the samples.
7f46497cd argopt like utility used by SAX and DOM samples
b430bbc0c remo argopt like utilities from dom package
78dd8d49e updated Makefile
27692cd2f Typos in Makefile.incl.
8380f9633 samples update
10b30522c updated Makefile
8f418ea1e fixes to previously commited code
c7d129a9f fix a bug in traverseSimpleTypeDecl, since we only have one SimpleTypeRegistry, need to use localpart as the look-up key.  -- ericye
05ceb680b fixes to previously commited code
6f4567b18 fixes to previously commited code
f4f80be38 Added id doc
4143eab86 So we can build source/samples/util dire
bcdc23018 fix a bug in resolving the element type in method validateElementAndAttributes.   -- ericye
e458ebd69 stdopt changes
652257ff5 SAXWriter and SAX2Writer with stdopt
cd34ecbe9 fix a bug in validateElementAndAttributes, don't need to fall back to Top Level Scope anymore because now we always bind the empty prefix element to empy prefix namespace first.
5c19c465c Fixed Derivation by list flag
178f7f257 Updated documentation.
f3040c525 fixed another MinInclusive bug this one was in DecimalDatatype
551e70b13 Improved help message.
529463a89 Typo.
fb481ba4e Fixed SAXParser so that it would call the registered DeclHandler and LexicalHandlers for SAX2.
832ad5f36 multiple run Arguments
200fb193c support multiple files
b375a6f12 stdopt
0c32c8deb Oops! Removed debugging output.
969ee4d77 Problem with the simple content model -- it would only signal errors in simple sequences (e.g. 'a,b') when BOTH the localpart and URI were different instead of when EITHER the localpart or URI were different. This bug was introduced by me (oops!) when I updated the content models to validate against namespace information for XML Schema. Now it's fixed.
09d6587cc Turns out that simple choices also had the same problem.
754516a15 The whole damn thing was broken. It should be fixed now.
4a72ed32a scope binding should happen before switching to a different schema. -- ericye
b187f804f Fixed retarded way to keep argument - order was reversed
571c8a8de Fixed it it runs in 1.1.x
51bb159db Fixed it it runs in 1.1.x
ffe9ff38a validation message should default to false
301098a08 bug in resolving element. -- ericye
fae9d634b when no targetnamespace is defined, only element will put into the default Namespace, attributes still attach to its containing element. -- ericye
dbca7f821 added ability to do -v -c file and  -vc file
f32163a43 Samples jar fix.
04db6ae68 Update Stylebook to print UTF-8 HTML instead of UTF-16.
6fe7eaf55 added ability to do -v -c file and  -vc file
e0bdcda5b added ability to do -v -c file and  -vc file
4481b54ff When creating the document type node, the code wasn't checking to make sure that the document impl wasn't null. Therefore, when users set their DOM implementation by name, the DOM parser would throw a null pointer exception. This is fixed now.
d705163e0 1. set XMLDTDScanner's fNamespacesEnbled flag. 2. bind the prefix "xml" since it is the only known(predefined) NS .
bb8e1d1d1 Change to allow subclasses of DocumentImpl and DeferredDocumentImpl to take advantage of the extra features of our implementation -- setting IDs, grammar access, etc.
ac28aff2e Added this testcase to test for regression in future releases
6f1fe4498 I made a mistake in my previous comit.  There are Nodes which don't have the SYNCCHILDREN set to off.
0832e71ac Removed redundant synch code.
f980de8d7 Improved document-class-name property code.
94bdee269 misc. bug fixes.
e54b69b2f SAX2 declaration handler was not getting the correct content model for elements of type ANY or EMPTY. This is now fixed.
1a3173412 SchemaGrammar takes more information from a Schema, and bug fixes related with Group and Attr group reference from another NS.
328301411 fix a bug when <any namespace="more that one uri" -- ericye
a84121f50 add wildcards element to model groups besides within complexType -- ericye
f62b3dd17 setNamedItemNS failed to set ownerNode
fdf0e4b29 This fixes a problem with parameterizes entities such as: as the one found when we have in a dtd such thing as:
0ca675578 1. parse out block, final, abstract for both element and type, and nullable for element, 2. save these properties in the SchemaGrammar --ericye
e2e0440bb add xsi:type support in the valid cases. --ericye
592ae3139 create a message id for generic schema error
04901a5f5 Updated to go with latest ANT
f6828c61a Now does not fork a new process for Stylebook docs, bug resolved
755b899c9 Does not use System.exit() call inside Main, enables running within same JVM in Ant
3cb968002 Updated to use new xerces.jar and xalan.jar
72880700c duplicate elementDecl is allowed as long as they have the same type definition. --ericye
4c1e4f80c minor reorg to make the code more modular: updates of Range and NodeIterator objects is now done via notification to the document.
724c59042 global renaming of some internal methods, I too wish I got them right in the first place...
a1fda09b4 Yet another change to make the DOM smaller: We used to have a change count on every (parent) node, so that we knew what subtree changed. But since only DeepNodeList really use this today, the gain appears to be really small compared to the cost of having an int on every (parent) node plus having to walk up the tree all the way to the root to mark the branch as changed everytime a node is changed. So we now have a single counter global to the document. It means that some objects may flush their cache more often than necessary, but this makes nodes smaller and only the document needs to be marked as changed.
97797d315 Change element form attribute behavior to be 100% consistent with Schema spec
dc3f1d213 1. fix a bug in traverseSimpleTypeDecl. 2. add a convenience method to Grammar.java. 3. fix a bug in TraverseComplexTypeDecl: concatenating its own contentspec handle to its basetype's only when it has one, otherwise should copy its baseType's
fdd74b6ad added code to update the cache (lost in previous change)
42188be95 fixed cache update code (again, I hope I have it right now!)
37a44adce Fixed: xercesSamples.jar did not have util/Arguments class
40f5f6159 positiveInteger minInclusive = 1
e210cad9d Added James Duncan fix suggestion to not compile RevalidatingDOMParser
78a35e3ee fix a bug in resolving element decl type definition.
f4afa9f67 Patch to fix null format exception
f5bc32a5f Commented out entity that does not display properly on NN 4.7
0ecfd3569 Patch to fix null format exception
5453aaa1b Changed methods to public modifier
8943ca49e Need to make sure that nodes are fluff up if we are calling clonenode()
d1ba42958 Fixed Makefiles so whole dom.tests package can be compiled
cad324fed add more description to feature " create-entity-ref-nodes" --ericye
5224e1a31 1. clean up EquivClass processing. 2. add equivClass dimension to SchemaGrammar element decl pool --ericye
94649dba0 Now has exit() in Main
32e136f86 Added full equivClass support in Content Models and validation --ericye
02d115bcc Added EquivClassComparator.class --ericye
7a1c7117d bug found and fix suggested by David.Blankenship@kla-tencor.com: should have used EntityResolver to resolve the schemaLocation, --ericye
2555c6b3c change release number in prep for 1.1.3 release
89266c9eb doc changes for 1.1.3 --ericye
6e4c463c5 change release number in prep for 1.1.3 release
1d6fb52f5 put back in code that was inadvertently lost in 1.6 and which allows xml:space to be declared as only having one of the two possible values
fe4f55747  Fix for BUG:SAXParser endElement reports incorrect local name reported by Wiggen
ab622a7e8 Eliminated dtds
285c935b8 Made Stylebook as a separate forked process
18ab37d31 clean up XMLValidator
591cb97c7 Fixed bug reported by Philippe MOUAWAD, on XMLContentSpec toString method where we generated incorrect content models. e.g From: "Philippe MOUAWAD" <philippe.mouawad@effix.fr> Reply-To: xerces-j-dev@xml.apache.org To: xerces-j-dev@xml.apache.org Subject: Bug in DeclHandler Date: Mon, 10 Jul 2000 11:23:32 +0200
e583b25b7 add a item, --ericye
d7e4702af rewrote code updating the linked list on node addition and removal. I believe it is now easier to read and it uses fewer tests so it is also a little faster
a87da6f21 Fixed bug reported by Michael Brundage, This bug occurred when you xml document loaded following DTD  http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd
dfdfef552 added new Element.hasAttributes method that just got approved by W3C DOM WG
86bfad78f validate ID, IDREFs with Schema, --ericye
acf07a0e1 forgot to remove debugg printout, --ericye
397581c1c set the list for addAttDef, --ericye
35420ccf7 fixed minor problem with the any #PCDATA part of the toString
dbec73956 added call to synchronizeData to new method hasAttributes()
1c43df43b hasAttributes() got moved from Element to Node
5c1e2bebb turned MutationEvents support back on (checked in by mistake)
892ac6926 added anyAttribute Support
f0cbfd1ad fix a error message when element has EMPTY content type. --ericye
70ab2180e Fixed problem where you couldn't validate using DTDs with namespaces turned on. Now this is fixed (hopefully).
07e152ba7 fixes regarding a bug with MixedContentModel that caused a ibm conformance test case failing.
d14907ba9 This commit fixes DTD validation when used with namespaces. The previous fix worked on standard XML files with DTDs that didn't use namespaces at all. This allows all three combinations to work: XML Document using DTDs when
679e5518d fix a bug when DTD validation, with namespace on and there are prefixed-attributes in DTD:
84a2b0138 Another one in addDefaultattributes,  when DTD validation, with namespace on and there are prefixed-attributes in DTD:
aaf9fa91b release notes update for  1.1.3
b4767c7ad initial version PR:
6f4e11a3f Changes: Moved some "features" into a "supported standards" section. Rename from Xerces2 to XRI. Add a "conflicts with <other-requirement>" tag on some items. Added a numerical index.
a965d977d My previous fix only took care of fixing complex PEDecl in ATTLIST one case while breaking the other which is PEDecl in ELEMENT Declaration:
c59e6b299 fkup in line 691 PR: Obtained from: Submitted by: Reviewed by:
45633e166 Finish Enumeration by list for String and also added fBase type check PR: Obtained from: Submitted by: Reviewed by:
dfbc7e436 Fixed some addition problem with related to String List derivation.
c99092307 Added Max,Min,Inclusive,Exclusive boundary validatio in Decimal and added Basetype validation
c3b309a3b Add the UTF8 BOM check: skip it if find a beginning sequence of {0xEF, 0xBB, 0xBF}.
fedc8338c Put back name as Xerces2 / XRI pending vote results. Split up 13 into individual requirements    kill subrequirement a), subsumed by 12 Change wording on 28 to make JDOM one among many equals Make 33 reference XML Fragment Kill 27 & reword 4. Add new requirements     38 Relax     39 Gzip/compresssion/encryption
e36ebdbb0 fixed BigDecimal '+' bug, this shows in versions earlier than 1.2 causing a numErrorException to be thrown if value is like '+2.33'
a299972ec Message for boundary condition check
cdd5b1bc6 Added Facet consistency and boundary check
ea0a11dbe 1. Modified the data type registry to be keyed by uri,localpart pair. 2. added xsi:type support for simple types.
4f02aebe1 UTF8Reader.java
302448e04 We should check UTF-8 bit distribution in copyMultibyteCharData. If use data is erroneous e.g. outside the range 0x80 first byte we will eat the four characters, this will cause the right end bracket to be eaten and the erroneous message and a trace dump like: <!DOCTYPE doc [ <!ELEMENT doc (#PCDATA)> ]> <doc>�</doc>
fd7fd43c0 DecimaDatatypeValidator.java
09b104458 Fixed, problem shown by testcase: sax.SAXCount -v ibmd3_2_8v01.xml [Error] ibmd3_2_8v01.xml:12:27: Datatype error: Constrain encoding required for binary datatype. ibmd3_2_8v01.xml: 3415 ms (1 elems, 10 attrs, 0 spaces, 36 chars)
dbe4f1711 previous version only supported '7bit' encoding, so I added '8bit' encoding and fixed problem reported on Xerces-j mailiing list about out of boundaries array access. Also give code and decode static access.
848989b28 This fix tested the case where we have an incorrect UTF-8 mutibyte such any of the following sequences: f0 90 80 5f f4 8f bf 5f f2 8f bf 20
67cbf0cac scanInvalidTest reported incorrect value for 3-byte multibyte valid UTF-8 representation in Unicode. Old code just did this incorrectly.
1296cab5e endDTD never gets called when there is only internal subset.
e4f960b9e if a complexType has a base type whose content is empty, and this type has not "content" value, no content model defined, then it is natural it should have empty content.
f9beaba59 This is newer build of stylebook jar file that solve the problem of generating Documents in Unix systems. The problem mentioned above also break our automated build.
f0fb37aeb Name changed back to Xerces2
b424bb280 recover the behavior to be in line with Xerces1.0.3: - when validation is off, XMLValidator still provide attribute type and default data to the pipeline. - a feature will be added later on to turn this off, by default will be on.
bd201aab5 DocumentImpl already implements createRange but it does not declare that it implements interface DocumentRange. This is the first fix among for a series of bugs related to DOM2 Range implementation.
68dd1a0b6 The current copy of stylebook-1.0-b2.jar has current dependencies on Java 1.2 and can not be run on 1.1.x systems. This caused a bug on the automation build. I am pulling the fix that I commit yesterday until I can fix this problem.
29b7d02f6 in xerces 1.1.3 DocumentImpl.importNode drops attribute values;
105b61ec6 added an attribute to the import test
3d5e0761b undo previous change to importNode, Attr nodes carry their value as their child nodes, the value is imported through imported its kids, which is obtained by enforcing a deep import, dom.mem.Test works fine so it is unclear whether the reported pb is real
6f3d54243 fix a bug: - element children in Simple type content was not checked
6d84f80de This fixes the problem where file are not found if directory name has spaces.
c9b7cd651 This is a fix  for a problem reported in the Cacoon list where we drop the URI from the endOfElement event.
25b9a052b add feature load-DTDGrammar.
f9372a414 fix a bug: should not have switched grammar when validating is off
6043b5f99 The system Id of an external entities must be based on the system Id of the entity where it is declared and not where it is used. This is based on a patch from Philippe Le Hegaret of W3C.
50da85698 removed debug trace left over in previous commit
9a089ea99 when a resolver is used, the systemId and publicId must reflect what the resolver has returned. Based on a patch from Norman Walsh of Sun
7f06aca27 add new feature: element wildcard any with processContents ='skip' and 'lax'. also fix a bug in traverseComplexType.
278dd3783 WIP- Migrating ATTValidators from XMLValidator to Schema to unify all validator.
d290a80c4 WIP- Migrating ATTValidators from XMLValidator to Schema to unify all validator. PR: Obtained from: Submitted by: Reviewed by:
3a9ecacb3 add new feature: element wildcard any with processContents ='skip' and 'lax' fix a bug regarding switchGrammar
c799ba6d9 Fix a bug: Ahrrr!!!, another corner case in ComplexType.
21c0ec4eb Added more ID, IDREF functionality to merge DTD validators and XML Schema validators. Also added Message communication mechanism.
b168d1678 Arnaud: addDTDDefaultAttributes should occur before the namespace binding.
15bbd530f chang Feature ID: "load-DTDGrammar" to "nonvalidating/load-DTDGrammar"
290759cb2 Fixed minor, major code passed when encountering invalid IDREF PR: Obtained from: Submitted by: Reviewed by:
d6db54fef Migrated ID,IDREF,IDREFS code to validators. Still working IDREF and IDREFS but most changes should be now at the validator level. I will continue moving the rest of the ATTValidators....
17e8515d0 More changes dealing with ID, IDREF, IDREFS. Specifically about reseting the ID pools
19dc4a318 IDREFS are IDREFType derived by list. Needed to implement the list part to deal with IDREFS
3fe7fd2b5 change feature load-DTDGrammar to load-dtd-grammar, add this new feature's description to features.xml
dd904730a Added the call for attributeDec.list -- IDREFS PR: Obtained from: Submitted by: Reviewed by:
09bfaa471 Connected ID and IDREFS table of IDs. PR: Obtained from: Submitted by: Reviewed by:
1695e2600 ID, IDs connection PR: Obtained from: Submitted by: Reviewed by:
e3a3ed46a fix a bug in resetCommon(StringPool)
e99ebe6b2 Added strip comments feature
da1a539f0 ID, IDREF, IDREFS validator work. Fixed Schema reference to validator. PR: Obtained from: Submitted by: Reviewed by:
f1604fba1 ID,IDREF,IDREFS unique validator PR: Obtained from: Submitted by: Reviewed by:
8a18098c0 Fixed bug where invalidStandaloneAttDef changes value of fTempAttributeDecl PR: Obtained from: Submitted by: Reviewed by:
aec418030 fix a bug in getAttDef()
40a82e2b0 Fixed error message PR: Obtained from: Submitted by: Reviewed by:
139089696 WIP- Entities replace to unify validators and added IDREF Schema message PR: Obtained from: Submitted by: Reviewed by:
cabfc4580 changed synchronizeChildren to not affect the current state of the readonly flag. This effectly prevents a NO_MODIFICATION_ALLOWED exception to be raised when this is called recursively (because there is a ref in a ref
134e3b071 cleanup validateElementAttributes
41d6c0996 cleanup validateElementAttributes:
4fe3dc2a4 added a replaceChild method that is consistent with insertBefore and removeChild. This however needs to be revisited, since all of this code allows to change the document element and the document type which, according to the spec, is not allowed in any way.
2d5122457 added a flag on the document to store whether mutation events need to be fired. This is off by default and turned on when an event handler is registered. It is also turned off during synchronization in the Deferred case. Tests show a performance gain of up to 20% in the non deferred case!
8e376e727 Datatype consolidation, fixed bug with error message in ID,IDREF, IDREFS PR: Obtained from: Submitted by: Reviewed by:
81b267a8a Validator consolidation, moved ATTValidator ENTITY, ENTITIES to common datatype validators PR: Obtained from: Submitted by: Reviewed by:
bfda9ffb4 There is another place need to apply mask 0x0f.
696564b83 Validator consolidation work, NMTOKEN, NMTOKENS PR: Obtained from: Submitted by: Reviewed by:
d939ba9d6 Entities consolidation - Fixed Entities PR: Obtained from: Submitted by: Reviewed by:
4a4c7b28f Remove debug statement in SAX2Count.
0bf90bb27 fix bug #7 in bluefeet Bugzilla
d39369614 setOwnerDocument must changed the child nodes before the parent otherwise ownerDocument() returns the new document instead of the old one for leaf nodes and synchronizeData() fails. - bug report from Matt Hastie
8ab98e053 changes for 1.1.4
c03d90955 startElement creates and adds to the document a doctype when there is none, so that the grammar can be made available through it. This is now only done if grammar access is requested and if there is anything to copy
a737c17cf added mutation events test program
c7ac7b071 added mutation events test program - from Joe Kesselman, IBM
7e28f35c9 fixed the signature of dispatchEventToSubtree which can be called with more than just a ChildNode in argument (AttrImpl for instance)! This has been broken for a long while, I guess nobody is using this code...
64c7cf2d3 1) Added sample source code to binary release per Mikael St�ldal's    <mikael@staldal.nu> suggestion. 2) Fixed spelling mistake. (unser -> under)
e08d8ed70 Fixed bug, when normalizing entity and standalone is "yes" should issue an error Failed testcase not-sa13.xml and no-sa12.xml PR: Obtained from: Submitted by: Reviewed by:
11ec16d71 Escape less-than in character content.
9d2a8bfc5 Moved storage of event listeners from NodeImpl to DocumentImpl. They are now stored in a hashtable where the node they are registered on is the key. That way we save one pointer on *every* node. Tests show a gain of 3 to 5% in memory and around 12% in performance! Of course this is in the case where there isn't any listener. In case the mutation events mechanism is actually used this is going to be slower, since event listeners need to be looked for in the hashtable on the document. But the code was broken for months without anybody noticing, so only a few if any will see a difference. While everybody will gain from the improvement in memory and speed. One more drawback is that, just like with userData, a node with listeners won't be GC'ed until the document is. Weak references would solve that.
6d2024b4b BaseMarkupSerializer.java
61ce6f94d fix a bug : when a element is declared as of a type from another Schema, need to change the fCurrentElementIndex to be the template elementIndex of that type cause the grammar will be switched.
2a9e3738f Added ID Hashtable reset message like in IDREF, IDREFS PR: Obtained from: Submitted by: Reviewed by:
450d28aba Fixed problems where we were not resetting ID,IDREF,IDREFS buffers in bett. calls PR: Obtained from: Submitted by: Reviewed by:
033c0d3fc *** empty log message ***
98996599a Fixed case for INF, -INF, NaN PR: Obtained from: Submitted by: Reviewed by:
fec0fe412 Fixed bug with message when float not valid PR: Obtained from: Submitted by: Reviewed by:
4770410ee Fixed message when checking float content. Should said float not double. PR: Obtained from: Submitted by: Reviewed by:
8701175ba bump version number to 1.2.0 PR: Obtained from: Submitted by: Reviewed by:
67cbeceb9 Prepare Makefile for 1.2.0 Xerces PR: Obtained from: Submitted by: Reviewed by:
7b3b14260 Preparing for Xerces 1.2.0 PR: Obtained from: Submitted by: Reviewed by:
7ad9bf577 Prepare for Xerces 1.2.0 PR: Obtained from: Submitted by: Reviewed by:
585b74be0 changes for 1.2.0
0a2f99517 changes for 1.2.0
2f3bd5b64 Ommitted / in end tag so it broke build- Fixed PR: Obtained from: Submitted by: Reviewed by:
8a9483f29 the deferred DOM uses the string pool, so it cannot be reused in subsequent parses. To avoid this a flag was added so that when we reset the parser we create a new string pool if the current one is being used by the DOM
f6ce6072d Design documentation for Xerces 2 concept implementation moved to java/design/ under xerces_j_2 branch. Check the following URL for web access to pages:
addc0b969 fixed tests dependency
400838872 Fixed defect reported by   Dave Finkbeiner about Double datatype not checking boundary correctly.
906575a3a Fixed bug reported by David Finkbeiner where datatype boundaries are incorrect for float. See DoubleDatatypeValidator since we put similar fix. PR: Obtained from: Submitted by: Reviewed by:
1e2743212 typos fixed
c7002ec63 Thanks to Kevin Kress <Kevin.Kress@oracle.com>. The directory in the File was never considered as a part of the file name.
59ff53261 *** empty log message ***
0c079a8be update to reflect votes on requirements 1-7 PR: Obtained from: Submitted by: Reviewed by:
c4a351bbf setNodeValue was sending the new value instead of the old value in MutationEvent - bug report from Paul Matchen
3536ed0fb because in many cases we may have to deal with both nodes with a namespace and nodes without any, NS methods through findNamePoint must handle both types of nodes.
3f3ccf281 fix a bug when maxOccurs = 0, minOccurs =0
b891282de change package PR: Obtained from: Submitted by: Reviewed by:
6a625a613 changed again findNamePoint to avoid a null pointer exception and to only consider the nodeName when namespaceURI is null
f4c4a0ea3 fix a bug in method ContentSpecTree().
e2eabdcf3 Changed help screen - error was that it said that validation was on by default. Validation is off by default PR: Obtained from: Submitted by: Reviewed by:
d1fbe4a8d Fixed bug in datatypes. According to URI spec you could have a standalone fragment such as:
0ed5bceed Bug reported by Mikael Staldal. Failed to validated the following:
095812c3f Bug reported by Mikael Staldal. Failed to validated the following:
900e5fac0 Bug reported by Mikael Staldal. Failed to validate the following:
133c9ecfa Needed to retract Notation Changes. PR: Obtained from: Submitted by: Reviewed by:
0e374e549 fix a bug when element is declared as of a simple type or complex simple type from another Schema.
32b7ee33b fix a bug in traverseComplexTypeDec when adding attributes from the base type.
17a5414f6 This defect fixes bug reported by Alfred Fuchs on 09/14. fCalledCharPropInit not set correctly in line 855 cause null exception.
45918f3e0 Sc. this I added an extra f and broke the build. sorry.... PR: Obtained from: Submitted by: Reviewed by:
d62aebeb8 Changed help screen - error was that it said that validation was on by default. Validation is off by default PR: Obtained from: Submitted by: Reviewed by:
c32a78fd9 patch from Lars Heete: Correct the generation of DOMAttrModified and DOMCharacterDataModified mutation events.    - DOMAttrModified and DOMCharacterDataModified events get dispatched to      the parent chain.    - removing an attribute now generates a DOMAttrModified event with       newval=null    - adding an attribute now generates only one DOMAttrModified event       with oldval=null
c0fe66502 Fixed message problem reported by Doug Smith 09/14/2000 PR: Obtained from: Submitted by: Reviewed by:
20034e379 Oops put wrong fix, here again. PR: Obtained from: Submitted by: Reviewed by:
24be16111 record votes on reqs 1-29 PR: Obtained from: Submitted by: Reviewed by:
86534e936 fix the error message for validating simple content.
1e63d1ac8 fix fDatatypeBuffer appending in the case of character references.
d0a26c021 Applied patch from Kent Tamura.
7b91d5243 Fix submitted by Ed Stub. Fixes problem reported by Stephane.RAULT@r2isa... where we are no reporting PI's
64a8d8bf9 allows version to be an empty string in hasFeature. The spec only says 'if not specified' so it could be interpreted both as null or as an empty string. NIST JavaDOM Tests http://xw2k.sdct.itl.nist.gov/brady/javadom/index.html use an empty string.
7ac924ef2 Had wrong value for absolute  minimum/maximum facet values PR: Obtained from: Submitted by: Reviewed by:
319ffcc2d This version works only in jdk 1.2.x ....... It is not my choice but the maintainers of this module to have that dependency. Xerces will run fine under 1.1.x but it will not build in 1.1.x systems. That is life! PR: Obtained from: Submitted by: Reviewed by:
9266b548e I just build it and committed the jar but the new jar file fails to build the documentation even in NT now.
a132f6ead returning char for peekChar and scanChar PR: Obtained from: Submitted by: Reviewed by:
de7cd5722 Fix error - Inadvertenly change this file while working on a different branch PR: Obtained from: Submitted by: Reviewed by:
e7a0dccc0 updated to DOM Level 2 PR. changed code to use DOMException instead of DOMExceptionImpl, which is no longer needed
a5b421c9d updated to DOM Level 2 PR. supports() changed to isSupported() and getCurrentNode() changed to getCurrentTarget()
fc344985a Fixed bug that broke build. Arnaud Le Hors change DOMExceptionImpl date: 2000/10/02 21:58:17;  author: lehors;  state: dead;  lines: +0 -0 updated to DOM Level 2 PR. changed code to use DOMException instead of DOMExceptionImpl, which is no longer needed
c5c56b561 This also was broken because of remove of domExceptionImpl PR: Obtained from: Submitted by: Reviewed by:
e7477a2fd Due to lack of interest and contributors RevalidatingDOMParser is being removed. It usually causes more frustration among users who have to remove it from their IDE file list. If somebody is willing to supported I will resurrect it but from now RIP.
795eacda2 PR: Obtained from: Submitted by: Reviewed by:
8fb078dea Added patch send by Neil de Hoog on 10/09/2000 - I reviewed this fix
a4bf234c5 fix a bug in TraverseSchema, should have import the base type content spec tree instead of concatenate it directly
cbb78e833 fix a bug in TraverseSchema, should have import the base type content spec tree instead of concatenate it directly
1f9aac55a Null URI are value according to URI ref
b797482c5 fix a bug in toString()
f2b9ad849 solved weird bug reported where the datatype registry is not initialize between resets
61d31f186 prep for next release
a51ef5ba6 Bug fix: top-level attribute decl from included schema file should have been searched.
bd881242f Added List datatype refactoring
2a5976063 Fixed problem with state validators and list
b3d72b99a fixed bug introduced by list Validator
431f298e2 need this logic also in the Double type to deal with INF, -INF and NaN
2bafef3ef clean up
351e684d2 applied patch from Lynn Moson: Performance problems
1897c6b14 Release 1.2.1 bug fix release
5384a7c98 Fixed a bug in scanAttlistDecl. It failed to parse correctly the following:
5ea6c6496 added debug flag by mistake
e1aa66c86 to version 1.2.1 so it build correctly
b217fb58f Applied patch from Lynn Monson:
dc31ef6c6 applied optimization patch submitted by Lynn Monson that was left over by mistake in version 1.8
0296fc80b fix a bug in xsi:ytpe handling
c64589a4f Fix a bug in scanQName(), should check the upper bound for colon position in a attribute name.
0952f8332 new dumpTree method by Lisa Martin, lmartin@ca.ibm.com
ce89b528e fix a array bound check by Luke Blanshard, luke@quiq.com
343456dda patch by Tamura Kent - fixes normalization attribute values- this add the normalization feature
30e20c084 use user defined EntityResolver for TraverseSchema, by Jerry Lawson, jerry.lawson@virtualsummit.com
f1980aa75 patch review submitted by Kent Tamura
d9bbac48b Patch from Lynn Monson and Elena Litani:
b820285fe Patch from Elena Litani and Lynn Monson:
e4dd50b29 documentation patch to FAQ by Tony Montgomery Smith + I stylebook and review it
02e46e88c bug in getTopLevelComponentByName: should have checked the 3 hashtable first.
b5de6ae8b tabs to spaces
37b474841 Change from a singleton to a regular class - this arch. change is needed to avoid problems when resetting datatype tables and on the server side
e193f4b65 now every GrammarResolver has its own copy of DataTypeFactory.
6adc86a3a comments
995582e2d 1. fix bug in validateContent() when there is (#any, a, b) and child sequence [d,a,b], by lmartin@ca.ibm.com 2. do the same for validateContentSpecial 3. fix the conditional logic when DTD validation, should not check the type of leaf in case of DTD.
bbbfe430e fix a bug when hash the toplevel att, attgroup, and group decls
108e7ee51 bug fix in binding namespace for attributes when there is no targetNamespace
b87ce4ac2 removed erroneous tests - patch from Elena Litani
4e415dde0 fixed node type checking throughout the class  - patch from Lynn Monson
6a7169c67 fixed handling of default attributes with a namespace -patch from Elena Litani
4bab5b50d Fixed hang if we have the case where we find a multibyte UTF8 character outside the [#x10000-#x10FFFF] valid range. Even tough we check to see if the value was a valid UTF8 we failed to check if the value was within the allowed range. The loop was on the XMLDocumentScanner dispatch method, in the SCANNER_STATE_CONTENT case, after calling the scanContent method from the from the entity Reader we got a CONTENT_RESULT_INVALID_CHAR state because we did a preliminary check to se if the value was outside the [#x10000-#x10FFFF] later on the case of CONTENT_RESULT_INVALID_CHAR  we call the Entity Reader lookingAtValidChar. This check will return a valid (true) and then it will restore the scanner state an go into an infinite loop within the dispatch method. The solution was check at the lookingAtValidChar the same range test [#x10000-#x10FFFF] so we return a value of false and bailout of the loop.
65c7f3cca Allow splitting at the end of the node (offset = length) - patch from Lynn Monson
4cea55cd8 getAttributeNS must return an empty string when the attribute is not set.  -- patch from Julian Reschke
9ac327767 update to DOM Level 2 *Recommendation*!!
18dca0f01 fix switch grammar in endElement
d08653bcc updated info about DOM Level 2 support
a1b6c3afc Update code to latest JAXP 1.1 draft (for Xalan)
e663c9a46 bug fixes :  issue a error for empty attr value of IDREFS and NMTOKENS type, because empty string won't match the "Names" and "Nmtokens" production.
c09882759 scripts needed by ant on Unix platforms
85b4a44a7 range package got renamed ranges in DOM-Level-2 Rec
47067a361 bug fix : NullPointerException when schema file can not be located. by Neil Graham, neilg@jtcsv.com
2a68ed12e added 'Core' to the list of supported features
492c8e165 range package was renamed ranges in DOM Level 2 Rec
05cd64113 removed hack about pe refs in attribute value, the second edition of the XML 1.0 specification is very clear on the fact that pe refs are simply not recognized in attribute values
01e6c33b5 next release Xerces-J_1_2_2
0380ac304 release Xerces 1.2.2
07bec96c2 added DTDReader samples using DeclHandler interface
9fc3406ed range package was renamed ranges in DOM Level 2 Rec
7c7654829 applied patch from Lynn Monson: As I was poking around Xerces, I came across a pair of bugs in the implementation of Node.normalize().  The problems are:
bfb9cd05a Xerces 1.2.2 DOM 2 Recommendation supportand bug release
955ef6b2c applied patch from Lynn Monson: fixed a bug in indexOf which was off by 1
6a2428598 applied patch from Elena Litani: This patch fixes several bugs in Range.cloneContents() & Range.extractContents() reported by Lynn Monson (see 1-4). In addition it fixes the following bugs: a) if startContainer == endContainer; fEndOffset was not properly updated in case of extractContents() b) middle children of common root were not properly added in case where one of the nodes was fully selected (and thus was moved to DocumentFrag)
766260823 Applied patch from Lynn Monson:
6cc769e7b applied patch from Elena Litani: This is a patch to RangeImpl.removeNode(). The indexOf() is fixed to be '0' based, however some references in removeNode() assume that index is '1' based. Small fix to traverseContents() -- add collapse() range for Text Nodes.
02f101e65 minor fix to release notes
3597e04ce some twip forgot to add the Main Makefile r....
70c66a1ca Test program to make sure that the custom UTF-8 reader implementation in Xerces can read all valid Unicode characters. This program also tests the decoder supplied with the JDK as a reference but don't expect it to be correct (up to Java 1.3).
2d25089f4 stpd decs by bld team
38021c7af local name was given instead of the qualified name when calling createElementNS - bug report from Tom Bradford
d13b4e8cf fixed the s... $&##&% beep build.xml file to produce consistant build distribution files
d89e3d4de overwrote SAXCount from Makefile
15e83ee33 finally got right
4b93e9ff7 added samples to bin dist. and remove classes from distr
645452735 get rid of class files in zip
8b084cae3 applied patch from Lynn Monson: I thought it would be worth the effort to rewrite the traversal code in ranges.  The (old) code has several bugs, has duplicated code, and can be hard to read.  I've rewritten the code to address these problems and my patch is attached.  FWIW... I also have a set of several hundred traversal test cases that I've run the new patch through.
25faec088 applied patch from Elena Litani: nextNode failed to stop at the boundary of the subtree being iterated over, it would go to the next sibling of the root node.
76d76ce92 avoid using ANT_HOME which can be used with a different value than what we need. - patch from Lynn Monson
3fb601cbb I fixed this bug on Xerces2 so I need to fix this in Xerces1
eeec1ec2f New all-model implementation from Neil Graham, neilg@ca.ibm.com Now, we can have 8 children elements in a all group.
2c2706c57 Update for SAX2 Extensions 1.0 (final).
cd508fe55  fix a problem for ignorable white spaces.
08d024cab Applied patch from Elena Litani and other optimization related to problem reported by Andy Wai about Rampant object creation
3fbea0cae changes to DatatypeValidatorFactoryImpl which are related to optimation bug patch by Elena Litani
3642ac45d oops sorry did not meant to do this
64b514065 Oops left the debug flag on sorry
fc2943323 getNodeName() -> getLocalName(),  because of  the latest DOM Level 2 updates
104521482 addString() -> addSymbol(),  addSting() caused a out of memory error in certain cases.
d776c2f13 by moving invocation of getLocatorImpl() can save some time in certain cases.
cf1fc3b88 remove a print out
add56baa8 remove a print out
ab84c463c Fixed a bug in SerializerFactory.java that prevents overriding the default factories via -D -- patch from Chris Lee
5408afb1c Added list bug fix patch submitted by Elena Litani
7ba5db96e Prepare files for Xerces 1.2.3
a93c80742 backed out commit sub. by Elena L. until we clarify right datat. behavior
a4c447312 implemented new feature load-external-dtd so that when non validating the application can ask the parser not to fetch the external DTD at all.
9a5a9f748 xmlns default attributes must be given the URI the DOM expect
3265f623d Elena's updates on CR schema support
210f2cc28 CDATA sections are not valid in element content, even when they only contain whitespaces. This fix catches this error.
91db44fa1 fixed typo
bf1ff8b6a range package got renamed ranges in REC DOM Level 2
29b5768d7 initializeDTDregistry should be called only once during the life cycle of a parser instance
846e83dfe wincvs removed this method, don't know why.
5c7ef47a1 Fix for NullPointerException caused by deferred DOM impl when in non-validating mode AND there are multiple IDs declared on the same element.
018ae0a82 Added bug fix notice.
9ce923300 cloneContent failed to set the ownerNode
09ea7bff3 upgrade to ant 1.2
e6ec881e3 When the document is truncated before the end of the start tag of the root element, no error is reported. This fixes that. Admitedly we could use a new error message to precisely describe the error, for now we just report that the root element is required.
b7eeb3bf3 sample program tracing all the events received from the parser. This is derived from the program xni.Document tracer which is part of xerces2. Minimal effort has been made to clean it up so there are most likely methods that are never called in a SAX environment.
75d9620d8 added DocumentTracer
a44a6e8aa Schema attribute validation patch from Neil Graham, neilg@ca.ibm.com
9a62e6d3d implemented scanQName - patch from Elena Litani
9d0ad85c5 Applied patch from TAMURA Kent:
8dc6ecdf9 Fixes problem reported by David Parker:
2e3117102 upgraded to Ant 1.2 - patch from Lynn Monson
12698dc5d fixed error - patch from Neil Graham
680fda9db changed Vector.get to Vector.elementAt to be JDK 1.1 compatible
64b66b290 Applied patch from Sebastian Sahuc and Neil Graham:
8db3b5273 junit 3.4
064afb0b6 added junit test from Lynn Monson
76830fca9 added junit.jar to classpath
40d1371ea Applied patch from Mark Diekhans:
e94388f65 updated to the better version (1.1.2.1) Andy put on the xerces2 branch
1592c2719 undo previous change which prevents the EndOfInputDispatcher to be called, the infinite loop will need to be addressed some other way
e014ae010 removed bogus ^M characters
d3407946e The attribute type was not reported correctly when the type was NOTATION. The string "NOTATION" was being passed to the org.xml.sax.ext.DeclHandler#attributeDecl method. It should have been passed "NOTATION (foo|bar)" where "foo|bar" are the list of notations actually declared in the DTD for that attribute.
9e05281cb Another SAX2 problem -- were passing empty string "" instead of null value for valueDefault parameter of the attributeDecl method. Fixed.
bf4ad8d34 fixed infinite recursion - patch from Mark Diekhans
5f23cad51 DOMException HIERARCHY_REQUEST_ERR was missing from setNamedItem/setNamedItemNS. HIERARCHY_REQUEST_ERR is raised if an attempt is made to add a node doesn't belong in this NamedNodeMap. Example: insertion of something other than an Attr node into an Element's map of attributes
b726e8e49 Updates to DFAContentModel to improve DFA build-time performance. Submitted by:	Akihiko TOZAWA <ATOZAWA@jp.ibm.com>
6c417e057 Release message for latest patch.
1130527a8 This commit brinds yet another optimization to this DOM implementation. The whole idea is to try and avoid to always creating a Text node to hold the value of an attribute. The DOM spec requires it, so we still have to do it in case getFirstChild() is called for instance. The reason attribute values are stored as a list of nodes is so that they can carry more than a simple string. They can also contain EntityReference nodes. However, most of the times people only have a single string that they only set and get through Element.set/getAttribute or Attr.set/getValue. In this new version, the Attr node has a value pointer which can either be the String directly or a pointer to the first ChildNode. A flag tells which one it currently is. Note that while we try to stick with the direct String as much as possible once we've switched to a node there is no going back. This is because we have no way to know whether the application keeps referring to the node we once returned.
4f3126f2f Add CR Schema comments related to simpleTypes Implement J.8:  default values for minOccurs and maxOccurs
a1f0dfc38 complexType changes to support CR.  protected under CR_IMPL flag
d38e0833f New symbols to support CR version of complexType
9d37d1cf5 applied patch from Jay Cain: Preserve element identifiers when a deep clone is performed. Also, a minor change was made for DOM conformity. importNode now throws NOT_SUPPORTED_ERR instead of HIERARCHY_REQUEST_ERR when an import of a document node is attempted, which is according the DOM specifications. This shouldn't cause any problems, especially if the DOM Java bindings were used as the reference. If it will cause problems, it's only one line of code to change.
eb31500e2 The changes allow enumeration facet to be checked against value space of a content. Previously, we would only do string comparison which would give incorrect results.
cd300ecce Cleanup of complexType code and some bug fixes
520ffaf06 Fix for simpleTypes (CR Schema implementation): use getLocalName instead of getNodeName..
d3c878433 Adding support for Schema identity constraints.
bba74642c Added some sample identity constraints to the grammar. These identity constraints are basically duplicates of the ID/IDREF types already and are included merely for testing purposes.
7f3890433 fixed a couple of bugs in insertBefore: raise an exception if a node is being inserted as its own child, or before itself.
52c743b2c fixed compilations pb with regard to static references to inner classes. Instead of accessing the static field through the inner class itself we neeed to go through the instance variable.
91ba02d33 Support anyType as a base for complexTypes.  Other cleanup
a7ebc3a6a Updates to allow compilation by javac due to JDK 1.1.8 bug.
c354107fb This commit relates to "flipping the switch" the change to schema CR:
ca311f832 renamed equivClassComparator to accomodate schema CR changes; see last commit
97549547e Added error recovery for complexType diagostics
0388d9ce6 HTML DOM test program - contributed by Mark Diekhans
94da68a1f added authorship
b989468b7 Applied patch from Mark Diekhans:
ef50edd50 small fix to allow for compilation under Sun's JDK1.3
491795183 This change is an optimized version of the patch from Jay Cain:
f2cd813c9 updated
de38799df changed dependency of samples target which was annoying to me
ceddbc0c0 added a new option to allow turning off the new feature load-external-dtd
6804a86ef Bug fix. For an element decl that has complexType or group as an ancestor, the following is correct: {target namespace} If form is present and its normalized value is qualified, or if form is absent and the normalized value of elementFormDefault on the schema ancestor is qualified, then the normalized value of the targetNamespace [attribute] of the parent schema element information item, or absent if there is none, otherwise absent.
e357704e9 added a link to the CVS Repository
ce7c78f42 These patches implement several validation constraints for schema Element Information Items.  Among other things, they allow for unique annotation elements, and flag several invalid attribute combinations.
dce039457 more miscelaneous fixes for element declaration validation.  Of more significance, this change enables traversal of global group declarations, which had formerly been disabled for some reason.
fb749b4b5 fixed isNormalized which failed to propagate dirty flag
737145c64 fixed insertBefore and replaceChild to handle gracefully the cases where a node is inserted before itself or is replaced by itself. It was confirmed by the W3C DOM WG that the DOM spec allows these operations. I also cleaned up a little internalInsertBefore and renamed the fields related to the cache of the NodeList to more meaningful names.
469f10db0 fixed insertBefore and replaceChild to handle gracefully the cases where a node is inserted before itself or is replaced by itself. It was confirmed by the W3C DOM WG that the DOM spec allows these operations. I also cleaned up a little internalInsertBefore.
d6eb5b418 moved a test outside a loop to avoid a possible empty loop
8c19b800d ChildAndParentNode no longer exists. Removed from Makefile.
4494233c2 Checking in basic support for XML Schema identity constraints. The support currently includes unique, key, and keyref but there are the following limitations:
3a7620037 Update releases to reflect new code for identity constraints.
7dff603a6 Update build script for packaging new code.
a3f945ea0 Detect errors for invalid all content according to CR
cbcd35201 Permit simpleType and attributes in the restriction element of simpleContent
97c4030b4 fixed a couple of NS related tests
0f6e5e2a8 cleaned up error checking code
09f6ecca1 removed NS test not covered by the DOM spec
aec7cdc47 moved around the code setting the DOM error checking back on
e974ad700 Clean up for CR schema updates
ef2d9994d Uncommenting code related to DOM Level 2 -- getSystemId()/ getPublicId()
72e970c12 Upgraded sample to CR syntax. Identity constraints temporarily commented out
c194aaaf3 Upgraded sample to CR syntax.
164bffcf7 fixed a rather serious and insidious bug that caused the deferred DOM implementation to throw nullPointerExceptions in certain cases when dealing with attributes.  This is a partial pullback of andyc's change of R1.107 so has the potential to affect the schema identity constraint implementation.
59e44876e Fix for deferred DOM breaking when identity constraints was added. The last patch solved the NullPointerException but broke the identity constraint support. This patch reactivates that support and fixes the deferred DOM problem.
453abccd0 1) Remove debugging output 2) Missed file on last checkin 3) Pass namespace scope information so that identity constraint    selectors and fields can match paths with namespace info.    NEED TO TEST.
5044c3416 Workaround for bug in constructing DFA content models.
e3e653003 Added check to keep validator from throwing exception.
33c07ad0a Reverting to previous state until better fix can be found.
8bfaeadea (CR Impl) SimpleType structure bug fix.
f0f186727 Better error recovery for invalid all group
1dbe2c75c Code cleanup
16da8c1bb take into account a base type without elements for complexContent
4eba9d329 Better handling of <annotation> inside <restriction>
66e800c7a preparations for Xerces 1.3.0 release.  Also simplify creation of tar.gz packages.
4af604cee made all these classes non final to allow overriding
32a505ec5 Improved complexType error messages
788bb165e documentation changes for Xerces 1.3.0
65656cde8 fix for bad documentation file from last commit
1f8f76d5e Some massive bug fixes. All subtle but very important.
62bcad2f5 Implemented some DOM Level 3 features. Note: This implementation is experimental. DOM Level 3 is is in working draft stage: it is still possible that changes in the specification occur.
dc4d95f84 Changes to DOM parser to *activate* DOM Level 3 (partial) support
49c117565 Forgot to take care for non-xerces implementation of DOM. (DOM L3)
30a19c633 Actually we don't need to synchronize anything at this point...
e37605f2f Since checking for readonly nodes is off when errorchecking is off, we don't need to make entityref and entity nodes readwrite to build them, on the other hand we must set them as readonly once built. Also cleaned up some code by relying on fDocumentImpl and fDeferredDocumentImpl to figure out what DOM implementation we're dealing with.
95d6871f7 Fixing accidental overwrite of changes for 1.3.0
6781c0113 changed implementation of isXMLName, which was bogus, to use the XMLCharacterProperties utility class
b4c513e70 fixed a number of bugs caused by the move away from -1 to indicate URI's not corresponding to a schema targetNamespace
b3083cf20 Merged in from Xerces 2: implementation of parsing component (javax.xml.parsers) of JAXP 1.1
b3b49109a Typo.
1b90d216b Backing up the change.
93638ec1e fixed startElement which created a doctype even when there is no need for it, and which added the doctype after the root element instead of before!
00f66281f fixed importNode of attributes with optimized value storage
dc2b69a62 cloneNode failed to call synchronizeChildren
5af088f57 A sereies of bugfixes and clean-ups.  Among other things, this makes sure we actually traverse global or included attributeGroup declarations; also fixes a bug where the parser would die if one extended a complexType contianing only attributes from another schema.
0f5251f0e removed useless call to synchronizeData already performed in parent class
0811e3a8e fixed cloneNode so that children are synchronized before the node is cloned!
37446b69b Commented out debug code that adds a dependency on the serializer preventing the parser to be packaged without the serializer.
8d7672fb7 Initial support for schema attibute & elements normalization (J5) (SAX only) Currently is *turned_off* using flag. More work to be done in datatypes (whiteSpace facet)/ attribute/element normalization for DOM...
cdd5704d0 Make db.setErrorHandler(null) ignore errors and warnings. Minor update to sync up with crimson version.
0bfe69b3d Clean up
404ce8447 bug fix in schema doc
0aaed03b9 More support for schema attibute & elements normalization (J5) - (DOM)
4c6f53546 make sure to turn off mutation events when synchronizing
7f8fde16b added a test to check that no mutation events are fired when performing synchronization in the Deferred DOM
6e5080cae Template for release plan PR: Obtained from: Submitted by: Reviewed by:
f818b5c5b fixed casing in class name
6b87b6751 <any> and <anyAttribute> bug fixes
e1a02c16a message.txt
81f54262b Forgot several things from the last commit (including the log message...)
37cf0d23e Modified patch submitted by Gregoire Pau for a problem to do with recursive types
2b345765e fixed setOwnerDocument
dd50e1bd4 fixed setOwnerDocument
f0ee72c19 fixed setOwnerDocument
5d845c831 updated adoptNode wrt current DOM Level 3 draft
7d1084324 more work into updating adoptNode wrt current DOM Level 3 draft
50a719859 Fix "namespaceAware" attribute
116aec3d4 Fix "namespaceAware" attribute
98756d9b2 added support for Cp1252.  This is based on a patch to XML4J2.0.15 submitted by Paul Cooper <pcooper@uk.ibm.com>.
e4a28e781 removed extra test
756824a66 basic stab at a 1.3.1 release plan PR: Obtained from: Submitted by: Reviewed by:
7b8765954 Added whiteSpace facet support + normalization changes to reflect this change. It is still protected under flag..
182ae06fe updated plan
00d8c3d26 Removed unsupported facets: maxInclusive maxExclusive minInclusive minExclusive
a85e63789 fixed DOM Level 2 DOMImplementation.createDocument() implementation
9fa609da4 changed internal API back to avoid breaking dependencies such as with WML DOM
3a2a8b461 Initial support for <redefine>.  Several things should be noted:
bfaa99a2d Turned normalization on (J5)
21dfd492c Update
091b3e2b3 .. removing debuging statements..
08d836825 Change to compile under 1.1.x
7b57234b4 Fix for multiple <pattern> that appear as  [children] of a simpleType
e89a9e0cc Fixed some problems with the identity constraint support. There is still a lot of work to do and I'm waiting for some clarifications from Schema working group.
fef3879c5 Updated XPath used for identity constraint selectors and fields to not use targetNamespace for unqualified names in xpath expressions. The code was originally written that way due to a faulty example in the Schema CR primer document.
b17c1ca99 Updated identity constraint code to actually perform the comparison of field values correctly in the value space of the field. Then I realized that the compare method in all of the datatype validators WAS NEVER IMPLEMENTED! Argh. So for now, the comparison is still done in the lexical space but at least I added the machinery so that the correct comparison code can be turned on once it's implemented in the datatype validators.
52132bedb Some slight fixes for identity constraints.
deac52037 Merged Xerces2 fix
0523bae0b throw a Runtime exception instead of silently failing when the application specified class cannot be instantiated
59350101f NullPointerException thrown when a grammar was queried because the namespace URI was set to -1 instead of 0 (StringPool.EMPTY_STRING). This may not be the last inconsistency but it should solve this problem at least.
5bb94744f More fixes to identity constraint support: 1) Fixed bug that was activating fields at multiple element    levels instead of just at the level where the selector    was matched. 2) Fixed bug that was only allowing one complete set of    field matches per identity constraint scope.
7843f8f21 We were trying to validate IDREF/IDREFs when validation is OFF. Fixed that.
6f72d08f1 Apply patch for arkin & Davanum Srinivas to correctly handle .res file for serializers PR: Obtained from: Submitted by:Arkin, Davanum Srinivas Reviewed by:twl
8b5e7f274 Implemented compare() methods on *main* datatypes. More work needs to be done..
7db001102 miscelaneous bugfixes relating to schemas with no targetNamespace or containing types with more than one <any> element.
d772f0241 fix comments in build file; based on patch submitted by Chavdar Botev
891fb1ec7 removed some debugging code that had some nasty side-effects; general clean-up.
37185739f minor bugfixes to <redefine> processing and for <attribute> validity constraint checking
c1627e389 fix for PE in DTD
a7b769dac Datatype fixes It appears that NOTATION datatype was completely bogus. We did not do anything..
b7524666a Fix for parsing an empty document if continue-after-fatal-error is set. PR: Obtained from: Submitted by:	Lynn Monson Reviewed by: Arnaud
d6378b958 fixes for <redefine> support plus some general clean-up
aca32b572 Removed final from XMLSerializer so that it can be subclassed.
cf31cf93a Updated release information.
5578a982e fixes for <redefine> and <import>.  Also revisited and changed my "fix" for our <any> exceptions from last week; this appears to work much better.
007798d46 implemented validation of <annotation> information items.  Also, implemented many constraints on element ordering as well as some miscelaneous validity checks.
c48b8bce2 1) Added finally clause to parse method to reset the fParseInProgress    flag even on failure.    Submitted by: Peter Jodeleit <jodelait@e-Spirit.de> 2) Changed code in XMLParser#parse(String) to attempt to close the    automatically opened stream even after parsing failure. Previously,    stream would not be closed if exception was thrown out of the    parse method.
cdf398e9c Record of commit change.
41d962cd4 Partial <notation> traversal/validation implementation
c67e49f55 Bug fix 772 - http://nagoya.apache.org/bugzilla/show_bug.cgi?id=772
b6a2a0d46 Allowing <annotation> as a first kid of <union>
5194d87a2 More changes to <notation> decl traversal and validation. Namespaces have to be resolved in 2 cases: 1) when <enumeration> of notation is provided 2) just before validating content (in XMLValidator)
8186758f7 treat empty namespaceURI as null when it is a namespace declaration
7767afef5 fixed removeAttribute (known bug that should be fixed in the next release of SAX
63227e25f fairly complete reimplementation of the schema <redefine> element to take into account "late assembly" and nested redefinitions.
9e4136b25 Fix for http://nagoya.apache.org/bugzilla/show_bug.cgi?id=669. Applied patch from Martin Frydl.
8182e2365 Added validation against facets
5f1ee75de fixed a silly bug that my <redefine> changes produced which broke a large portion of our schema tests.
b110df8eb Bug fix for http://nagoya.apache.org/bugzilla/show_bug.cgi?id=572. Must update build process to include message_*.properties [neilg]
3e3daf4b0 changes in support of Elena\\'s fix for bug #572; these make sure the necessary files are included in the package.
be7c4ba36 Fix DocumentBuilder.newDocument(), needed for backard compatibility.
4beba8729 Added comments to steer users to use DOMImplementation methods to create a new DOM Document object instead of newDocument() to sync up with DOM Level 2 spec.
5d8bfa511 validation error checking for abstract
eab76180f fixed bracketing in my last patch
4b9591a68 patches to enable production of our HTML docs under Unix.  Not pretty but no other way to do it unless StyleBook is updated so it can handle looking inside jars.
3eb20815b documentation changes for Xerces 1.3.1
aa1d967ca missed a change from 1.3.0
b27f451a7 fixed a type
55a95721a Update javadoc for newDocument() method to point to DOM Level 2 way of creating a Document
818373372 additions to the FAQ from Elena and myself, + some typo corrections.
c9c88d19a Removed redundant method invocations to .length() from if condition and for loop termination condition - patch from Brad O'Hearne
90b6b7d25 Applied patch from Sandy Gao (fix for facets)
fe69fb7d5 Applied patch from Sandy Gao: implement the function "flushLine()". Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=966
e52cbae83 Patch from Sandy Gao. Bug fix http://nagoya.apache.org/bugzilla/show_bug.cgi?id=816
8cc456bb1 More features/ more people..
a5f34bc0c people have names, let's use them!!
e82928bbf changes for Xerces-j 1.3.1 release
dc7cc8194 fixes for the feedback section of our docs to take Bugzilla and the bifurcation of our mailing lists into account.
9f4f00a61 one more addition to the faq.
a6d26df79 added support for two Thai encodings--Cp874 and TIS620.
42f1a93ae fix for bug #548 by Henry Zongaro
83ed54ed5 "any given constraining facet can only be specifed once within a single derivation step". [Datatypes 5.2 Constraining facets] Patch submitted by Sandy Gao.
14c098ee2 fixed wrong logic && instead of ||
76e19a20f applied patch from Sebastien Ponce to allow comments to be placed on their own lines and indented correctly.
35c8e457a apply fix for bug #845 from Henry Zongaro.
489474e3a allow namespaceURI of namespace declaration attributes to be an empty string instead of null...
217f9bf27 Implement support for the schema "final" attribute. Along the way, the DatatypeValidator interface has been slightly changed so that the baseDatatypeValidator of any datatypeValidator can be located.
0f604a738 added a couple of missing aspects of "final".  Thanks to Khaled Noaman for pointing out one of the things I had missed.
395656645 incorporate French resource bundle for our regex package.  Contributed by Jean-Claude Dufourd.
b899a799f an even better French resource bundle; thanks to Jean-Claude Dufourd and Laurent Foret.
0415f58a0 bugfixes in support of final and block
cacc2ba4e initial 1.4 release plan
37fe6c953 remove a debugging message
da9907b9e fixed typo reported by Roy Tate:  org.apache.xerces.validators.schema.SchemaGrammar#getAttiruteDeclRegistry should clearly be getAttributeDeclRegistry.
3260ba200 Fix setFeature() bug provided by Kohsuke Kawaguchi
2b5b8e087 cleanup
aa83b8f2b Initial shot at date/time implementation (W3C PR Schema). More coding needs to be done: - enumeration is not handled, comparison for duration, etc. - more thinking needed on sharing common code/ performance. - general clean-up (comments..)
ab4232b80 updated volunteer info
63e78df17 Added some getter methods for msg objects.   Helps if an implementation wants to override reportError
75e1dd641 Added support for enumeration, addDuration(), implemented compareDates() for couple datatypes, some partial clean up as well. Things to do/to consider: -- is it worth to overwrite compareDates() for some datatypes (to optimize compare algorithm)? -- is structure for representing date/times can be made smaller in memory for some datatypes (like gYear, gMonth, gDay) -- wait for clarification on some date/time issues (comparison of facets, comparison alg., Appendix E addition alg., etc. -- finalize error checking (should we throw exceptions in constructors?..), more error checking
868ebb56e [see previous commit message ;) ]
ce89e2c76 Minor fixes for date/time
555ddddb7 fixed compare () methods
38ed5d50b Implements support for the schema "block" attribute. This commit also fixes a bug in the implementation of final, and improves error checking for occurrences of xsi:type in instance documents.
f857bee0e removed a debugging statement
7c47f7129 Started implementation of simpleType constraints checking (+ some clean-up)
85a6558c8 Changes in schema grammar construction needed to support "fixed" and "default" attributes of elements.
c47eccceb "For compatibility (see Terminology (�1.4)) NOTATION should be used only on attributes." We were checking on element as well...
57918175b Update plan with new volunteer info
f2de597cf added support for default and fixed values of elements with simple content.
dc38ef3f4 Schema datatype changes from CR to PR. Applied patches from Sandy Gao.
883e3640a Applied patches from Sandy Gao (Schema PR changes)
43217a1d1 Patch from Sandy Gao (Schema PR changes)
a07c7a6d3 Removing timeDuration and recurringDuration
41703b9bd Patches from Sandy Gao
c8d9c87b0 Bug fix (from Sandy Gao)
a374abecb allow value to be set to null
02a88e324 Fix for identity constraints not being able to recognized if Schema elements weren't in the default namespace for Schemas.
dd3384956 Code clean up
f515eacdd Error checking and _duration_ bug fixes.
62cf39275 Date/time clean up (more work needs to be done).
c65654b59 Re-organization of some datatypes code to be able to share validation code against facets.
95384713f Aggregated bug fixes from intalio (Assaf Arkin and Arnaud Blandin) PR: Obtained from: Submitted by: Reviewed by:twl
85ddd08ef fixed some regressions from last update, fixed decode method, and added synchronized to public methods
fcee74fcb Patch from Sandy Gao
c9163a55b set entities and notations read_only (DOM L2)
1c05ba717 more on simpleTpe constraints
c9ec664fc make sure we do not pull in classes from the xerces.jar in our tools directory when doing an Ant build; this way the build is certain to fail if a required class is not present.  Note that this required an upgrade to ant 1.3 (dated 03/2001).
8938465a3 implemented changes to Schema PR syntax of <attribute> declarations.  Patch by Ted Han (than@ghx.com>.
a634afd4d put back patches, that got removed by sync w/ Intalio PR: Obtained from: Submitted by: Reviewed by:twl
0561c4be9 bug fix from Ted Han.
15b7a8bd3 undoing whitespace changes from last commit that should not have been applied and which would clobber people...
d8c95d670 Added support for nillable and implemented *some* constraints related to it .
5f68bf7cd typo fix
fe33ed7ac bug fix courtesy Ted Han.
1f538f2ab updates to XPath support for Schema identity constraints to bring it closer to Schema PR.  More work needs to be done.  Patch from Achille Fokoue Nkoutche.
38d73cf7c -- Implemented additional facet constraints checking for date/time datatypes -- Split AbstractNumbericFacetValidator into 2 classes so that date/time can inherit the common code for evaluation of facets (minInclusive, maxInclusive, minExclusive, maxExclusive) -- reorganize a little bit more code to avoid duplicates -- bug fixes
78a54c967 new exception for date/time schema datatypes
25d1ef7c0 bug fix from Sandy Gao
a4de72953 Patch for schema mixed content model support
e5ce34604 Patch for schema mixed content model support
a83503402 fixed dispatch of ATTR_MODIFIED event which failed to set the related node
f7de7a45c fixed removeAttribute bug #1522 - patch from kot_p@hotbox.ru
d193f24a3 More fixes for identity constraint support. Since we cannot statically determine the datatype validator corresponding to a certain field (because of wildcards, both in content models and in ID constraints), these need to be tied to the value the identity constraint matches to.  This fix implements this support. This involved a bit of a rework of AndyC's careful XPathMatcher interface.
3d3616b56 patch from Sandy Gao to implement validation of attributes of schema information items.
7f55b6ead fixes to build files to accomodate class additions; plus a minor bugfix.
2a273f75c bugfixes from Sandy Gao; xpath attributes now validate properly and <restriction> attributes are permitted to have no base attribute if they have a <simpleType> child.
aa99989e3 bugfix from Glenn Marcy to enable the XPath parser to handle names composed of characters outside the range of 7-bit ASCII.
5dc4a559d Datatype constraints checking  (Sandy Gao) & date/time updates
4152c16da complexType def properties correct constraint checking
150d51ca4 ct-cos-extends (complexType derivation extends) constraint checking
14e0acb7e Added support for \p{Pf} and \p{Pi} (Schema Datatypes: Regular Expressions)
968a0c7c6 Circularity constraint checking for model groups
e2cd6aa2d Constraint checking for p-props-correct
78a928d87 Extra constraint checking for final
225732d3d more fixes for ID constraint support.
090884119 Disallow minOccurs, maxOccurs on global groups
0fcc30351 Schema namespace URI changes - conform to Rec
321c98280 Schema namespace URI changes - conform to Rec
c90baed04 upgraded samples to Rec
16ae95ac1 fix JDK1.2.2 compilation problem.
0fef2fedd re-enable (and fix) identity constraint portion of our sample schema.
2bf455bb7 Partial constraint checking for derivation by restriction and attributes
24014e0b0 added support for descendant axis in schema identity constraints.
db5051204 patches in support of element and attribute constraint checking; from Sandy Gao.
dc960568a Implementation of _fixed_ attribute on facets (including related constraint checking), plus, reorganization of the code: anyURI, string, hexBinary, base64Binary, QName and Notation now inherit from AbstractStringValidator.
0a6230dfa set release date for next Friday
cd1a1fb31 Complete constraint checking for attributes, derivation by restriction
e901acff4 added a new utility method to find attributes in a list
73745b200 treat subclasses of DocumentImpl as a class of our own - see bug #1010
ed304b3ba forgot to turn off error checking for subclasses of DocumentImpl
221becb90 a class cast was not protected - see bug #832
65293d3d2 fixed a bug in serializeNode - bug #1695
a2bbb880b fixed bug in handling of PE decls - bug #881
34ab0e6ce added support for the schema Identity constraints union operator.
8ed84735c more derivation by restriction constraint checking
033e2aa61 our parser now uses accross the board an empty string on elements and attributes with no namepace, the DOM still needs to return null though, this fixes this. - bug #1164
d83e5da30 Redesigned datatype registry for the parser, to avoid dropping and recreating obj with each parse() call on the same parser instance. Now there are 3 datatype registries: [1] dtd datatype registry - initialized if XML document contains a dtd [2] schema datatype registry - initialized XML document contains a schema [3] user-defined registry - includes user-defined schema datatypes
39ac9d107 bugfixes for Schema Identity Constraints.
e96e20028 exclude io test that only works for Xerces2
5283a8025 patches for element and attribute constraint checking from Sandy Gao.
0e4cb798c Thread test program, ported from Xerces-C
3d7f1c8c1 XML Schema REC: Validation Rule: Element Locally Valid (Element)
70c512ab5 replaced a few jdk1.2 method calls by their jdk1.1 counter-part
0c5f5c384 framework for particle derivation checking
8c0695cdc framework for particle derivation checking
5ae672e5c forgot to removing debugging stuff
f01e01018 constraint checking for <attributeGroup>s which <redefine> other attributeGroups by restriction.
cab095589 check for any elements in convertContentSpecTree
33d1f4dec implementation of cos-list-of-atomic and cos-no-circular-unions
5426a23f7 enumeration-required-notation
ea6a0ffa5 generate different error message
6f03da7dc validator can pass empty string for comparison..
268496258 cvc-identity-constraint.4.2.3:  keys that match elements declared to have nillable true.
b495d33e2 completed src-redefine.7.2
823925d47 more bugfixes for schema ID constraints.
4eb9a59a9 commented out debugging code
2cbc8e29a documentation updates; schema.xml still needs a thorough rework.
612e6ca13 Fix to support xsi:schemaLocation on any element in XML schema
0a666bed3 New contentspec node type of all.  Checkin for Henry Zongaro
b0b23c422 added a new feature to ensure full schema constraint checking
e905a23db added a new feature to turn on full schema constraint checking
4da7a1813 added a new feature to turn on full schema constraint checking.   Also, partial implementation of the hairy Particle Derivation constraints.
9f8979a3d updates to schema documentation.
649576dee src-redefine.6.2 initial implementation.
c54b68add patches in support of element constraint validation from Sandy Gao
20df147b6 more constraint checking for particles.  Added a ParticleRecoverableError class
e79934d27 changed build scripts to allow our javaDoc-generated API documentation to live under docs/html instead of directly under docs; this should make the website more maintainable.
0bf05947f Commenting out the code that does not match XML Schema defn. for regular expressions
4fd7148d9 rcase-nameAndTypeOK.5 support
ed89a9f2c updates to DOM samples to account for the new schema-full-checking feature.  Thanks to Mike Pawlowski.
3fa97abae updates to SAX samples to account for the new schema-full-checking feature.  Thanks to Mike Pawlowski.
177148a8d Remainder of particle derivation checking
3d6560530 Fixed a bug in checkRecurse where some errors were being suppressed.  Other cleanup
afa081b70 missed an attribute constraint check that was added to the Rec (not in PR)
de5576c6f updates to permit building of 1.4.0 release.
8291e67fd In checkRecurseAsIf, we were nulling out a pointer before use
65d6fb44c Need to check for an invalid index for handleOccurrences
f4ee81b34 release updates
48035f839 fix for a bug in <redefine> validation with groups
ea8fe190c updated release notes
939cc6716 updated it with a few more restrictions
461f5d8ce Henry Zongaro's all model group reimplementation
dc68c56f3 added info about the new schema checking feature
fbb52e452 xsi:schemaLocation update
46a231bdf a bug with ID constraints has arisen which makes itself evident in the keyref in this schema.  Commenting it out as an interim measure.
749f73e75 Unique particule attribution constraint checking by Sandy Gao
0eda65bf0 File for unique element attribution from Sandy Gao
95071034c added missing end li tag
14c4f4675 updated release date
aa70384cc minor documentation wording change
1bc2e9ea8 the UPA flags were turned on by default - they should be off by default
d358c187d Fixed typo in particleEmptiable.   Added code to checkRecurse to detect the case when there are extra elements in the base which are not declared in the restriction
9cf583ca9 a patch from Sandy Gao to work around a JIT problem
4a3a684e1 a patch from Sandy Gao to work around a JIT problem
a2f8e619a update documentation to remove reference to nonexistent limits on <all> constructs.
5378a7ece report error for undeclared namespace prefix
513f08679 check for duplicate complexType definitions
5566294d1 check for duplicate simpletype, complextype name
e9405c2a6 bugfixes relating to undeclared namespaces and ID constraints from imported schemas
71b21a7d6 re-enabled <keyref> in personal-schema example; was broken because of a bug in IDREFDatatypeValidator
bbda56f68 Extra missing constraint checking for model groups
66a9225c5 fix for infinite recursion when a schema tries to redefine itself.
4e6e9eca7 prevent namespaces declared in included or redefined schemas from being recognized in the parent schema.
91e3103d3 When traversing a top level group decl, make sure the currentScope is set correctly
149e07e14 various bugfixes from Sandy Gao.
37ca2187a bugfixes from Elena Litani (whose CVS is malfunctioning)
85d898edd [fix] date/time comparison may result in _indeterminate_ value.
7a963f61a prohibit targetNamespace="" and allow substitutionGroups affiliations from different namespaces
324a37826 more bugfixes from Sandy Gao
220ead313 constraint checking relating to redefine, include and import.
ac492a6c8 datatype bugfixes from Sandy Gao
96e789466 date/time bug fixes (some due clarification in the XML Schema specs)
b587353a3 identity constraint bugfixes
e99a8b407 fix for union of patterns
218f09c22 bug in serialization (normalize) fixed thanks to Ka-Ying Lam
7549b8e17 more (hopefully the last...) bugfixes for <import> as well as a tiny bit of cleanup in XMLValidator
146686db1 Looks like we *forgot* to implement pattern on <list> datatype
1bcca6943 no message
29689df23 Fixed relative URI handling for anyURI datatype
06d4f5296 date/time fixes
d17adebb7 Cleanup (in last checkin got rid of patterns to validate date/time expressions)
5e2cb0cd9 fix for namespace handling in context of <redefine>
298eb52cf Added support to block names defined in Unicode 3.1 (XML Schema REC requires to support those)
52a88bbb8 small cleanup
2b015072d require a <field> be present in an identity constraint declaration.
2ca4b19aa no message
485435c61 Deal with checked exception in static initializer blocks
fb8318d05 fix for bug #1888
6b7680ec6 expose the DOM Level 3 methods that we support at an *experimental* level. This is based on the DOM Level 3 Core Working Draft of 5 June 2001. Available at http://www.w3.org/TR/2001/WD-DOM-Level-3-Core-20010605
59506847f no message
3cd74950c fix for bugzilla defect 1584.  Change the way we store info in fRecurseComplex
58425b733 make our importNode more robust and be able to deal with non compliant implementations that fail to expose attributes values as child nodes as required by the spec. See bug #1915
b17e519e6 fixes for <redefine> bugs
4ce1adc72 no message
1d1d2ba84 fix for Etienne Roys problem (and hopefully for bug #1978 as well)
6d30c5d51 fix for Bugzilla bug #2035
1329d5fde fix for bug #2010
4400e2c71 no message
8770d8a9f fix for bug #2025 and a bit of reorganization of traverseElementDecl
b8dc99df1 fix for JDK1.1.8 compilation
37d795768 one more JDK1.1.8 fix.
8bbd29315 fix for bug #2129.  We need to be careful to use targetNamespace as an indexer when creating names for anonymous schema components!
740a8bf01 fix for bug 2115 - detect multiple decls. with different types when one decl is a ref to a top-level element
cbfde45fb Fixing "[Bug 2104] - URI may enter infinite loop"
7d1855217 Fixing "[Bug 623] - Infinite Loop in org/apache/xerces/utils/URI.java V1.3.0"
1be0b462b patch from Udo Grabowski (bug #2151)
009c6ec3e Infrastructure for new group scoping code.
d0806790d fix for a bug which caused errors to be emitted when the parser encountered included schemas containing local elements in diffreent types but with the same name.  Also a partial fix for bug #2131.
41547cfb2 validate on-the-way-in for content model containing wildcard this fixes [bug 2028] in bugzilla
4a5a28699 validate on-the-way-in for content model containing wildcard this fixes [bug 2028] in bugzilla
edc7075fe Enable new group scoping code.   fixes bug 2048 and 2131
8a4f88ecb only invoke schema identity constraint validation when validating against schema grammars.  An attempt to increase efficiency of DTD grammar validation.
dded6e20b UPA checking: substitutionGroup against wildcards this fixes [bug 2047] in bugzilla
850c2016b UPA checking: substitutionGroup against wildcards this fixes [bug 2047] in bugzilla
84cb9d7aa a small documentation update
1664a02c3 fix for bug #2154.  Also cleaned up some code.
f7ea7d618 fix for bug #2185
96d2007ea Change MapAndSum code to conform to Schema spec.   Commented out error on mixed complexType without a particle, until I raise with Schema WG
65bd9de4c Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2187
94821240a get rid of some useless code
62d5766e6 check the prefix of schema elements this fixes [bug 2189] in bugzilla
9df6e0a9e applying a patch from K.Kiehne@deutschepost.de about empty content type.
2ec3c55f1 Added checking for cos-element-consistent to handle substitution group elements as well.   Fixes bug 2037
b5a8f7958 applying patch for [bug 709] in bugzilla: xml file with size exactly 16KB.
cd6d98c8c fixing [bug 2054] in bugzilla: typo.
195aa5358 Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2029
35cb2eccc Changed the way we detect circular groups, and how anonymous type names are composed.   Fixes a circular group problem posted on xerces-j-user
079cb1513 Quick fix for http://nagoya.apache.org/bugzilla/show_bug.cgi?id=1541 (TreeWalker works in exponential time)
8052e8e93 Support feature names for Event creation: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=1814
70d965b82 couldn't compile: missed a bracket.
cf39ef9bb fix personal.xsd so that it is a valid schema.
6c9d214bc fixed a bug in which a reference to an attributeGroup from another schema could blow up further schema validation
d65480547 Implemented DocumentBuilderFactory#[gs]Attribute methods.
6d99e9459 1. new parser for name/ncname/nmtoken to improve performance (replacing the old regex) 2. remove static member from ElementWildcard; 3. add support for attributes from non-schema namespace.
4e41fb9b4 support IANA aliases for encodings that the Java supports
5c036d5db make sure that the ANT build scripts are included in source packages produced by Make
41e96458d bug fix for substitutionGroup: used wrong variable
94a03b71c fixing [bug 2250] in bugzilla: duplicate attributes.
b43e4ce45 removed some unnecessary try/catch blocks.
b8a5eedbc error reporting bug.
ab4ef23bd Henry Zongaro's fix for bug 2038
179139e6b Henry Zongaro's fix for bug 2038
12b1ee5aa Added 2 new properties to Xerces parser to allow to specify schemas externaly. "http://apache.org/xml/properties/external-schemaLocation" "http://apache.org/xml/properties/external-noNamespaceSchemaLocation" See http://www.w3.org/TR/xmlschema-1/#schema-loc
109018ebd Don't process top-level element declaration references at the time of referral.    This causes problems with tricky circular definitions.
b56c1a02a remove unnecessary catch blocks.
c6add457b Moved particle derivation checking for complexTypes to the end of TraverseSchema.   This is required to propertly handle references to toplevel elements and substitution groups
42a687de3 added some info for the 1.4.1 release
cbaa5b149 removed restrictions that are now ok
7182a2ac3 bug fixes: nullPointerException
eaec17c3a pull back the change i made yesterday. it fixed one bug, but resulted in another one. I'll look into it later.
4ede8e242 fix for NullPointerException
3770e9fc1 Fix for #2049.  Xerces should actually be using the newer versions of the javax.xml.* classes that have been checked into xml-commons.
98f96892b changed names of the new schema properties
39d068236 documentation updates
ef55c3561 Documenting new schema properties
a4ef15bac to be consistent with policy of obliging users to use the allow-java-encodings feature if they want to use Java encoding names instead of IANA names, remove three encoding aliases from our internal mapping.
0371c4c76 changes for 1.4.1
05188bc3e conformance test patch that Glenn Marcy gave me a long time ago
a056cc483 release update
bcd4d218d small doc clarification
d6dfa54de make package names consistent with those produced by Make
019102c6c Update error reporting in date/time
b2102873e yet more doc updates
9db324fe7 resize() methods were left unimplemented, which would cause trouble for big schemas.
740582783 Fixed recursive base type detection bug, and commented out code which checks that an extension must have a particle (based on clarification from HT)
aadc9f5a7 used a jdk 1.2 method.
d61e3dd32 UPA bug: not handling ? + * properly.
b52961859 generate a better msg for bad attribute in derivation by extension
dd7ae15c3 when cloning elements into a complexType scope from a group, make sure the tree walk handles occurrence range nodes
45a3cf4a7 Improved some schema error messages: UPA, General Attribute Checking.
178713521 fix for getProperty and "http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation" property
904469745 Patch from Dean Brettle. We need to revisit the code later (it gives StackOverflowError with very large documents) Refer to bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=1541
ac9fbc2b6 US-ASCII has many IANA alises; add them.
97338cdc7 update <import> support to take advantage of external-schemalocation and external-nonamespace-schemalocation properties.
06aaeb978 fixing [bug 2347] in bugzilla: substitutionGroup type derivation.
376a43643 1. fixing [bug 2357] in bugzilla: stop the checking if we can't find the substitutionGroup element; 2. fixing a recently reported bug from the mailing list: mixed type with empty content
23bc37847 1. fixing [bug 2292] in bugzilla: there was problem finding certain elements; 2. performance improvement on UPA checking.
78fba78ef when cloning elements from group scope to complexType scope, make sure the scopeDefined field is set correctly
c81f5623e 1. fixing a bug with "mixed" complexType with empty content 2. support "0" and "1" as valid values in Schema
c5a9e764f fixing bug [2318]: corrected the error message
64f5c36ea fixing bug [2250]: check duplicate attributes with namespace names
c2388c8b2 fixing bug [2378].
86242d689 accidentally modified an error message. now changing it back.
0ca6a9c5a Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2467 We should not raize an exception, cause we already do much better checking for cos-list-of-atomic constraint
a1b0cd529 When validation is turned off, the parser did not normalize attribute values in DTDs. Separated validation code from normalization code, fixed normalization algorithm. Plus, SubstitutionGroupComparator is no longer instantiated for DTD traversal.
ff4bf91cf fix a bug with attribute defaults reported by Etienne Roy
d7b94af15 disable compression of jar files in ant builds to bring them into sync with our make-based builds.
335c5f003 fix some error messages in the validator to make problem diagnosis easier for users.
e053e7146 fixing bug [2485]: when defer-node-expansion is set to false, fDocumentHandle.characters() should be the last method to call when processing characters and whitespaces.
dfc96f973 this might be some old code that was left accidentally. "xer" is never used later, and the casting might cause exception, because "erNode" might not be of type "EntityReferenceImpl".
0281fda09 fixing bug [2483]: children of the element were removed accidentally.
e4a6b2acb if an element being cloned is inside a recursive declaration, we should also put the cloned element in fElementRecurseComplex, so that its associated information would be filled after the traversal.
a45ba8883 wrong loop ranges in whatCanGoHere.
dafea22fd small typo in javadoc: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2557
c55674159 another problem handling recursive complexType + group: the scopeDefined is not set properly for cloned elements.
abbdee503 Behavior was changed, implementations that overwrite those functions should get notification. http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2530
f03ee73b8 removing some useless and confusing files; see bug #2510 for why they are confusing
00524f9db fix to internal change of APIs
235f25d1f Fixing ClassCastException for the case both DTD and Schema used in an XML Document
59f6287e4 pass EntityResolver to DOMParser created in import/include processing, as requested in bug #2510
c9ff0ee9e small fix to MIME2Java.  No one currently uses this hashtable, but we should keep it usable just in case.  Thanks to Martin Krumpolec for pointing this out.
b249dba2d fix for bad <unique> element in personal.xsd
18a9ca1a2 1. fixing bug [623]: didn't handle "/../" and "/.." correctly in URI; 2. fixing bug [2451]: now we support both "anyType" and "anySimpleType"; 3. fixing an error message: provide more information.
a404ea4da correction to the front page so that the schema link is actually usable.
e30a8e26c update to reflect change in Apache's cvs server.
47861e49a removed redundant code for wildcards.
ff6455483 fixing a bug for xsi:type.
cfb409074 include javax.xml.parsers configuration info in source and binary distributions
a18e42fea start a KEYS file a la Xalan-J2
6d7f7eeb3 make XHTMLSerializer extendable as per request by Thor Gunnlaugur
189692d80 Adding support for anySimpleType.
8426e76c1 Performance patches related to array resizing - submitted by Henry Zongaro
699abaf4b Adding derivation cheching for anyType/anySimpleType.
4369d9c54 compare method should catch exception that might be thrown during parsing
0b0c7c810 changed the way we look up elements in particle derivation checking to take into account namespaces for formQualified
8732efcd3 prepare for release 1.4.2
b8acecdbe Patch from  Gunnlaugur Thor Briem (gthb@dimon.is)
4d351aa0f documentation updates for 1.4.2
2d42721e6 fixing the bug reported from the message "Validation Problems with extension".
03d6f7838 Test for TreeWalkerImpl class. Contributed by Christian Geuer-Pollmann.
24af90b4f Left some debugging code. Now removing it.
1cba16fab checking in cleanup of import statements that has been sitting on my disk for a while...
66fd54103 Bug fix http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2761 - normalization
55039afdf patch from Stephen Dulin to fix bug on machines that use EBCDIC as their native encoding.
5ea2e7c4b Applied a change from Henry Zongaro fixing a typo which was causing unnecessary growing of a table
596fdf812 fixing bug [2800]: DatatypeValidatorFactoryImpl will not compile.
8ce05f839 fixing a bug reported by Slein, Judith: checkTypesOK didn't work correctly in the following cases: 1. the two types are the same global complexType; 2. the derived type is restricting anyType.
46f430830 fixing a bug in checkTypesOK: any simple type is validly deried from anyType.
07f2f72ab 1. fixing a bug reported by David A. Riggs: "use" and "fixed" were ignored if an attribute declarations refers to an attribute from another namespace. 2. provide more specific error messages for GeneralAttrCheck
c0c1122be fix from Jeremy Carroll for a memory leak in the StringPool.  Here, objects in the StringReader which are waiting to be cleared maintain their references and hence those objects cannot be garbage collected.
2ff7cee2d implementation by Jeremy Carroll of the fix for bug 2793 proposed by Glenn Marcy
4e9b6dff3 fixing a bug reported by Slein, Judith: checkTypesOK didn't work correctly when the base type is not derived by restriction.
31052e8c6 Applied a patch submitted by Henry Zongaro to reduce the number of temporary ElementDecl objects created.   Fixes a regression introduced by a bug fix in 1.4.2
bbdf1d294 This new implementation supports two different DOMImplementation classes. CoreDOMImplementationImpl, along with CoreDocumentImpl, only supports DOM Core. DOMImplementationImpl, along with DocumentImpl, inherits from the Core classes and adds support for optional modules (MutationEvents, Ranges, Traversal) as well as the Deferred DOM.
de7828adf fixing a bug: sometimes, fElementDeclFirstAttributeDeclIndex is set for some element, but fElementDeclLastAttributeDeclIndex is not set (it's still -1). Any further attempt to add a new attribute for this element would result in an ArrayOutOfBound exception.
314ab3e02 fixing a bug: should return at this point, otherwise the same particles would be count twice.
661213091 fixed bug introduced in previous commit
38eb7d43f prepare for 1.4.3
e83222633 release notes for 1.4.3
a6d25b04e updated log related to DOM
fd2110e7c fixing a bug reported from the mailing list: circular attribute group reference
9a64e58ef fixed dispatchEvent: while additions of listeners only affect future dispatches, removals take effect immediately
6fec9ee0c Merge/move of Xerces 2 to the trunc!
6496e08b1 Merge/move of Xerces 2 to the trunc!
f10c61ef1 Merge/move of Xerces 2 to the trunc!
b53de555e Update change log for XNI Manual addition and Xerces2 branch merge.
af96cf683 Added dynamic validation feature to sax.Counter. This feature should be added to all of the samples.
5cebe9f00 Updates to make the Xerces2 standard components are in sync with the documentation regarding their supported features and properties.
07b3c0231 More updates to the Xerces2 standard components.
10989c5ae Made sure that the DTD validator actually pays attention to the features and properties that are documented. The dynamic validation feature was not yet implemented so I added that.
afe5bd179 Docs mentioned that the XMLDTDValidator needed to know the value of the namespaces feature. This was only true back when the code was a "universal" validator capable of validating both DTDs and XML Schemas. Therefore, namespace binding had to be performed in between those two steps. Now that this class *only* performs DTD validation, this feature is no longer needed by this component.
fbbcdbd16 Fixed bug for when namespace bindings were added as default attributes from the DTD. And I had just removed the namespaces feature from the XMLDTDValidator code because I thought it wasn't needed. <sigh/> Reported by:	John Caron <caron@unidata.ucar.edu> Attempted patch submitted by:	Neeraj Bajaj <Neeraj.Bajaj@sun.com>
3e29dc4dc Changed default for pull-parsing the DTD from within the document scanner. Previously, the "complete" value passed to the document scanner's scanDocument method was used to scan the DTD as well. But this is probably not the most common usecase. So I changed the default to always "true" and we can decide if we need to add a feature later in order to get the other behavior.
74d98401f Updated version number for impending Xerces-J 2.0.0 (beta2) release.
159889088 Changes to 'todo' list.
166376abc Minor doc update.
f9c1d6b32 Putting back Edwin Goei's changes made from xerces_j_2 branch.
839d3a197 Adding design stubs for XML Schema component traversers. These could be changed or modified later.
393cf01dd This class is the successor to the org.apache.xerces.validators.schema.XUtil class from Xerces1.  The purpose of both classes was to provide a partial abstraction from the DOM to be used by the schema parser, so that, should we ever decide to use some representation other than the DOM for schema documents, the job of porting would be easier.
0cf6dddc4 Updated (and cleaned) version of all schema symbols.
632bc013e Copied original org.apache.xerces.jaxp code from xerces_j_2 branch.  Some files were not picked up during the conversion of making the branch into the main trunk.  Also minor clean up of comments.
e8004da99 Some minor change and implementation of annotation traversal.
4d06784f1 add a method for exposing localnames of Nodes.
a0823d099 Port of Xerces1 datatype impl  (the most recent vs) and add v2.msg directory. Limitations: - Datatype Registry does not include ENTITY/ENTITIES validators. - in XMLChar need to implement isValidNCName - for ID/IDREF datatypes need to update error messages (see validate() method).
dc0137074 XSDocumentInfo contains all information unique to a schema document.  XSDHandler is what was known as SchemaHandler in the posts on design; it is pretty much a skeleton at this stage, though a few methods are fairly complete.  Left to implement are phases 2 through 4; phase 5 (UPA and derivation checking) awaits stabilization of the relevant traversers.
64c8e15e2 fix a typo...
2d0e93f83 Modified the package name.
766f4dd4e Commented out a line that won't compile. Revisit it later.
04c256b8e Removed some of the syntax errors.
f108dee5e Attribute checker (was GeneralAttrCheck).
7548724b0 add isValidNCName() - need to port from X1
e51d89386 add stubs for some XML Schema components: - XSComplexTypeDecl (was ComplexTypeInfo) - XSElementDecl (was XMLElementDecl) - XSType - common interface for XML Schema types
bdb23b41c Renaming XMLException to XSDatatypeException
a5d9c33b7 Trying to make things compile. Note that SchemaGrammar is empty. We still need to following declarations to compile: 1. class ComplexTypeInfo; 2. fRedefine2XSDMap in XSDHandler;
7df139049 Trying to make things compile.
102227b2c Trying to make XSDHandler compile
48139a565 A new parser configuration for schema validation. This is a temprory configuration for the new schema design. It will be merged to the standard configuration when schema support is ready. Currently the SchemaValidator does nothing but to pass the events to the next component. A SAX parser is created to use this new configuration. To try the schema validator, simply replace "org.apache.xerces.parsers.SAXParser" with "org.apache.xerces.impl.v2.SAXParser" in your application. (for example, sax.Counter).
7a53b57c4 convince XSDHandler to compile and add most of the code to handle imports and includes.  Still need to add some code for redefine and of course fill the other stub methods.
c74e586f4 Forgot to check in this file. It's also necessary to get the namespace of an element, so I changed the parameter to Node.
a043eaea3 Return compiled form from checkAttributes.
53b523c0d Port of the deferred DOM to Xerces2. The major change is that it no longer uses/depends on the StringPool. Interestingly, this actually makes it more independent of the parser and it could easily be used with another one.
6d0c558fc Updated documentation for new deferred DOM implementation.
b18c514e9 Update CVS link.
c42c87144 Slight update to BasicParserConfiguration.
455cf9995 Separated document scanner so that it's possible to build configurations capable of parsing document fragments as well as full fledged documents.
ed164647a Change log for document fragment scanner change.
302923d79 remove import statement  [X1 code]
52890cc2f Macro for Schema validation.
1fcdaf403 Initial port for simpleType traversal, additional work: -- port SchemaMessageProvider (+ modify format of our messages) -- port notation next (simpleType needs access to it) -- some methods left blank.. need to implement..
54dcd3dda Added some fields.
4abcc4535 Update schema messages [X1 port]
5ab6e1d8e acting a suggestion from AndyC, renaming XMLManipulator to DOMUtil.
8303d73ee and completing the renaming by removing XMLManipulator...
9286d1dbd 1. Changed XMLManipulator to DOMUtil 2. Modified attribute checker to return whether a value is specified or from default 3. Implemented ElementTraverser: global element (doesn't compile yet).
5d5122841 Trying to sync error reporting for *Traversers
dbe6c7701 XML Schema messages
4a77c075e fixing format.
606b621a1 cleanup - set classpath in build.xml instead of build.sh
007484d12 cleanup - set classpath in build.xml instead of build.[sh|bat]
302a2e61b exclude ant classpath when calling javac
bd88f869a SchemaValidator is ready to validate element against a simpleType. It's only temprory code to test our schema implementation. It won't compile yet, because we need to decide: 1. how to store simple types in the grammar; 2. using parallel arrays vs. objects.
282916bc4 migrate build scrips updates from Xerces1.  These updates help build the HTML docs under Unix.
e4e301fd3 finish support of <redefine>.  Lots of work left:  1.  create the getComponentIndex method for the traversers to talk to one another; 2. create a main method for testing; 3. actually use real QNames instead of using Strings everywhere.
5503ba22e Datatypes now implement XSType
4b7ffd3b3 Some modifications to schema grammar: - need to create XSSimpleTypeDecl, XSNotationDecl (probably extends XMLNotation) - XML Schema datatypes - creation methods added XSAttributeDecl stub
b91e6a124 implement getComponentDecl in XSDHandler.  Next will implement a main method to test this class.
84c3ebeca Lots of changes: 1. Make simpleTypeTraverser to return integer; 2. Make attributeChecker to return Object[]; 3. Statically create the grammar for schema namespace 4. Clean up SchemaGrammar: add/remove methods/fields. More to be done based on the decision on parellel arrays vs. objects. 5. Update declaration classes. 6. Changed content spec to particle to match the name in schema spec. Hopefully, with little effort, we can start to validate elements against simpleTypes.
50eb5716a Fixed bug in SAX parser that was not forwarding external entity declarations in the DTD. Submitted by:	Neeraj Bajaj <Neeraj.Bajaj@sun.com> Reviewed by:	Andy Clark <andyc@apache.org>
7c30148f5 skeleton main method in XSDHandler.  Everything compiles now and runs--at least to an extent.  Now the real testing/debugging can begin.
73b09ff27 Again lots of changes. Now we can validate a simple element against a simple simpleType. Cheers.
ff655ba71 Unsynchronized hash table (String to int mapping)
0fc42aed0 Added more stuff for element and attribute traversal.
6f04e9c6f implement XSDHandler#traverseSchemas.  Also fixed a couple of bugs and cleaned a few things up.
d6c5e086c Fix for bug #3449. Submitted by:	Pavani Mukthipudi <Pavani.Mukthipudi@sun.com> Reviewed by:	Andy Clark <andyc@apache.org>
0f2aae2c2 1. small bug fixes 2. namespace binding for attribute value (schema) 3. get global declaration implemented in XSDHandler Now schema v2 implementation is capable of parsing simple xml/xsd files: global element vs. simpleType decls.
9090872b8 Ported particle traversal methods.
006cc34c8 ported support for document-class-name property
43ac74822 Group traverser - verified and modified implementation submitted by Rahul Srivastava. Modified schema grammar to include group declarations.
146b45ea1 some code restructuring
15b6c7f9b add  XML Schema message formatter to SchemaParserConfiguration
46953987e Again, lots of changes: 1. Add XInt and XIntPool 2. Add I_EMPTY_DECL and I_NOT_FOUND constants in XSDHandler 3. Change QName in the decl classes to 2 strings: name+target namespace 4. Modified the way of processing min/maxOccurs on particles.
b7795baeb Forgot to put license information in.
1f438044f A bad idea to put I_EMPTY_DECL and I_NOT_FOUND in XSDHandler. They should be in the grammar.
8bf8ff994 add initial code for building content models: -- XSCMValidator new interface -- CMBuilder - new class responsible for building CM Models -- XSComplexType has now content model field -- some changes to particle decl.
70831140f move all schema related code to v2
c0c0d3d4c Added identity constraint code, ported from the v1 package.  Several things to note:
9b24487ac 1. Changed the place to call handleOccurrences (now checkOccurrences). 2. Added XSAttributeUse class.
449044bce Improved memory footprint by moving out the NodeList cache fields into a separate object and implementing a pool of those on the Document. Tests show an improvement of up to 7% without any degradation of the perfs. :-) Thanks to Andy Heninger for his help in designing this one!
395cef052 Added a non-normalized value to the XMLDTDHandler#internalEntityDecl method in XNI and implemented it in Xerces2. Also implemented the non-normalized attribute values as well. Next: remove the entities methods from the XMLAttributes interface.
11fe4e253 moved inner class NodeListCache to an external class to avoid compilation pbs.
1896aabac 1) Removed methods for entities in attribute values from the    XMLAttributes interface. 2) Fixed bug in deferred DOM implementation where attribute values    where not being "fluffed" up properly. 3) Fixed bug in buffering of attribute's non-normalized value in    XMLScanner.
10dfe2497 The current state of a content model will be stored in the validator, thus XSCMValidator interface is modified to pass and return the content model state. Implemented/ported XSSimpleModel. Added code to CMBuilder to create XSSimpleModel, and convert particle trees.
30b7ff229 XSDNotationTraverser, XSNotationDecl implementation and related patches by Rahul Srivastava. Modified code in simple type traverser related to notation decl.
9ee3d36a8 As well as fixing a problem with identity constraint handling in the grammar, this moves local element traversal in to XSDHandler.  It should also take care of the case where a local element declaration contains a type which itself contains a local element declaration.  Finally, I have implemented a class which subclasses NamespaceSupport in an attempt to find an efficient way for keeping track of local namespaces; this should be useful not only in deferred local element traversal but also in keyref handling.
c6c35aa36 This class will allow cashing of XML Schema component decl objects [not implemented yet] The class must be used everywhere we need to create a new component decl.
1f0b6f3b8 Change implementation to _String_to_Object_ mapping.
f5dccb92b BIG CHANGE: we are replacing parallel arrays with individual objects for all schema grammar decls.
cc0bda7b5 BIG CHANGE: we are replacing parallel arrays with individual objects for all schema grammar decls.
190780ff1 Use symbol table for schema symbols.
5ef2a1b4e PA to Objects.
24eb477e5 rename XSType to XSTypeDecl
0e1de3d71 a few more changes for Objects vs. PAs.
c02d59773 moving regex and related utilities out of the v1 package, since it is about to disappear on to a branch.
b29549669 remove v1 dependencies from datatype classes
e11abeca8 the v1 port has been moved to the branch "xerces_j_2_v1".  This is done to make debugging on the main line easier.
fe0eaae91 very basic complex type traversal - much more to come
6e90ec1cd fixed the setting of fName
cd1423045 Provide names for built-in datatypes. (Temprory solution. Will be replaced by the new simpletype design).
122b1ef0f files to support DFAContentModel (a.k.a. XSDFACM).
b60a4e528 had to loosen access restrictions in various places so that separation between schema and DTD content models could be maintained and yet some reuse of common code--like the CMNode and CMSTateSet classes--could be maintained.
6257e4315 fixes to make these files compile in the new Object framework
8681cc85d add global types to grammar
377abac37 1. Some new code in SchemaValidator; 2. Cleaned up the parameters of constructors and reset methods for schema traversal classes; 3. Some schema error messages.
6eb0879ca update XML Schema message file name.
9f48243c8 Code contribution from Rahul Srivastava: XSDAttributeGroupTraverser and XSDWildcardTraverser
73478d6ce change state to int[]
935c527b8 modifications to CMBuilder  and XSSimpleModel to reflect the big change (parallel arrays to objects)
07b7f5e78 Minor things: 1. Forgot to remove one line from IdentityConstraint class; 2. Use shadowed symbol table in schema parsers; 3. Some changes in SchemaValidator.
2284e29da 1. Added new code in SchemaValidator; 2. Modified XSAttributeChecker, so that ID is checked within one document, instead of all documents. 3. Part of widlcard traversal is moved into XSAttributeChecker: so that we don't duplicate the code of tokenize the namespace attribute in both classes. 4. An allowNamespace method is added to XSWildcardDecl.
758a32c6c 1. Updated error messages in XSAttributeChecker; 2. More SchemaValidator code; 3. Fixed a null pointer exception.
860cb3b9c Fixed some small bugs. Now we can have a sequence of two elements.
40d74fe72 Fixed some namespace related bugs. Thanks to Sandy Gao for the report.
d1b961865 Modified javadoc (and associated implementation) for the XMLAttributes interface to be more explicit about the behavior of implementing classes.
89b1140d9 Added emptyElement method.
6405e927d fix XSDComplexTypeTraverser#genAnonType() so it does not barf on a ClassCastException when it tries to get the parent of a Document node.
49a1f8934 1. Most validation on elements and attributes are done. But lots of things need to be revisited, and more tests are needed too. 2. A typo in many classes: FIXED_VALUET, should be FIXED_VALUE.
d304cb386 Ha! Forgot to add this new file.
b021c007c xsi:type support.
051b763c2 attribute processing and error handling for complexType traversal
50624cb3d added debug code for complex type decls
cd4e07ee9 moved some attribute processing into a utility method
e64d2629d fix for missing break statements in a switch
2d5af0fa7 add support for DFA content models.  This version assumes that we will have XSWildcardDecl inheriting from XSElementDecl; if we decide not to do tihs the change should not be difficult.  Still to do:  Get rid of redundant XSCMAny content model and TEST, TEST and TEST...
38311345b Updated error messages from element/attributeTraverser classes.
b8c70cb68 fix from Henry Zongaro to permit compilation under JDK 1.1.8
8bbcd44c1 use null to represent the empty namespace consistently instead of using the empty string.
36c916da6 additional changes to support null for no namespace
87ef78778 Error cleanup
e2677c2f3 changed msg for src-ct
b16dd097c Fixed bug that caused namespace information to be lost in the deferred DOM.
64834938e 1) Added a parser configuration settings class to allow settings    to be separated from a configuration and allow settings to be    "chained". 2) Modified xerces.parser configuration classes to descend from    the new settings class and take advantage of the "chaining". 3) Added constructors to the entity manager and namespace binder    to allow them to share a common context.
2b03ae4e6 Fixed bug where the DTD scanner was reporting entity boundaries where not appropriate. For example, the use of the implied-space parameter entity in line 2 and 3 of the following:
8a20d83a5 Added getter methods to XMLParserConfiguration interface.
470da3d00 fix from Henry Zongaro for build problems resulting from addition of getter methods to the ParserConfiguration classes.
81e1cabf5 fix bogus checking for mutual <include>s etc.
ec2ddb9f2 make Symbolhash more robust vis. null uris and add some utility methods.
e26157967 Implementation of _special_ mixed content model that  does not allow any children.
bf48cc7bc correct typo
71ee8c068 initial code for new datatype design, as contributed by Neeraj Bajaj <neeraj.bajaj@sun.com>.
a51ef9720 Documentation updates for patches applied previously.
da05fe5a2 Added *Filter interfaces for pipeline components that both consume and produce streaming infoset events.
900e913d7 fixed some typos.  Also fixed lots of bugs in handling of <include>s.
519fb1da8 renaming new-datatypes to new_datatypes so the code that lives there can compile (Java does not permit -s in filenames.
9790e83be new datatype design code in the new package.  Contributed by Neeraj Bajaj <neeraj.bajaj@sun.com> and Gopal Sharma <gopal.sharma@sun.com>.
40ed03825 implement XSDAbstractTraverser#getContent; thanks goes to Pavani Mukthipudi <pavani.mukthipudi@sun.com>.  It should be noted that, since we have no way to expose <annotation> components at the moment there is not a way to make sure that everything is being passed in appropriately; when this functionality is added some testing will need to be done (particularly in XSDSimpleTypeTraverser).
d92c1df24 more files for datatype redesign from Neeraj Bajaj.
270607ad3 some patches from Neeraj Bajaj
a86452822 move call to getLocalName after checking for null child; call getGlobalDecl instead of getGlobalAttributeGroupDecl from grammar
2566969d3 additional changes to support null for no namespace uri
85ee88252 fix a NPE in the SchemaNamespaceSupport class and make sure local element traversing is handled correctly when XSDHandler is reset.
842bf6ea4 We were calling wrong traverseLocal method.
5e738f445 forgot to change accessibility modifier
c734b9f9a patches from Neeraj Bajaj
4dfd68b62 some optimizations from Henry Zongaro
597ec97fd Patch from Henry Zongaro: The removeAttributeAt method was removing attributes from its array of Attribute objects by shifting all subsequent objects in the array down one element.  What ended up happening is that the last two elements in the array pointed to the same Attribute object, then the last three, and so on as additional attributes are removed; so later, when the array and objects are reused, filling in the fields of one element of the array affects other elements.
9dd60a6a6 add lots of error messages.
3d13ede51 implementation of allContentModel, largely thanks to Pavani Mukthipudi <pavani.mukthipudi@sun.com>.
7e902d9a8 modify how we check for mixed content model (dont store fBuffer)
9485eb985 more files for new datatype design.  From Gopal Sharma <gopal.sharma@sun.com>.
e29d41e76 removing this file to oblige us to use XMLSchemaMessages.properties.
751f7c6eb Rahul's code for wildcard subset, intersection, union
da2325881 Code from Rahul to check for duplicate attribute uses.
c70e1170d code from Rahul to get an attribute use out of the group
353ae1388 fix for bug which caused an error to appear whenever a global <annotation> was encountered
d3f7d9662 adding AbstractNumericDV for Neeraj Bajaj.  Also a small dumb fix to DateTimeDV to make it compile.
8b14edbd6 handle complexContent type derivation.  Still to come:  simpleContent
f7e8f5a41 added an emptiable method.   Will be filled in when we do particle derivation stuff next month
afa5b4813 added a stub for validRestriction checking.
1dffa6c09 fixed some bugs; generally prepared the way for dropping in the changes to the validator to accomodate Identity Constraints.
a9be2323e Moved some facet and restriction code from simple type traverser to abstract traverser.  Needed by complexTypes too
d2bed5d98 Remainder of complexType support.  Need to revisit error msgs and do more unit testing.
8c9d597a0 removed some old comments; invoke attribute group restriction checking
3825bfc55 added attribute group restriction checking
5ba1e840a temporary fix to avoid class cast exceptions because of AnySimpleType.
46755ed90 Fixed bug in scanElementDecl that would could cause entity boundaries to be mis-reported. For example, there could be an endEntity call without a startEntity -- which would then cause an ArrayOutOfBoundException. (Used simple DocBook DTD as test case.)
a8128d478 Bug fixes (NPE and class cast exceptions).
78425ade7 fix NPE in default attributes. Add temporary solution to resolve xsd file locations.
5eddf576e Allow XML schema validator to use the default implementation (temp solution)
5cb6efeea One more place where we need to use "null" intead of empty string. Remove some debug info.
55ff1c70f We were loosing default values for attributes (because we relied on the new Datatype design which is not implemented yet)
86abd29ef remove dependency on the new datatype design
51747a866 ported identity constraint validation
525c22d16 add an ant target to build in schema support.  This is only a temporary hack until schema support gets mainstreamed.  In case anyone is interested, schema-all is the target that builds schema support into everything; I have not constructed corresponding analogs for any of the other commonly-used targets.
e6d2b5803 expose default/fixed element values via the XNI XMLDocumentHandler#characters callback.
c5e1687fe includes some files omitted in the last commit
8973a4e0a Changed a bit the datatype construction: never throw an exception during a datatype creation (which would have resulted in wrong type of errors "circular definition"). Instead, use error reporter to report errors. The code just uses try and catch blocks in constructors, however if design is to remain the same, we need to revisit the code (remove all code for throwing exceptions from the constructor and validate methods as well). Also fixed some bugs in Simple types.
04f26c61c more datatype / simpleType messages
1122b8f6f add argument in const.
91974e3c1 the allContextFlags should be powers of 2
545406772 various bug fixes. 1.  Make sure identity constraints get a look at element default values as they go by. 2.  Applied a modified patch from Pavani Mukthipudi to simplify the handling of mutual includes in XSDHandler. 3.  Reworked some of the handling in XSDHandler related to <redefine>s. 4.  Applied some fixes to SchemaValidator so that fixed values f elements are properly handled.
8edfe17a1 fixed the names of datatypes gMonth, gDay, etc.
69d2f3d53 Rahul's patch to invoke checkSimpleDerivationOK for attribute restriction checking
cb9d50ab1 getLocalName will return either localname or name of the node
7fc133920 Fixed a bug with complexType extension.   Added call to checkSimpleTypeDerivationOk when content type is Simple
04e43420c follow-on to Neil's patches to get fixed and default values working for attributes and elements
48ad6ad88 moved setting of retValue for DT_NAMESPACE to ensure we always return a wildcard decl
73016ea77 fixes to bugs in simpletype and datatypes
eed5efd74 Fixed a problem handling ANNOTATION in named model groups
07e3d8be4 ensure that .properties files needed by the v2.util.regex package get included when the schema-all target is used.
c881bc98f fix for fixed values of complexTypes with simple content
c1a00d9d8 Updated build script so that both the Version.java source file and the entities used in the documentation that represent the parser version is set during the build. This simplifies the build because you only have to update the version numbers in one place, the build.xml file.
f2c08eeaf Needed to replace one more version string.
71f69d3dd Fix output directory name.
91a31df0e Another build script bug fix.
0ad3674c2 porting patch from Sam Ruby <rubys@apache.org> to permit compilation under JDK 1.4.0 (and to make it faster as well) to Xerces2.
e8e6700a2 Synced up javax.xml.parsers package with latest code from xml-commons module.  This fixes a number of bugs such as:   + Code runs in applets   + Code runs on non-ASCII platforms such as OS/390   + Code is parser neutral and does not mention a specific fallback parser
d552df326 applied some correctness and perf. patches from Rahul
c262aca99 SubstitutionGroup support in content model validators.
2bf0d5094 - Added new internal property validation-manager. The ValidationManager class will coordinate validation process when there are more than one validators in the pipeline. - Added new set of interfaces: ValidationContext and EntityState. [Grammar implements EntityState] - Implemented entity validation support for XML Schema attributes. - Changed [a bit] behavior for our validation features: if schema feature is set to true (validation=true) - report validation errors only against documents with XML Schema grammar if schema feature is set to false (validation=true) - report validation errors only against documents with DTD grammar. However, the behavior for the above features needs to be revisited.
f18f2611d addition of Entity validator for schema datatypes
2c50212d4 several fixes: 1.  Applied a patch from Rahul Srivastava to handle an error condition more gracefully. 2.  Clean up valid redefine cases (we now pass all 19 cases in our internal valid <redefine> bucket). 3.  Handle chameleon includes correctly.
9bfa88fe3 value of entity was never set
dab6c625e move ValidationContext interface to validation directory applied patches from Henry Zonharo for content models.
82844eb87 cm for empty
4b80015b6 support content models that have empty particles
2f2b317f4 print a particle with an empty other value correctly
73bf3dca2 if a sequence or choice has only 1 child, still generate the group
d64b6cce6 Fix to some error-reporting vis. entity refs lacking their semicolon. Now we get error messages like
54bba8a85 fixed some NPEs.  Also fixed a problem arising when a reference was made to a component from the schema-for-schema namespace that could not be found.
9965625f4 for complexTypes which aren't explicit derivations, set base type to anytype.   Also, some cleanup for error recovery
5cc2d1f6c patch from Neeraj Bajaj to handle error conditions in identity constraint decls
a8049b8bc applied patch from  Gopal Sharma .
f6dcdc3b7 fix failure to resolve xml schemas location.
95fa9b079 datatype name should be "Name"
aa9598e8a source.getOwnerDocument() could be null in case source node is Document or a DocumentType which is not used with any Document yet.
a5afc6cc8 use DOMUtil methods instead of DOM calls directly.   Fixed an error to use a proper msg id
573bc3195 use DOMUtil methods instead of DOM directly
4b0def86a 1. fixed various bugs; 2. provided a solid substitution support for validation; 3. made anyType and anySimpleType static; 4. make XSParticleDecl.toString() return a shorter message;
5bee80149 More bug fixes.
6796634d0 Fixed bug in namespace binder that allowed prefixed attribute names (e.g. "xmlns:"+NCName) to have an empty value. This in turn caused other misleading errors to be reported. Reported by: Joe Kesselman
c5bf8540d Minor change to avoid other errors when using continue-after-fatal-error.
67bf384b4 temp fix for notations
54f8d3abc implemented REVISIT relating to XSWildcardDecl not inheriting from XSElementDecl.  This was originally done for performance reasons, but Henry Zongaro showed the performance gains were minimal; thus the design confusion brought about by this inheritance relationship was not justified.
430ad6c0c bug fixes, especially for DFA content model with wildcard.
167a42328 1. check whether a particle is emptiable; 2. reuse .toString message for particle, wildcard and element.
dd251b56b PR: Obtained from: Submitted by: Reviewed by: Modify Deferred DOM implementation to create DOML2 nodes based on setting of parser's namespace feature.   Joint work with Elena Litani.
1f33eb806 temp fix for notations
37827a8cf implemented fix for notation
401076e53 typo
827eb8f27 1. modified the error message for complex type content; 2. fixed a DFA bug.
a3c40b1c4 Added checks for NCName start and name characters to XMLChar. Submitted by:	Rahul Srivastava <Rahul.Srivastava@sun.com>
5841ddc9c Fixed newline normalization bug. Reported by:	Aleksander Slominski <aslom@cs.indiana.edu>
3aa38daf1 Forgot to add implementation for isValidNCName method.
cf425d729 various bug fixes.
98b8baa88 check validation Root constraint, and fix ID/IDREF datatype implementation
5b1036afd remove changes that were accidentally committed.
b11b0b374 various bug fixes: especially NPEs. And ID/IDREF DVs were modified so that we can use Ant to compile them.
db010f9fb replace checkContent method
f3b66b00e Added additional checking for invalid elements in complexType; fixed final check for simpleContent; improved some error msgs
9724c29bd traverseAttrsAndAttrGrps now returns the first non-attr element found - improves error message emitted from caller
68bf704ed improve error for invalid element in attribute group
2bac89fc7 added additional subst. text for a few messages
7c8f83a02 A patch from Rahul. Check whether tempAttrUse is null, to avoid NPE.
877ca905e After XSCMValidator.oneTransition, we should always report an error if the state is FIRST_ERROR. Even in the case where a decl is returned.
73e2af829 For the grammar of schema namespace, we never need to add decls to the global hashtables other than the built-in types. So I initialized the size of all the other hashtables to 0. But it turned out that it would cause some exceptions in get() method. So I changed the size to 1.
6aadc7097 Added a couple of comments, which I think should be changed in our default entity resolver.
e399dbfb8 A revisit of empty string "" vs. null. Make sure that we use "" for prefixes, and null for uris. And EMPTY_STRING is now declared in SchemaSymbols. SchemaHandler has its own EMPTY_STRING, which is added into the current symbol table. This is used solely for empty prefix.
b9f2ad7cb Comments for a bug: if the same document is both imported and include, only the first one takes effect.
ad06e9307 fixing a NPE: first check whehter there is an element node.
081d14040 Remove prohibited attribute uses after we finished traversed all attributes, attribute groups, and attribute wildcard.
41e0777cf A bug when checking type derivation.
6cf194be1 check whether the content of simple type restriction matchs that defined in the schema for schemas.
61398aa86 get rid of checkContent method.
77699942e we should report a warning (instead of an error) in the case where we can't find a schema document.
10ca0ad53 Typos on error code.
370314d6b In xerces1 datatype constructors relied on the fact that facet's hashtable is not null. Otherwise, facets won't be inherited proparly. Need to revisit this behaviour (for simpleType/datatype redesign)
404d08750 Report error when there are more than one attribute uses of type ID.
163e05478 Check for constraint "Attribute Use Correct" in 3.5.6.
a5bf8a3e5 When an attribute is not specified, the value is null, not empty string. This fix solves some NPEs.
0252ae0d7 bug fix
bcc0a84c7 The method signatures are not consistent. For the current design, all "checkContent" method should return nothing, and take ValidationContext as a parameter (instead of Object).
357634629 Sometimes it doesn't report error for mis-match content.
9271a51b0 The condition of name blocks us from reporting an error for incorrect component under <schema>. I moved the error reporting code to another place, where simila conditions are checked.
5063fd6e0 when the value of final/blockDefault on <schema> is #all, it's not always equivalent to the combination of all allowed values. That is, finalDefault="#all" is not the same as finalDefault="extension restriction". Now I treat final/blockDefault="#all" as finla/blockDefault="substitution extersion restriction list union".
9873ddb5d Make jaxp code compile under JDK 1.1 (it used to only just run on 1.1)
6f6f2dc26 SAXParser was missing constructor with a parser configuration parameter.
79f57f4a4 Fixed more newline normalization bugs. This time the problem was in attribute values. The code to scan literals was also simplified a little bit.
25806921e Fixed bug that turned off reporting of entities in DTD.
1af74e013 Fixed bug (again) that turned off reporting of entities in DTD.
87c03bb8e Fixed a number of small bugs which improve the run of Xerces2 through the OASIS conformance tests.
49bd252bc update simpleType messages
8ee43f79e bug fix enumeration-required-notation
f5b718edd Sometimes constructTrees returns null (for example, if the file is not found, or there is no location hint). We need to check whether newSchemaInfo is null to avoid NPE.
3a07bd8a3 remove dependency on v2.msg
108aabe53 qname prefix resolution: 1. add checking for unfound prefixes; 2. add comments at places where more prefix checking needs to be done; 3. removed comments about prefix resolution that are not applicable anymore.
b323cf979 consistently use empty string for prefix and null for uri when absent
656162839 changed comparison for id constr. node names to use string comparison.   Reference comparisons don't always work - Sandy investigating
ad65d5b7f 1. Changed startDocumentFragment to remove context arg - it wasn't used, and resulted in the method not being reached by the validator. 2. Changed start and end element calls to take an element decl, instead of a schema grammar
7eb0e3489 Changed matcher start and end element calls to take element decls as arguments
e9796a3e0 Changed the way in which attributes and data type validators are looked up in the start and end element calls.  This mimics what we do in xerces-1, but may need to be revisited (may not be complete)
c6828f267 some revisits when we build the DFA. also related to how we want to implement UPA checking.
81f04727e We didn't report an error if there is no extension or restriction in simpleContent and complexContent.
50e0e9047 new wildcard decl implementation, which supports the (correct) subset/intersection/union operations. thanks to Rahul's patch (though part of the partch was modified.)
01ec73c51 Fix bug so that code compiles and runs on jdk 1.1.
34125d0b9 Updated build script and documentation in preparation for the Xerces 2.0.0 (beta3) release.
2bab98e27 Add hardwired default fallback factories to xerces jaxp implementations until we can figure out why FactoryFinder code does not run as applet in Netscape 4.7 correctly.
a75e8ba3f A patch from Rahul about a missing constraint of keyref traversal: c-props-correct.2
0b738b350 A patch from Rahul about the comparison of component name. For now we don't have a full support of symbol table, so we need to use "String#equals()" instead of "==".
594ea3edf Fixed up attribute restriction constraint checking for FIXED
c00e974c6 moved call to removeProhibitedAttrs from traverseAttrs into callers.   That's because for derivation by restriction, we need to do the removal after attribute merging
63299d69c Fixing a NPE: sometimes XSAttributeCheck#checkAttributes return null, if the element passed in is not expected. And further reference to the returned value would cause NPE.
a3551277a Add dynamic validation to schema validator + allow validation of files with dtd only. Need to revisit the assumptions we make about the meaning of validation and schema features
dced34979 1) Fixed some null pointer exception bugs exposed by domunit 0.0.6. 2) Added notation and entities to doctype node for both deferred and    full DOM modes.
360f04377 use standard parser configuration to parse schemas
f57bb3d50 1. Fixing a bug in KeyrefTraverser: after XSDHandler#getGlobalDecl(), we need to check whether the returned component is a key or unique. if it's a keyref, we need to report an error. 2. Also updated some error message for XSDHandler#getGlobalDecl().
3b784074e 1. After the finding all components in <redefine>, we shouldn't set it as hidden, because we need to traverse all the compoents again in traverseSchemas(). 2. Some typo when trying to traverse an <annotation>.
0b0bc06fd Add DTD/XML Schema configuration and make it the default configuration for the parsers
f06edf1ed Apply patch from Pavani Mukthipudi
d5b61a43c Fixed data corruption problem in deferred DOM relating to Entity and EntityReference nodes.
3df24be68 Documentation changes for new Schema alpha release.
22c0e12e4 Package reorganization to include alpha XML Schema support.
2be1c9fcc removing files from v2 directory (package reorg)
dfdf40a8c update
0788bce35 Updated links and information for SAX.
496bec1ef Minor change to correct parameter to error message.
1070d2d64 ensure we always call document handler events from schema validator
13a0812cd - fixing bug for ignorableWhitespace (CDATA section are never ignorable) - deferred DOM out of memory exception with recursive entity ref.
01e911538 Applied MS VJ++ workaround for jkesselm
64f8cd8c5 Union types should always have a base type. Otherwise we'll get an NPE. The fix is not good: we should set anySimpleType as the base, but this requires a relatively big change, which is not desired before the release. Now I just set the base type to the first member in the list, to avoid the NPE. We need to revisit it after the release. (The same applies to list types).
9baf7d206 Need to pass current "grammar" and "schemaDoc" along every method call. It's possible that we go to traverse another simpleType when traversing the current one, so having global variables fGrammar and fSchemaDoc is not correct.
0f624301f Should only add global decls to the gramma when they are really global.
f634bc748 We have to distinguish the two cases: the type is a restrictoin of another union type, and the type is a union of another union type and other types. A new variable is introduced to tell whether it's a restriction. This is also a temprory solution.
aa5be5a44 update docs
c5cb29ab5 Skeleton release plan for xerces2 schema beta
4059b0720 The release plan which was followed for the just-posted schema lapha - posted to capture the work involved, etc.
b0784d027 add src-redefine.7.2.* constraints.  Also add hooks for src-redefine.6.2.* constraints, though the checks themselves will have to wait until derivation-by-restriction constraints are implemented.
c6e91d699 1. reorganize method calls, so that code for schema validation and code for forwarding xni events are separated. 2. for default/fixed values, send characters() event between startElement and endElement. The behavior before was a bug.
5d68bcb40 1. Add a new method to check whether one element is in another's substitution group; 2. Don't try to check substitution group if an element decl is not global.
58c374a1e Add more information to element/attribute decls: whether the decl is global. This is required for PSVI, and other class (traversers, validator) also need this information.
24c0ef717 added more messages for complexType
bd3c1b3ac changed some reportGenericSchemaError calls to reportSchemaError calls with proper msgs.  More cleanup to come.
8ed1f44ba Store substitution group information in the grammar. We'll need to collect such information from different grammars, so that substitution group handle can calculate {substitution group} for a given global element decl.
a32f777fa The constraint "Element Default Valid (Immediate) " is used in both element traverser and in schema validator. So it should live in XSConstraints.
ef60433ed Added missing constructor to DTD/XS parser configuration.
65f147559 Fixed types for DTD and XML Schema validator components in the XNI Manual regarding the Xerces2 reference implementation.
2b0f349f0 Reverted Schema validation to pay attention to validation feature id.
fc8cd1c46 Applied patch from Henry Zongaro (bug fixes 4463 and 4472)
9096c2e82 new messages for complextype constraints
263d0900c Use messages from properties file instead of hard-coded msgs
67f17d1ce 1. it's possible that fTargetNamespace == null, in this case, don't use it to generate hashcode; 2. implement equals().
d5f177d80 Fix some DOM L2 conformance bugs
1221cd7ea Need to add all complexTypes (including local ones) to the grammar for future constraint checking.
9bd80f591 Error message for Unique Particle Attribution.
9898ead65 Make "addComplexTypeDecl" public. Otherwise XSDComplexTypeTraverser won't compile.
3ceb45f58 XSComplexTypeDecl should be responsibe for setting fCMValidator. What if CMBuilder#getContentModel is called by other classes, which don't want to modify XSComplexTypeDecl#fCMValidator.
555a65fe1 XSComplexTypeDecl should be responsibe for setting fCMValidator. What if CMBuilder#getContentModel is called by other classes, which don't want to modify XSComplexTypeDecl#fCMValidator.
4e7e29429 Added missing default attribute values.
33dc73429 Improved output of print() debug method when DEBUG_PRINT_TABLES debug flag is enabled. Instead of looking at type numbers, you can see short text descriptions of the types so it's easier to figure out what each node in the deferred document tables is.
56212e011 Fixed double entity value bug in deferred DOM impl.
dfde10233 Made sure that specified flag is correct when creating an attribute node in the FULL dom implementation.
6199dd8cd Bug fixing [2783]: the handling of attributes "xmlns???" was not correct in XMLSerializer.
e8a80f3c5 Implemented element by id registration required for getElementById() method. This will work only for DTDs (we can't at the moment retrieve ID type for schema attributes) Binded namespace attributes defined in XML-Infoset to  http://www.w3.org/2000/xmlns/
54bca93de fix a small bug in he schedule.  Thanks to Henry Zongaro for picking this out.
2a55beab5 Fixing bug [943]: whenever a string is added into SymbolTable, we internalize it using String#intern(), so that the strings passed to the application are java-internalized, and can be reference-compared with other java-internalized strings.
c1347feb1 Fixing bug [943]: whenever a string is added into SymbolTable, we internalize it using String#intern(), so that the strings passed to the application are java-internalized, and can be reference-compared with other java-internalized strings. The sax feature controls whether to internalize Strings using String#intern(). The behaviour of this feature changed from always off to always on.
9a92099bd apply a patch from Glenn Marcy to fix bug #2206
51feae36d Explicitly turn on namespace-prefixes if namespaces is off
91c47268f applying a patch from Sandor Szego <sszego@saba.com> that permits, at user option, serialized HTML attributes to contain "" for their value instead of standing on their own.  This does not alter the default behaviour.
47a4b6264 Performance bug fix (http://nagoya.apache.org/bugzilla/show_bug.cgi?id=4514). Patch was submitted by Stephane Dahan (stephane@quiver.com) and verified by Henry Zongaro
5ffa342e0 Making the new simple type design conform to a new set of interfaces. Not complete yet. And there are still open issues about the interfaces.
108e8a028 New changes to the implementation: some modifications to the interfaces; fixed some bugs; added normalization support; created all built-in types, etc.
bd937837a Fixed two problems: 1) Entity reference and entity content. Previously, I was storing    the literal value of declared internal entities in the entity    node under the doctype. Then, when fluffing up the entity ref    children, the literal value would be copied over the entity ref    children. Oops! 2) Once I fixed the first bug, then I noticed that I had a ref    counting problem in my cloneNode(int,boolean) method. As the    diff shows, you should *not* try to circumvent the setter method    for the parallel arrays. Otherwise, the reference counting will    not work correctly and eventually you'll get a NPE.
b359c6344 Slight fixes to patch applied for bug 4515. The new data fields were not marked "transient" for serialization and the size() method was being called in the loop when building up string value.
5a4eb6ef4 Fixing bug [3375]: allow a valid uri string.
f416f19a4 DOM Level 3 experimental interfaces
9367b9498 fix for doc problem vis. SAX namespace-prefix feature pointed out by Arun Yadav and Glenn Marcy.
a02590386 fix documentation for the defaults of two more features.  The parser does not produce warnings on duplicate attribute definitions or for undeclared elements that are referenced in a DTD by default.
dff0cd6c6 Full schema constraint checking and Unique Particle Attribution checking: 1. A new feature is added "validation/schema-full-checking" (as in Xerces-J), which controls whether the 3 special constraints are checked against schema: Unique Particle Attribution, Particle Derivation, Element Consistent. 2. Update schema validator to check the 3 constraints if the feature is on. 3. Code for Unique Particle Attribution checking 4. Updated all content models to check for UPA 5. Code for computing the substitution group for a given element decl
53d9d57d2 A new feature is added "validation/schema-full-checking" (as in Xerces-J), which controls whether the 3 special constraints are checked against schema: Unique Particle Attribution, Particle Derivation, Element Consistent.
c0fbf1c5c This class doesn't need access to XInt and XIntPool.
fd364687b Element traverser doesn't need access to substitution group handler.
21cda7ed1 Need to implement a method for UniqueParticleAttribution checking.
4e1fac19c Need to implement a method for UniqueParticleAttribution checking.
8b716ce78 Mixed content is handled in the schema validator, so we don't need another content model for that purpose. (It's not referenced by any other class)
3d1e44380 The handling of "xsi:nil" was not correct: 1. When no element declaration is found for the current element, "xsi:nil" should be ignored; 2. The value of "xsi:nil" should be normalized before being compared with "true".
86d652db1 Remove DOM L3 methods.
8572606a9 when a parser receives an XMLParseException that is not wrapping another exception, throw a SAXParseException to the application instead of a SAXExcption so that the application can extract locator information if it chooses to do so.
71dd6a48f New simple type design: 1. A new set of interfaces for datatype validators (DTD) and simple types (Schema); 2. An implementation of the Schema interfaces.
0b5698cba fix call to XMLAttributesImpl#setType() so that enumerated attributes appear inside parentheses as setType() javadocs expect.
1abc4c736 fix XMLAttributesImpl so that getType() returns NMTOKEN for an enumerated list of attributes, as its javadoc (and that of the XNI interface it implements) advertise
28e403461 according to DOM l2, the getEntities call in org.w3c.dom.DocumentType should not return parameter entities.  So make sure they are not stored in the docType implementation entities node map.  Thanks to Elena for pointing out the right patch.
2430dfd4b fixed small bug in setValue()
cad0254f5 fixed compilation error
72e96de48 SAX requires attribute.uri to be either Namespace URI or empty string, but not null.
8caa139af fix a problem where we would happily throw away any SAXException a user emitted from any SAX ErrorHandler event, and return the SAXParseException passed in to the call instead.
1d7e0ca5f DOM L3 DOMWriter implementation. Submitted by: Rahul Srivastava Reviewed by: Elena Litani
338083cdb Remove "revisits" and update saveXML according to the spec: "if this parameter is null the whole document is serialized"
e84b40f1b Added particle restriction checking
2c39655f3 Added particle restriction messages
cc42d42ef Added an isEmpty method
08ec3715b Changed an error key from general to General
e1c8e3fb0 fixed problems with subst. groups in particle restriction
1281996de Modify XNI to include Augmentations parameter on each XMLDocumentHandler call. Modify samples. Modify docs http://nagoya.apache.org/bugzilla/show_bug.cgi?id=5058
898493676 For particle restriction case RecurseUnordered, if there are particles in the base without matching particles in the derivation, and such particles are not emptiable, detect an error
b00d1f5b7 checking in changes to split up APIs and implementation into separate JAR files.
08e660ca8 make printing of Version string more generic
a14afb02b PR: Obtained from: Submitted by: Reviewed by: Testing commit. No modifications done.
421e957d6 PR: Obtained from: Submitted by: Reviewed by: Testing commit. No modifications done to this file.
a9ca8f3da put JAXP resource files in the implementation jar instead of in the API jar.
aea5e226c make search for a SAXParser class by the ParserFactory more robust.  This is a clear bugfix to SAX level 2, and since the new class that is being added is package protected this should have no unexpected impact on users of the API.
7761a4bda The DV implementation needs to know whether facet checking or id/idref/entity checking is necessary when validate() method is called on a DV/simpleType.
e3113b434 Various updates on the new simpleType design: 1. If the type is a union type, we need to return which member type is used to actually validate a value. 2. Add a method on SchemaDVFactory to get an instance of specified factory implementation. 3. Provide a way to tell whether a type is a NOTATION type. 4. Bug fixed in the default implementation (xs_new package).
1c118bb61 Update xs package to use the new ValidationContext/State, so that the classes can tell the DV implementation whether facet checking or id/idref/entity checking is necessary.
a21ae11d5 There are special characters copied from the spec. Some editors might have difficulty dealing with them. Now I'm removing these special characters.
66f1ff787 - Added xni PSVI interfaces for light-psvi support - those are not final and maybe modified in the nearest future. - Provided basic implementation for ElementPSVI. - Modified DOM interfaces to fix known bugs - ls/as modules
4906edbe9 Implementation of some features for DOM L3 Core/LS. Submitted by: Gopal Sharma, SUN Microsystems Inc Reviewed by: Elena Litani
2d27c0ece Implementation DOMBuilder (including new feature "include-comments") Submitted by: Pavani Mukthipudi Reviewed by: Elena Litani
9c6d37924 We shouldn't insert an "all" particle into a sequence or a choice, otherwise we won't be able to create dfa from the result particle.
71823bb76 Switching to the new simple type iimplementation. This enable us to get more information from simple types, which is essential to PSVI support. 1. Modified xs package to use the new simple type interfaces. 2. Fixed bugs in the new simple type implementation.
fe32674b3 added cos-element-consistent checking
107dc8c52 new message for cos-element-consistent
7ce7a4b74 temporarily disable cos-element-consistent checking
41e665979 Should pop the namespace context after we finish process the element content. Otherwise if the type of the element is QName, the value won't be validated correctly.
91a109f54 Modify impl of DOMError to allow to reuse error objects.
4e12e0389 Apply patch from Rahul Srivastava adding documentation and fixing some bugs. Modify implementation of split-cdata-sections.
b67c28a54 Use an error report wrapper to record schema instance errors for each element. This is primarily for PSVI: we need to expose a list of error codes for each element.
e425ee60a Fill in the PSVI information for elements in XMLSchemaValidator. Currently it is the default behavior (will be disabled as soon as we add property /feature to control PSVI output)
396251225 re-enable cos-element-consistent checking
e1067d16c Support the two properties (which were introduced in Xerces 1): external-schemaLocation and external-noNamespaceSchemaLocation. Please refer to the "properties" page of xerces-2 documentation for detailed information about these two properties.
68b31de10 Updating the documentation of the two properties: external-schemaLocation and external-noNamespaceSchemaLocation.
e8ffa7fd8 Updating the documentation of the two properties: external-schemaLocation and external-noNamespaceSchemaLocation.
8e0319415 Save docs changes
4e1e19ced Add partial attribute PSVI information. Modified XNI to support it.
3a5616841 Finish up support for AttributePSVI. getElementById() should now work for XML Schemas
d24395408 initial implementation of DOM level 3 ASModel and DOMASBuilder.  This will allow a sort of Grammar caching.  This is not well-tested; but it does at least compile.
7a4c05a9f The same validation state can be used to validate more than one (schema) validation roots. Entity/Namespace/Symbol are shared, but each validation root needs its own id/idref tables. So we need a method to reset only the two tables.
8956d0e37 The "validation root" defined in schema spec is not always the docment root. Now we take this into account, and change the following accordingly: 1. id/idref checking: they should be done with a validation root sub-tree, instead of within an instance document. 2. element psvi output: the validation context property should be the validation root.
a89040f9f Updating api docs for the new simple type interfaces.
e09592488 Instead of get the class name from a system property, we provide a method "setFactoryClass" to set which class name to use to create factory instance.
9f9eaa828 A runtime exception that's thrown if an error happens when the applicatoin try to get a DV factory instance.
340985029 Part of fix for 4549200 Xerces2 does not conform to draft JAXP 1.2 spec
19b32b8bd Part of fix for 4549200 Xerces2 does not conform to draft JAXP 1.2 spec
4b1086748 Continued: Part of fix for 4549200 Xerces2 does not conform to draft JAXP 1.2 spec.  Forgot part of fix.
e7e17c40d collect partial validation information for PSVI
3332ac34b Implementation of PSVI writer by  Arun Yadav,Sun Miscrosystem. Added PSVIConfiguration and PSVIParser to the samples in xni.
a0b4034a2 Implementation of optional "false" value for "create-cdata-nodes" defined in DOM L3 by Rahul Srivastava, Sun. This feature also needs to be supported by Xerces Jaxp implementation. Reviewed by: Elena Litani, IBM
a63c1f9b5 PR: Obtained from: Submitted by: Reviewed by: Testing cvs commit. File not modified.
0c2b0067c some long-awaited documentation updates reflecting the jarfile split.
b3ba0e786 some fixes to make alt tags more readable
54c32d1de Solving the relative uri problem for xml schema include/redefine/import. This should fix bug [4713].
9e55dcbe0 update encoding map so that it contains all IANA aliases (except those with "cs" prefixes, since it is not clear that IANA intends them for this purpose
a16fb7166 Revert to previous version 1.7
72f787a07 1) Updated samples to new XNI interfaces. 2) Added incremental option.
68169e6c7 Fix validation switches so that they implement JAXP 1.2 proposed spec.  The schema association w/ instance doc still needs to be implemented.
54804e8a8 changes required because we use null for no uri in XNI
0a0fae26f updating XMLReaderFactory to SAX 2.0 R2 Pr3 level.  This makes loading class parsers more robust, in way similar to the previous update of ParserFactory.  Note that this commit also addresses the two alternative methods for locating a default XMLReader that the new XMLReaderFactory provides--that is, an entry in META-INF/services is included, and the XMLReaderFactory defaults to our implementation if no other is found.
a2e63c7a8 Fixing bug [5153]: Pull parsing of prolog broken (and epilog).
32915d2ec Updated PSVIWriter to generate "xerces" version of PSVI output, as well as fixed some bugs.
b8ff71740 Predefine "xml" prefix during XML Schema Parsing. Update XNI: - add XML_URI and XMLNS_URI constants - add clear method to Augmentations
a8a693f22 PR: Obtained from: Submitted by: Reviewed by: Replaced key "general" with "General" which otherwise leads to an exception.
2e3dc70f0 Make field public to allow sub-classing of XMLSerializer. Patch by: Brian Thomas
d33a56770 fixed cloneNode()
896b53406 added missing Range feature which we support
587c52fa8 added DOM tests to the test target, people MUST run those tests before committing changes
fbc57d464 added a few tests
5dc585678 No one is relying on these files. Removing them from v2 directory.
4b6e5feb6 Change the default parser configuration to StandardParserConfiguration. In standard config move the setup of the pipeline to parse(boolean) (the components of the pipeline will be reset there as well). Standard config will add XML schema Validator to the pipeline if schema validation feature is turned on.
371a2aab5 Turn schema feature off by default
f1e99bee7 No longer wrapping RuntimeException in the parse method so that application errors get passed out correctly. Bug:	5076
5255e2629 fixed bug in code handling EntityReference node subtrees that left the node empty in non deferred DOM. Also fixed a bug in importNode of EntityReference nodes which mistakenly carried the old value.
1518c9e49 fixed cloneNode() on Entity and EntityReference
4f1a0d276 fix some small bugs in encoding support.  Now we at least recognize EBDIC and many flavours of Unicode and UTF-16.  We still cannot process documents written in these encodings.
a514d3770 update releases doc
c25927880 1. Updating an error message for element and attribute traversers. 2. Error were not reported for unnamed global simple/complex types.
1c0b33d4a if there is no default attribute value, pass null for value to attributeDecl in the pipeline and ensure consumers can handle it
d274034cb predefined entities should be sent to startEntity method of LexicalHandler by default
e3edd80d2 Update the release document for changes in the coming release.
d20a21c1f Build javadocs for DOM L3 apis
244768ec0 Modified APIs to include reference to DOM L3 APIs Modified FAQ: - general to include questions about DOM L3, PSVI - configuration and validation: to explain how xerces validation works Modified description of validation features Modified xni samples to include reference to new PSVI samples. Commented out xni-core API description (instead should look at javadocs)
49f1ef797 In some cases (preparse a grammar via dom3 as api, for example), there is no current entity. This check prevents seme NPE to happen.
f9fa5e7d2 1. XSDHandler is always expecting an entity resolver, so if the application didn't set one, we should use entity manager (the default implmenation) instead. 2. A check to prevent NPE.
5b8e552d2 A new sample program to illustrates how to use DOM3 DOMASBuilder interface to preparse ASModels and associate ASModels with an instance document to be validated.
cdb6c39fc Updating documentation for the new ASBuilder sample.
026b83d14 DOM Level 3 extensions
beba887c0 added some DOM Level 3 Core features: DOMImplementationSource, Node.set/getTextContent(), Node.isSameNode(), Node.getInterface(), Node.set/getUserData()
efdb9eb3b added some DOM Level 3 tests
a1f1c3541 add support for EBCDIC and make support for UTF-16 more robust.  Did this by adding an inner class to XMLEntityManager to wrap InputStreams, in place of the OneCharReader inner class that attempted to rwrap readers.  Because of the way Java-supplied readers work, the former method would not work in general.  While this method does, its downside is that it is not possible to get the wrapping object out of the way as it was in the OneCharReader case, so it is likely to be somewhat less efficient.
675d86ef1 added DOM Level 3 Core stuff
3ac34aa15 PR: Obtained from: Submitted by: Reviewed by: Code not modified. Checking cvs commit notification mail.
a0188b458 PR: Obtained from: Submitted by: Reviewed by: Code not modified. As Sam fixed my problem. This commit should generate a commit notification mail.
41c8a3af0 updated docs to include info for DOM l3
d591b5c3b add dom3 document
4b07d05ea fix problems when reading external entities and other documents without an XML decl
d58ce8f71 Should apply schema default value only when: nil is false and no character/element content.
5e52daa8d add implementation of DOMImplementationAS
e1c9a67a3 update sample to use DOM interfaces
96eae2ecb specified should not be provided if attribute was defaulted from XML Schema
cc2e61b1f change validation description
9486cc21d update release info
eee000fa0 added setting of some of the new DOM Level 3 attributes: encoding, actualEncoding, version.
1b71abafc fixed something I missed when moving the code from CharacterDataImpl See bug #5360
4784ec490 fixed NPE in readObject
22aede763 a few corrections + a number of wordsmithing fixes for the documentation.
ccab4f6a9 The <note> element should be put outside of <ul>.
bd7f5cc07 Fix bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=5216
dfc183e47 fix typos
e7637541f more doc updates--forgot to include info about jar file split last time.
fae42e200 changes so that the parser will run on 1.1.8
bdd663c39 changes for Xerces 2.0.0 beta 4.  Also modified the "all" build target to generate a binary distribution containing the old-style jarfile.
7959c95cb forgot to add contributions from Lisa Martin to the release doc yesterday (sorry Lisa!)
3decb44a9 fix a bug where we would parse a document with a Java encoding (not an IANA encoding) irrespective of the value of the allow-java-encodings feature.
032a48717 PR: Obtained from: Submitted by: Reviewed by: When namespaces and namespace-prefixes are true, the localpart should be a empty string for attributes xmlns:x=".." and xmlns=".." as per SAX documentation.
63fbbba72 update schema limitations document to reflect the fact that we do support UPA, element-cos-consistent and restriction-related constraints.  Also do a bit of wordsmithing.
f0a2f2da4 To be consistent with other global-scoped components, we need to set <key>/<unique>/<keyref> elements to hidden before traversing them.
665bfb076 bug fix http://nagoya.apache.org/bugzilla/show_bug.cgi?id=5546
4c02c4ce4 textDecl and xmlDecl were never called
2f8a7dcc8 xmlDecl had a wrong number of parameters
5fe4a3c13 Added internal subset string to DOM.
9054e4e56 Bug fix http://nagoya.apache.org/bugzilla/show_bug.cgi?id=5122
4abea1862 were no longer using the style-apachexml jar; its contents live under the docs directory.  Therefore, removing that file and removing references to it in the ant script.
fdd9579bb Properties "external-schemaLocation" and "external-noNamespaceSchemaLocation" were not recognized by the standard configuration. Now it's fixed. Thanks to Gopal's patch.
7601145b6 Performance improvement: statically create one instance of the template base uri, instead of creating one whenever "getActualValue" is called.
978068b9e According to the schema spec, it's an error if included or redefined documents can't be found. But it's ok if an imported document is not found. An warning is issued in the latter case.
08a6b1c7c Updating error messages for simple types.
fe7a6b2a6 1. We can access anySimpleType directly from the SchemaGrammar class. This is more efficient than looking it up in a hashtable by name. 2. After "getGlobalDecl", we need to check whether the retuned type is a simpleType, before cast it to XSSimpleType.
395f82075 Implemented methods for the four fundamental facets. Thanks to Neeraj's patch.
811c1ec69 implemented support for UCS-2 and UCS-4 encodings by the use of a custom Reader class.  Still need to revisit performance issues related to reading input character-by-character when that is not necessary.
83bf97a5c Default schema validation support is false
2ddb8cdb2 Default schema validation support is false
c12945c00 implement (finally!) redefinition constraint src-redefine.6.2.2
8aff39894 when a schema cannot be resolved to in an <include>, we should indeed produce a warning, not an error.  Also implement warning production when a <redefine> oontains only <annotations> and its cchemaLocation cannot be resolved to.
7caaacacb fix two minor typos
ca5c78b55 fixed a typo whereby we were storing NMTOKENS as the type of an attribute when it should have been NMTOKEN
d336bef19 in attributeDecl call, the type should be a parenthesized list of tokens for enumerated types.  Fix for bug 5317
eae7f9baa Minor output adjustment.
ce27cb614 PR: Obtained from: Submitted by: Reviewed by: Javadoc fixes for HTML DOM
f59f47412 PR: Obtained from: Submitted by: Reviewed by: Javadoc warning fixes
72e1bbad5 1. Provide getPrimitiveType() and getPrimitiveKind() for atomic types; 2. Pass an extra array to applyFacets, for namespace context. This is used for qname resolution.
1f9f70459 When traversing simple type restriction, need to record the namespace context, so that qname enumeration values can be properly resolved later by simple type classes.
fae1f4694 "isNotationType" is removed from XSSimpleType. Use "getPrimitiveKind" instead.
835e87088 According to the interpretation from the Schema WG about "empty" content type of complex types, no children is allowed at all: not even PIs or comments.
439d6f838 Udating a confusing message.
8e17923a6 Fixing bug [5788]: when there is no children under <extension> of <simpleContent>, we didn't copy attribute uses from the base type.
e811016a5 Minimum number of arguments should be 2, not 4.
a40aa2b2e Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=5694
cb2846d27 Implemented namespace fixup during serialization of DOM tree.
13be0a757 Test program for namespace fixup alg
6ae8ad630 Added ability to override default parser configuration.
c35807fb0 use error messages from XMLSchemaMessages.properties instead of hardcoding them in calls to reportGenericSchemaError
c254a2a6c clean-up.  Eliminate // REVISITs that have been revisited and get rid of some Xerces1 leftovers.
5836160e8 update error messages
5c311571f cleaned up output
05ca0d71b output expected to be produced by the test program
09a2a1da2 Added FAQ page for the Xerces Native Interface. The first entry details how to override the default parser configuration.
8545d9983 Documentation fixes related to: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=597
474a683ae Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2389
afdb7411d Update simple type error messages: get rid of "General", and use error codes from the schema spec.
78f1c0f3e Cleanup all reportGenericSchemaError() method calls.
d517308f4 If an child-element is not expected, an error should be reported against the parent element (an error code in the PSVI item of the parent element).
a1166be36 Fixing bug [2703]: change network path "\\host\blah" to "file://host/blah", so that we can find other file paths relative to this one.
607005226 Provide more accurate error message in the case where the base type of a simple type can not be found.
218e53670 Add the namespace uri to the symbol table. This wasn't done for namespaces from the xsi:schemaLocation attribute in the instance document.
1479c089b PR: Obtained from: Submitted by: Reviewed by: Javadoc fixes for HTML DOM and Serializers package
c7eb1696b first part of changes related to including Grammar caching API.  Renamed XSGrammarResolver to XSGrammarBucket to more accurately reflect the function of this class.  Changed XMLDTDValidator to use its own custom GrammarBucket instead of the (future) grammar pool implementation.  Also renamed impl.dtd.Grammar to impl.dtd.AbstractDTDGrammar to feflect what this class does.  All other changes made to make things compile.
008f1bbdf fixed report of event phases which were completed mixed up
8f585d32b updated with correct event phases
be1750469 phase 2 of Grammar caching-related updates.  Now the new interfaces are added, and the Grammar class (now an interface) has been moved to the new xni.grammars package from its former home in impl.validation.  All classes have been changed to use the new GrammarPool.  Still to do:  1. add XSDDescription.java; 2. incorporate the new XMLResourceIdentifier into XNI callbacks; 3. extend XMLLocator from XMLResourceIdentifier; 4. make sure docs are up-to-date to reflect new ways of doing things.
6dbd9c987 grammar pool initial implementation
b13adfee2 left out of previous commit
3ab415d7d implemented DOM Level 3 isEqualNode() method
5da29edb9 added tests of DOM Level 3 isEqualNode() method
d17bd79b3 Fixing bug [5884] and [5929]: In the old implementation, when there are multiple <any>/<anyAttribute> elements in the xsd file, it's possible that the "process contents" value in one wildcard is overwritten by that value from another wildcard. Now it's fixed.
773460951 Predefined entities should be reported via startEntity in SAX by default. In DOM predefined entities are expanded by XML processor.
1ab22779a fix for bug id 5927. Thanks to 'Taki' for the solution.
e94cfece7 committing some (slightly modified to take care of regressions) massive XNI changes on behalf of Andy Clark.  These make use of XMLResourceIdentifier in start.*Entity calls, and add Augmentations to various DTD Handler callbacks.  Things yet to do: 1.  Make Augmentation callbacks consistent.  They are null sometimes, not others; need to make them null by default. 2.  Propagate XMLResourceIdentifier to remaining methods it could and is not being used in. 3.  Tie XMLResourceIdentifier and XMLLocator together.
a1d2180b4 PR: Obtained from: Submitted by: Reviewed by: Update to DOM L3
b256754aa If an XML document did not have any internal DTD subset we were ignoring settings for  load-external-dtd feature.
95c464dc5 Removed workaround for previous Beta3 code which is no longer needed and causes additional bugs in combination w/ other apache properties.  Calling setAttribute(name, value) w/ a value of null, causes name to be unset.
f1dc890f1 Solving many problems related to schema document resolution: 1. Bug[5849]: can't validate schema documents against the schema for schemas; 2. We failed to report an error when the importing and the imported schema documents have the same target namespace; 3. We failed to report an error when the including and the included schema documents have different non-absent target namespaces; 4. We should use different error codes for similar errors related to importing, including, redefining, and reference from the instance document; 5. We failed to deal with the case where the same schema document without a target namespace is included by two other schema documents with different target namespaces. We only considered one of the inclusions. (Similar problem occurred for <redefine>.) 6. Bug[4421]: We failed to deal with the case where the same schema document (with no target namespace) is both included and imported by the same schema document. We only considered the first reference. (Similar problem occurred for <redefine>.) 7. In DOMASBuilderImpl, we should convert a URI input to an InputSource, not the other way around; 8. If the input is a DOMInputSource, we need to create an XMLInputSource accordingly; 9. For grammar-preparsing methods, we shouldn't call EntityResolver for the locations.
acc627b3a Now we use property files for error codes.
8db71a481 Synced up code to work w/ Xerces2beta4 in the area of JAXP schemaLanguage property.  The code sets the appropriate internal features correctly now. Also, returned the Xerces2 SAX parser directly for the SAX1 getParser() call instead of wrapping it in a SAX2 ParserAdapter().
5c9fe676c Cleaning Javadoc comments for the recent XNI changes done.
e4cbbff26 Cleaning Javadoc comments related to recent XNI changes.
a950068b7 start/endExternalSubset calls were not passed to next component in pipeline.
629ff6c2f Synced up code to work w/ Xerces2beta4 in the area of JAXP schemaLanguage property.  Misc code cleanup.
01585d7f7 Synced up code to work w/ Xerces2beta4 in the area of JAXP schemaLanguage property.  Misc code clean up.
5308e75bb This large commit serves several purposes:
fee132678 1. Move the old schema dv implementation to a brahch dv_xs_v1; 2. Move the new schema dv implementation to the xs package.
2d8005496 Should always use the entity manager, which is always there, and wraps the user-defined entity resolver.
9af3ba6c6 Should do derivation checking on attribute uses in the derived type, if their {use} is prohibited.
caf724f4c Some messages looked ugly. Fixed them.
9768ff6cd fix for bug #6008
0c89615b0 make passing of Augmentation parameters as null values, unless some component has actually augmented them, the consistent behaviour throughout the parser.  SchemaValidator now instantiates its own Augmentations when needed.  Also fixed some typos in the schema validator.
270391998 Updated features doc for string-interning feature. Default is true.
aefc5b689 According to DOM L3 clarification: Cloning an Attribute always clones its children, since they represent its value, no matter whether this is a deep clone or not
521b8416e Implemented current-element-node property for DOM. Submitted by Ted Leung Reviewed and modified by Elena Litani
3bb9a6ed5 Fixing some component lookup bugs: 1. sometimes we failed to find a component from an imported document; 2. sometimes we failed to report an error for references to components in a namespace which is not imported into the current schema document.
70bd56673 fix ArrayIndexOutOfBoundsException that would result if one parsed a doc with an incomplete PI or comment.  Regression from XNI change of 01/22.
212f769cf one more update to the encoding map--added IANA "printer-friendly" encoding names (those starting with cs).  This makes our encoding map considerably larger, but it is more comprehensive.
6647bd6bc According to bullet 7 of the constraint "Particle Restriction OK (Elt:Elt -- NameAndTypeOK) ", we should use {extension, list, union} for type derivation checking.
72ec6b103 Document handler can be changed during the parse. Fix related to http://nagoya.apache.org/bugzilla/show_bug.cgi?id=5084
f2b1d4db4 DOM WG decided that for consistency with cloneNode, isEqualNode is always deep on Attr nodes
752265928 cleaned up separation between DOMParser and DeferredDOM by moving part of the code from createDeferredElement back into the parser, this has several benefits including to only have to walk the list of attributes once
f17905e8f Added new XML Schema features: a) validation/schema/normalized-value -- allows to expose XML Schema normalized values via DOM/SAX b) validation/schema/element-default  -- sends characters() calls for schema element default values.
3ae6a2a91  PSVI writer should check if characters include element default value
f6f8d6035 removed DesignDoc reference from javadoc
38fd18797 removed DesignDoc reference from javadoc
68f992516 XNI updates: 1) xni/Augmentations: added Enumeration keys() method that returns enumeration of keys in the Augmentations 2) xni/XMLAttributes: added Augmentations getAugmentations(String qName) method 3) renamed some PSVI methods: - schemaSpecified to isSpecified() - added get* to some methods.
92a091cb5 removed class files from CVS
98d75a070 Update samples to reflex some XNI changes
dfbcd98ba fix for bug #6041.  The fix involvestreating SceannedEntities as external even if they have no systmId parameter.
90490adfe Effecting one more XNI change:  add a constructor to org.apache.xerces.xni.parser.XMLInputSource which has an XMLResourceIdentifier as its argument.
195ce18a6 Small modifications for normalization implementation: if element must have no character data (nil) we will expose character data in error via SAX or DOM
94881fee7 release update
7ed2665bc Add new features: validation/schema/normalized-value validation/schema/element-default
24eec9245 Update release docs
4781bb004 Update docs
bd45a0339 partial update of XNI manual to reflect the various changes that have been undertaken in the last month or so.
bdfa18226 added line for my fixes
a18c4fff4 PR: Obtained from: Submitted by: Reviewed by: Javadoc fixes for org.apache.xerces.impl.dv
68d2585c8 PR: Obtained from: Submitted by: Reviewed by: reference correct variable in added getDocumentClassName method
925a49f1b updated copyright
de3860ac6 cleaned up ^M characters
d5cb209c6 Fixed a bug occuring when a ] is encountered at the end of an entity
06a879a38 1.Added support for warn on duplicate attribute definition feature http://apache.org/xml/features/validation/warn-on-duplicate-attdef its default value is 'false' when set to 'true' warnings will be issued to the application through error handler.
fbb8d012a reversing change: we must escape some characters like &lt; otherwise serializer will produce invalid XML
7d0c2bb87 update release document.
ae1144f7c update docs
859967b59 update installation docs
ae7392879 1. Updated releases.xml to included my updates; 2. Two of schema bugs were fixed. Removed them from schema-limitation; 3. Now we support dos path, so removed the faq about it; 4. Added description for dom sample: DOMAddLines.
fe972b7e8 change "old" to "deprecated"
d5ec9fb20 Minor string changes.
97b9f3325 Change the title of schema limitation page from "Schema Implementation Limitations" to "XML Schema Limitations". But it's still open to a better title.
3ae5f2a63 Bug in XSDHandler: convert null to "" before adding a namespace to a vector.
cfbd6134f last of the pre-gold XNI changes.  replaced publicId, systemId and baseSystemId on various XMLDTDHandler calls with XMLResourceIdentifier.  This should also fix some bugs in the SAX DTDHandler as well.
d2e778812 minor rewording
bbdbac150 fixed a typo
8b233abf5 final? update to release documentation before Xerces 2.0.0
3a8a6860e modify mapping between Xerces and DOM L3 features
f4f31417c some grammatical changes and info about deferred DOM
9cd1f4b82 update dom3 documentation
6c6b759ff Fixing three problems: 1. Close all streams/readers even seen by the parser after the parsing is finished. 2. Provide a way to explicitly close streams/readers if a pull-parser decides to terminate parsing before the document is fully parsed. 3. Provide line/column number even if the system id is not set.
ec49d979a fix for bug #6046 by Henry Zongaro.
613995877 roll version number over to final release.
17ee3afd1 Sometimes the system id was not (properly) expanded. Now we expand it before calling the user-defined entity resolver.
ce2ea37fb Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=6165
e2be2c920 update tests
e78b64e11 Minor cleanup to JAXP code for constants
359516b5b First pass implementation of proposed JAXP 1.2 "schemaSource" property. This code should not affect the way Xerces functions in any way unless a certain JAXP "schemaSource" property is set.  There is also duplicate code in XSDHandler.java that needs to be cleaned up.
570571446 First pass implementation of proposed JAXP 1.2 "schemaSource" property. This code should not affect the way Xerces functions in any way unless a certain JAXP "schemaSource" property is set.  There is also duplicate code in XSDHandler.java that needs to be cleaned up.
6bf28b47d Clean up duplicate code for proposed JAXP 1.2 "schemaSource" implementation.
ccc66cc1e not only was this jar optional, it was entirely superfluous.  Getting rid of it to make clean-up of third-party jars easier.
39bb4bfd8 Typo: becaues --> because
ab5219be4 setNodeValue() should throw DOMException for read only nodes.
e9fcc96c9 Fixed documentation bug: the order of selecting the parser configuration was incorrect in the documentation but correct in the source code.
904097a5c Fixing bug [6258]: we didn't handle /../../ correctly.
6a6d4f67f very initial grammar caching implementation.  This is guaranteed not to do anything since, as yet, the methods it uses from XMLGrammarPoolImpl are no-ops. Still to do (at least): 1.  Make SchemaValidator use the GrammarPool framework properly; 2.  Fix up DOMASBuilder as much as possible to use standard GrammarPool methods 3.  Make the DTDValidator do something intelligent with the GrammarPool, and make the new XMLGrammarCachingConfiguration handle DTDs in some fashion. 4.  Most importantly, actually implement methods in XMLGrammarPoolImpl. We should also modify the Grammar and XMLGrammarDescription interfaces as suggested by AndyC/Neeraj.
daaac2cef took this class out of CachingParserPool since XMLGrammarCachingConfiguration now also needs it.  Also added a constructor to the SymbolTable class to allow its user to set the size--before hardcoded at 101.  For Grammar caching it makes sense to have this size a good deal larger.
c4614cde3 PR: Obtained from: Submitted by: Reviewed by: Add license files for ASF licensed software
a03c35b67 Fix JAXP DocumentBuilderFactory.setIgnoringComments() and DocumentBuilderFactory.setExpandEntityReferences().
23d73fc37 updating Grammar and XMLGrammarDescription interfaces consistent with recent discussions on the xerces-j-dev list.  Now Grammars have XMLGrammarDescription objects, and the getGrammarType method is only found in the XMLGrammarDescription interface.
e79e0ea23 Adding junit license to the repository.  All our jars should now be properly licensed.
86bebad43 fix to enable validation of base64 material in schema instance documents on the OS/390.  Thanks to Stephen Dulin.
874363b72 corrected attributeDecl signature in samples. Thanks to John Spitzer for pointing that out (bug#6447).
5d6f376c7 Cleaned some javadocs.
39f52a494 Printing the nonNormalizedDefaultValue passed to attributeDecl.
073242e96 Add a new way to create element/attribute nodes: passing an extra "localName" parameter, so that we can reuse the String objects we already have, instead of creating a new one.
f8858e136 Use the new way to create element/attribute nodes, if we are using the Xerces dom implementation, so that we can reuse the String objects we already have, instead of creating a new one.
850f37292 Added junit JAXP test program to test JAXP 1.2 features.  A minmal set of features is tested, currently.
e25b9ccf5 Update DTD datatypes to use the new DV interfaces.
1d91717db Didn't know why this was commented. (Because there were some bugs in deferred DOM implementation?) But this feature is supported by DOM parser, so I added the constant back.
d9ad83390 Take the logic of creating element/attribute nodes out of startElement, so that these methods can be overriden in subclasses, and the nodes can be created in different ways.
acfa9980a DOM implementation internally used for schema traversal. The only difference is that we store line/column numbers in element nodes.
ac01f2d38 The infrastructure for report line/column numbers of schema errors. The next step is to use this infrastructure when reporting schema errors, that is, pass the Element node (where location information is stored) to reportSchemaError() method.
5a0caa697 Now we have line/column numbers for schema errors! With the exception of errors against the following constraints: "Unique particle attribution", "Element Declarations Consistent", and "Particle Valid (Restriction)". (I'll be working on them soon.)
c1a9bd8ca The abstract SAX parser class depended on the symbol table in the configuration so that it could remove namespace binding attributes based on the namespace-prefixes feature. But, if the configuration doesn't have a symbol table, then the symbols are null and it ends up removing *all* of document's attributes that aren't in namespaces. Oops. So I removed the dependency and changed it to perform an "equals" comparison instead.
434990e0d Fixed some problems in the SAX parsers that assumed that all parser configurations used with the parser class had certain features and/or properties.
8fc6e31e7 Bug fix http://nagoya.apache.org/bugzilla/show_bug.cgi?id=6482.
3ecb886ce Fixing bug [6528]: in the case where a global group has empty content, we didn't create the XSGroupDecl. But the correct behavior should be that we create an XSGroupDecl with empty particle.
f99ae1f6c There is an easier way to get the current  XMLLocator: from startDocument.
9cd46a235 The two files were moved to dv.util package.
83ed30bde Now we have line/column numbers for all schema errors!
6963905da Using constants defined in impl.Constants.java and removing hardcodings for features and properties.
89da0b0c6 add tests to verify correctness of namespace algorithm
85ff69d06 Adding default grammar caching implementation support. If grammar is not available with the parser, validator component gives a chance to the application 1. to supply initial set of grammars to begin parsing with. 2. to supply the required grammar as per description. 3. to cache different grammars, validator component ended up with after current validation attempt. Application can provide these cached grammar, available to the parser before the next validation attempt.
3c759ad70 Add a method to get the wrapped error handler.
c8d855e04 Fixing a line/column number bug, reported by Hua Yang. Also converted some tabs to spaces :-) (a side effect.)
3c980ae79 Introducing local namespace binder that only stores declarations for current namespace. This will allow to solve the following problem:
256a43d2a Include tests: -- element/attribute with prefix and namespace ="" (empty string -- duplicate declarations for the same prefix
46d42b241 Fixing a multi-thread bug. All DV implementation classes should be stateless (after construction).
97a79c69f Fixing a multi-thread bug. All DV implementation classes should be stateless (after construction).
2110aa88a Reverting the change: according to DOM L1 setting node value for DocumentType, Entity, EntityReference, Notation is no-op. DOM L2 also specifies that for readonly nodes implementation should throw no modification allowed exception (there is no errata item for DOM L1). Waiting for clarification from DOM WG.
b39f00ef3 Output duplicate declaration for children if those declarations were specified in the tree. "value" for xmlns attributes should be added to SymbolTable before additing it to the namespace binder.
d6485149d update (output duplicate declarations for children if those appeared in the tree)
1063d3656 This class uses schema datatype implementation as separate library. It shows,     1. querying property information of Simple Type Definition Schema Component as defined,    http://www.w3.org/TR/xmlschema-1/#Simple_Type_Definition_details    2. get built-in type/s and create new types as derived by restriction, list or union, using factory methods of SchemaDVFactory.    3. using those simple type (built-in/created) to validate the values.    4. switching to different simple type implementation.
0b5432dc0 cleaning some code and fixed a bug where NoNamespace schema location hint  would be used to parse schema , if no location hint is available for given namespace. Thanks to Sandy for pointing it out.
9159d1b97 Applying changes done by Pavani, over-riding equals and hashcode for XSDDescription and DTDDescription, XMLGrammarPoolImpl uses these methods to check the equality of two grammars. changes include bug fix for #6698.
e5f6ca9c7 update release doc
52a5a1f11 Updating release document.
6a2587d2d update for forthcoming release
1cbb9dbdf Fixing bug [6716]: The test to determine if fElementChildrenOffsetStack needs to be resized was incorrect.
cd61d27d7 Fixing bug [6766]: we didn't reset the schema handler (traversers) between parsing schema documents.
3299d77cd Now we defer the loading of schema specified through externalSchema and noNamespaceExternalSchema location proerties, the specified grammar from particular namespace is loaded only when there is reference to any component from that namespace.
9996a814e Fixing bug [6776]: fields from schema PSVI items should be checked before being used, in case the instance was not fully validated.
d9caf36bc Removed methods getDTDGrammars() and getSchemaGrammars() to make the implementation independent any specific grammar types. Also, synchronized the putGrammar(...), getGrammar(...), removeGrammar(...) and containsGrammar(...) methods. Thanks to Pavani's patch.
eefdf0965 changes related to JAXP 1.2 schemaSource property, if the String given is relative URI, it will be resolved against the instance document being parsed.
972e747a1 Updated the call to reset method of XSDHandler as per the new signature.
12a80e051 Use the schemaNormalizedValue from PSVI only when validation attempted is full. Patch submitted by Pavani.
845a61988 PR: Obtained from: Submitted by: Reviewed by: Updating KEYS file with my PGP Public Key.
985a1a2ed PR: Obtained from: Submitted by: Reviewed by: Updated files for the next release.
8a14ebb59 Adding faq entry for Accessing documents available on Internet.
f8b05e04b 1. Validation root: should be the element where validatation starts, instead of the first one for which we find an element or type declaration. 2. Bugs in LocationArray inner class.
d76353cbe The intention of the Schema WG is that the wildcards in anyType should have processContents "lax", not "strict".
1c33189b3 When an error occurs when we traverse a complex type, to avoid redundant error messages, we also need an attribute wildcard with processContents "skip".
67ceb0937 Removed a duplicate message.
a14eb4707 Shouldn't expand system id using a static method with null base id.
d66fcfed5 changes to allow the DOM to be serialized
980279f54 Fixing bug [6894]: in DOMASBuilderImpl, we can't assume a grammar pool implementation is already available. In fact, we need to revisit the place: we always need to create our own grammar pool.
203b30090 Fixing bug [7039]. Error rmessage typo.
7f856ddb5 Applying patch suggested by Joe Kesselman. This fixes the following bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=6888
5267740c1 Fix for some performance problems relating to the way in which encodings are detected.  Two parts to the fix: 1.  We now read only a small number (64 bytes) one at a time at the beginning of external entities in order to correctly process their encoding declarations.  Formerly, in certain cases we would end up reading at least 2K bytes one at a time, particularly when using default Java Reader classes. 2.  Previously, there were cases in which we did not turn off this one-byte-at-a-time behaviour.  Now it is turned off for all kinds of external entity once the encoding is finally determined.
1687cdbd7 We failed to report an error if element was undeclared in the case DTD was declaring some attributes for this undeclared element. DTD grammar always create "dummy" element declaration to store attributes. The only way for us to know if element was declared or not, is if elementDecl has a content spec type. This fixes http://nagoya.apache.org/bugzilla/show_bug.cgi?id=6911.
c080f9e68 Removing -np/NP option from help. Thanks to Stan Hendryx for pointing it out.
e1c0a6f3b DEFAULT_NAMESPACE_PREFIXES is not used.
c4f602f0a Fixing bug 7075.
8070d29c5 DOM exposed comments from DTD. Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=6317
9e74a2efc Making error reporting for missing mandatory pseudoattributes in xml or text decl better.
4b85f8d3e 1. Added setter methods on XSDDescription 2. Pass XSDDescription as the parameter to XSDHandler#parseSchema() 3. Pass XSDDescription as the parameter to XMLEntityManager#resolveEntity() 4. Cleaned some "REVISIT"s.
2c842bac6 Don't always use a new resource identifier object when calling the user's entity resolver. Try to use the one passed in, because it could contain more information (schema namespace, for example.)
cb2ea9793 Use XSDDescription as the parameter to XSDHandler#parseSchema().
e16a5d3ec XSDHandler#parseSchema signature is changed. The call to parseSchema should use updated signature.
0215e1dc0 further fix for EBCDIC file i/o performance.  This also enables more EBCDIC encodings to work with the parser.  Thanks to Henry Zongaro for finding the lines that needed tweaking.
8878baf15 Fixing the synchronization problem in DV package. Many thanks to Tomas Bouda for pointing it out.
d632c26ab Fix to the performance bug for non deferred DOM: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=5602 The problem was that for each new characters() call we would append data to DOM tree using string concatenation (olddata+newdata). Now, if there are more than one characters() call per data, the data is saved in the string buffer. When state changes (endElement/startElement/startGeneralEntity, etc.), the data is set on the text node (that was created for the first chunk of data).
a6b4b0c92 Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=7070
2895af668 Updated the test for relatedNode. http://nagoya.apache.org/bugzilla/show_bug.cgi?id=7070
821116e05 Fixed two possible exceptions: 1. ClassCast: retrieveInitialGrammarSet returns Grammar[], not SchemaGrammar[]; 2. NullPointer: it's possible that parseSchema() returns null, should check before performing further operation.
889efd496 Change the lexical representation of gMonth from --MM-- to --MM. This is an erratum of the schema spec.
9937a7538 1. Cleaned up how we traverse simple types; 2. Fixed problems: sometimes we didn't report errors in simple types; 3. Synchronize access to static member in XSComplexTypeDecl. 4. Use error codes defined by the schema spec.
63057bf33 Use error codes defined by the schema spec.
a5aae07a1 1. Make XSSimpleTypeDecl public; 2. Schema rec issue R-75: max/minIn/Exclusive facet values should be from base, unless it has the same value as that of the same facet in the base. 3. Added derivedFrom() convenient methods to check whether this type is derived from another type.
f7ab76aff Added derivedFrom() convenient methods to check whether this type is derived from another type.
e177e46ea Added getTypeDefinition() and getAttribute/ElementDecl() convenient methods to expose type/decl information used for validation.
33d8ce7d7 removing unneeded file.  This class did the same thing as StandardParserConfiguration except less flexibly--even when using DTDXSParserConfiguration, it is still necessary to set the appropriate features to have schema validation take effect.
d5f74e011 map Windows-31J to MS918 internal encoding, as requested by Makoto Murata
6517fabc4 update samples to reflect removal of DTDXSParserConfiguration
fb2a77996 Fixing a bug: when preparsing a schema whose target namespace we don't know, we should get it from the "targetNamespace" attribute. Then use this namespace for further including/redefining.
4e5357ebb fix grammar caching framework.  Now DOMASBuilder uses XMLGrammarCachingConfigurations preparsing infrastructure.  Also implement some expanded functionality on the default grammar caching implementation, and make it available through XMLGrammarCachingConfiguration.
588939975 adding a FAQ for development-related issues.  Two entries supplied for starters:  one describing how to submit patches, the other how to prepare releases.
41997f2ae change a copyright date from 2001 to 2002.
fbb0c02a9 getting rid of dead, commented-out code.  Hopefully this will make this lengthy class easier to understnnd; if we ever want the commented-out sections, we have no further to look than version 1.3 of this file.
8cb49c1df Add ASDOMImplementation that implements DOMImplementationAS. CoreDOMImplementation now also support Load/Save.
0d5d0186a A *dirty* fix for the problem reported on the mailing list by Evgueni Rouban: when an element has a complex type with mixed content, we didn't process its fixed/default value correctly.
76541b668 Fixing bug [7563]: whitespace characters were not removed before decoding base64 data.
8ddef22fe make sure AbstractDOMParser can be used in configurations that know nothing about XML schemas by taking into account the case where the configuration does not support the http://apache.org/xml/features/validation/schema/normalized-value feature.
29553620e Since the dTD validator may be used within configurations that know nothing about XML schema, it should not recognize the http://apache.org/xml/features/validation/validation/schema feature.
bb1d08e9d changes needed to make the building of a DTD-specific xercesImpl jarfile possible.
69484e13f add a new build target, dtdjar, for constructing a DTD-only xercesImpl.  Also added dtdjars to build the full set of jars with this one included.
70a3b8c73 used by the dtdjars build target, this file serves as the XMLParserConfiguration file in META-INF/services.
5629a9722 remove some spurious import statements.
6d3ed564d enable compression of jar files.  Also, added a new build target for factoring out WML/HTML DOM; this gets xercesImpl down to 430K!  Finally, refactored some of the more egregious common code in the various targets, but more could be done here.
686078a1f docs updates reflecting extensions to build file.
b5ab952f0 Tried to optimize XML Schema parsing code: 1. Implemented XSDeclarationPool. 2. Modified impl.xs.DOMParser to use NonValidatingConfiguration and specify CoreDocumentImpl as DocumentClassName for parsers.DOMParser. 3. Implemented DOMNodePool that manages the pool of DOM nodes that are used for parsing XML Schemas.
28ef04070 Fix for class cast exception. ASDOMImplementationImpl now inherits from DOMImplementationImpl.
4bcde6415 The documentations in the Java source files contained errors and formatting issues. Updated interfaces using published zips on DOM Level 2 Errata page: http://www.w3.org/2000/11/DOM-Level-2-errata
77754a0df Cleaned up some error messages: 1. Remove (old) error codes that are not used; 2. Convert references to old codes to new ones (defined by the spec.) Now only error codes of Identity Constraint are not from the spec.
c605be5c2 1. Storing imported schema grammars in SchemaGrammar objects; 2. When a grammar is retrieved from a grammar pool, recursively get all grammars imported by this grammar, and add all of them to the bucket. 3. REVISIT: When a grammar from grammar pool has the same target namespace as one of the grammars in the bucket, issue a warning, and ignore the grammar.
0d2676459 1. Fixed bugs about <import> and <include>: if two schema documents with the same target namespace are imported, we end up parsing both, which might cause "duplicate global declaration" errors. Since Xerces enforces (and relies on) a one-grammar-per-namespace rule, we should only parse one of them, and ignore the other one. 2. The order of calling EntityResolver and GrammarPool was wrong. We should consult the GrammarPool first.
98c70d056 added test program of dom registry
827608415 Should remove attribute uses that have the same name+namespace as an attribute use with use=prohibited.
ac2f42d1f Use an array length to determine if resizing is necessary.
e8a321eb2 as proposed in bug 7800, now the build will fail if any target that is being executed--including the docs--fails.  Formerly, docs could be executed, fail dramatically and yet the build would be labelled as successful.
c8ed70f10 Synchronize on access to content models, to avoid thread-safety issues.
f9dfa8b81 For empty elements (<e../> for example), we failed to store element decl in PSVI item.
9675e28a5 The work of "try/catch XNIException" is already done in parseASInputSource, so we shouldn't do it again in parseASURI.
abce34e6a rewrote setReadOnly to avoid the use of an Enumeration
ca416fe0b improved management of ID attributes in the DOM: we now keep track of which attributes are said to be IDs by the parser and update our id table when their value changes so that Document.getElementById() is more reliable
c4acc8013 Program to test our management of ID attributes in the DOM
c2fb8db25 added one more test
70156153a added update about ID attributes managemenet in DOM
61ac82c2b got rid of use of Enumeration
0693bc860 Fixing bug [8002]: '!' was missed in the condition of the constraint mentioned in the bug report.
d339f6bf6 An error in the message: { symbol should be inside a pari of ' symbols.
aec6294e6 fixed typo in previous commit
92bcfeae7 A more effecient way of cloning a SchemaNamespaceSupport object.
207810407 returnAttrArray should be called after all the children are traversed, otherwise namespace declaration won't be recognized by the children.
49c5129e2 Fixing a bug: namespace declarations on <redefine> are not recognized in its subtree for QName resolution.
3bb87fab1 cleaning up hardcoded error message strings in the identity constraint code.
5a71af4bd back out bad modifications made in the last commit
3cbc42165 Fixing DOM bugs related to entities: If "dom/create-entity-ref-nodes" is set to false, we still need to construct the replacement text for entity node stored in the Doctype. To have all the children of an entity, we always create an entity reference at startGeneralEntity call. At endGeneralEntity() if  "dom/create-entity-ref-nodes" set to false, we insert children of the entity ref. before the entity reference itself and remove the entity reference.
9ada231a9 Replacing an attribute with itself is no-op: http://lists.w3.org/Archives/Public/www-dom-ts/2002Jan/0050.html
fa5ed7cd0 When both pubId and sysId are null, the user's entity resolver can do nothing about it. We'd better not bother calling it. This happens when the resourceIdentifier is a GrammarDescription, which describes a schema grammar of some namespace, but without any schema location hint.
8b0992291 "integer" and integer-derived types doesn't allow decimal point in the lexical representation. A special pattern will be added to "integer" (an erratum to be published). Handling pattern is too expansive, so we use the same way as how we handled NMToken/NCName/Name: use some special handling code.
18af9427c Fixing a bug reported on the mailing list by Mike Spreitzer: the min/max effective tatal range wasn't correctly calculated when the derived particle is "all" model group.
bfa84e438 Bug in calculating effective total ranges.
ad0da864c Fixed bug in WrappedInput/OutputStream sample classes.
6172744a5 Applied suggested patch from Fabio Riccardi: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=8398
ee643c3d5 Fixed another bug in the WrappedOutputStream that I overlooked in the last bug fix.
701ceed92 fixed Java serialization and added a Test for it
ef2014f54 include-ignorable-whitespace feature did not work when grammar is schema. Fixed.
3c7779d72 1. Remove "symbol table" from the constructors of schema grammar, because it's never used. 2. Add a new internal grammar for "xsi" namespace. The 4 xsi attributes are declared in it: xsi:type; xsi:nil; xsi:schemaLocation; and xsi:noNamespaceSchemaLocation.
fc16bd001 Remove "symbol table" from the constructors of schema grammar, because it's never used.
1218488a4 add documentURI
3485930ff Add DOM Level 3 documentURI property.
620256ef5 Strange character appeared at the beginning of the file, which causes a well-formness error.
096ac9aa4 Modified features according to the 09 April draft. Changed implementation of set/get/canSet features.
f1f3b3df2 Fixed bug to avoid null pointer exception in AbstractDOMParser when locator information is not available from parser config.
e17fbed50 Fixed bug in HTML DOM implementation that was causing xerces.dom element nodes to be created instead of the appropriate HTML element nodes.
e292d09e2 Improved handling of settings in parser classes making it easier to re-use the parsers with other parser configurations. Previously, the parser instances assumed that all configurations supported various settings (i.e. the parser would set default values without first adding the recognized features and property identifiers to the parser configuration).
17509c81b PR: Obtained from: Submitted by: Reviewed by: include-ignorable-whitespace feature is relevant only when the grammar is DTD.
2ca8fdf0b Applied patch from Henry Zongaro to fix ClassCastException in org.apache.xerces.dom.DeferredAttrNSImpl on NodeList.getLength().
1618c8226 1. the character "e" shouldn't be allowed in decimal values. 2. only #x30~#x39 are allowed in decimal values.
fb13e41e4 1. only #x30~#x39 are allowed in data&time values. 2. remove instance variables, so that the simple type objects can be safely used in multiple-thread environment.
4897b684f Fixing bug 8471: store the base system id when inputstreams/readers are provided as schema document source.
8e28a50b9 1. Provide PSVI information for the 4 xsi: attributes; 2. Fixed some bugs in attribute PSVI.
f891c97bd Many files are modified, mainly for reason 1 listed below. The other problems are discovered and solved during this big change. 1. Use separate classes to represent "model group" and "particle"; 2. Removed the simple content model, because it's not simpler than DFA 3. Rewrite the why how syntax tree is created: we only go through the tree once, and create the CM tree at the same time, instead of creating a temprory particle tree, then traverse it and create the CM tree; 4. Improved how UPA is checked in DFA: avoid cloning particles, but use some distinct integer to differentiate leaf particles. 5. Fixed a bug in particle derivation: all/sequence/choice restricting wildcard.
7668f027b AGAIN: Strange character appeared at the beginning of the file, which causes a well-formness error. Anyone knows why this is happening?
e8c31788f Strict error checking is not implemented for Deferred DOM.
7c11ec3fb added an entry under "Problem Areas/Known Bugs" about the problematic behaviour of parser for large values of maxOccurs and possible workaround.
f7082eb2b To find an ID attribute from XML Schema we now rely on an attribute declaration which is available in the PSVI. Revisit this code when the PSVI interfaces are finalized.
7d950b221 XMLAttributes.getType() represents DTD type - it should not be modified in the XML Schema Validator.
16650ac5c Avoid possible NPE.
9cdbd349d fix for bug #8617.  In the case of an internal parameter entity, we were assuming that the global XMLString containing the entity value would remain unchanged even after we requested that spaces between the terminating quote of the entity value and the > had been consumed.  Especially in space-rich documents, this was not necessarily the case since a buffer boundary might exist in the spaces; if one did, the XMLString would change and the entity value would be corrupted.   XMLDTDScannerImpl.java
7fee3197b we always store the normalized value, even if it's invlid, because it might still be useful to the user. But when the value is not valid, the normalized value is not trustable.
3c03c7ed0 Update signatures to reflect XMLResourceIdentifier change
cbc04c247 allow doctype node to be inserted after doc is created. The DOM spec was not clear on whether this is forbidden or not, but the DOM Level 3 makes it legal
7f6f47aea Set and reset of DOM pool for XSDHandler should be done in parseSchema(XMLInputSource is, XSDDescription desc). Patch from Henry Zongaro
5322dd524 Removed dependence on SAX attribute interfaces from XMLAttributesImpl utility class. The AbstractSAXParser already defines a SAX attribute proxy class so that the parser and components can be properly layered.
3980a6664 proposal for 2.0.2 release
ae951985b proposal for 2.1 release
ae62c6c6d Updated xni.DocumentTracer to print augmentation information.
a576d87c3 Store the enclosing complex type in element/attribute declarations with "local" scope.
34aab31cc  Add implementation for baseURI and documentURI (DOM Level 3).  Add XMLResourceIdentifier to startExternalSubset() method defined in  XNI XMLDTDHandler to allow supporting baseURI for an external subset.
439faef5c Update releases doc
17a0e4bf9 Update startExternalSubset method
796400a57 Cleanup for handleStartElement
2e444b048 Add '[' and ']' to reserved characters; remove ' ' from mark characters.
e6fe4c7d5 If the same entity is declared more than once, the first declaration encountered is binding, SAX requires only effective(first) declaration to be reported to the application. This is applicable to internalEntityDeclaration and externalEntityDeclaration.
7f94f414b <foo xmlns:a="blah" a="blah"> shouldn't give error. Thanks to Pavani for the patch.
e53870eff fix for bug 8997.  Thanks to Vivek Pandee for pointing out and providing the fix for this bug.
9c54aa4fa According to the recently published namespace errata: 1. Bind "xmlns" to its namespace 2. Report namespace errors for xmlns/xml bindings
3b3198c2c The Schema Component Model API: a set of interfaces that model schema components. They are experimental (which is why they live in the impl package), and are subject to change.
c034fce51 Fixing bug 9022: arrayCopy should take oldArray.length, instead of newSize.
af4e5d86e Fixing bug 8840: reset fBuffer before returning from handleStartElement.
eeb315cf6 Fixed a possible thread issue in the initialization of the HTML DOM implementation. The initialization code was not synchronized which could lead to problems in certain circumstances.
4773cd5f2 According to the new namespace errata, prefix "xmlns" can only be used for namespace binding, so <xmlns:ele/> is a namespace-wellformness error. Note that <xmlns/> is not a wellformness error, but it's strongly discouraged.
a6b334a21 Error message for the following fix: According to the new namespace errata, prefix "xmlns" can only be used for namespace binding, so <xmlns:ele/> is a namespace-wellformness error. Note that <xmlns/> is not a wellformness error, but it's strongly discouraged.
75e2e681b Implementing Schema Component Model API: - All interfaces in impl.xs.psvi package except XSAnnotation are implemented - Using a SymbolHash to store built-in simple types (Hashtable was used) - Renamed XSAttributeUse to XSAttributeUseImpl - Renamed XSModelGropu to XSModelGroupImpl - Removed interfaces XSAtomicSimpleType, XSListSimpleType, XSUnionSimpleType, because their methods are included in XSSimpleTypeDefinition interface - It's still an open issue (please refer to the message "[Schema CM API] How it works with grammar loading") how XSModel and grammar loading are related. I'll send a separate note to the mailing lists to describe how to get XSModel from preparsed grammars.
ffeacfe92 Interfaces of schema simple type (impl.dv) has changed, due to the implementation of Schema CM API. Modified this sample to reflect the changes.
b84841a62 first of the agreed-upon grammar preparsing framework changes that were discussed on xerces-j-dev in the last couple of months.  Here, I have moved XMLGrammarPoolImpl from impl/validation to util, where it will perhaps be more accessible to users.  I have also added three methods to the XMLGrammarPool interface for locking, unlocking and clearing grammar pools.
c635e139c Add tasks to retreive and run XML Conformance test suites from sourceforge PR: Obtained from: Submitted by: Reviewed by:
7d2f38b72 be sure directory exists PR: Obtained from: Submitted by: Reviewed by:
c135a331d introduce a "fallback" into our internal class loading factory.  The purpose of this fallback is to permit the classloader that loaded this class to try and find a class with the desired name, if the context class loader of the current thread is either null or throws a ClassNotFoundException when attempting to find a class with the given name.  This should allow better operation on JDK 1.3.x of applications that do not want to set class loaders on their threads.
1b65dc1f2 Fallback class loader -- why didn't this commit earlier?
86d4f453d Add functionality to the NamedNodeMap to clone the content of the map and remove the specified node using object reference. Fix removeAttributeNode to use a new method to remove *this* node. Fix setAttributeNS - one of the parameters is qualified name not a local name.
14353744f According to DOM L3 "Applications that wish to have no namespace should use the value null as the namespaceURI parameter of methods" If users pass an empty string the DOM implementation turns it into a null. Also, overwrite setReadOnly for entity reference nodes to be able to set all children read/or write.
730f611a2 Use the symbol table passed to the constructor
79e10cb05 Performance patch from Henry Zongaro.  This patches converts some array resizing detection code from catching ArrayIndexOutOfBoundsExceptions to simply checking the size of the array;  It also improves the algorithm used for recognizing entities/notations, and streamlines the praramters of certain DTD grammar methods in recognition of the fact the scope is not relevant for that grammar type.
222c08146 Fixing potential NullPointerException bugs (including bug [9243]).
cebf2fd24 Provide more descriptive error messages for simple type validation errors.
a893da280 Added a new feature http://apache.org/xml/features/warn-on-duplicate-entitydef when set to "true" reports warning to the application for duplicate entity declarations.  This feature works for both validating & non-validating parser configurations. By default the value of this feature is set to false.
4b784193a Adding entry for warn-on-duplicate-entitydef feaure.
e4b65df25 A typo
a6cf9f9be the XMLGrammarLoader interface.  Internally, we will use this to concentrate grammar location/loading functionality in particular classes for given grammar types.  It is also possible that user applications with very specific ideas of what they want out of grammars may wish to implement this interface in order to do things like filtering incoming grammars.  This would require them to to work with internal components to actually produce usable grammar objects.
15a41ce86 Avoid cascading errors when 1. A schema grammar is not found for a given namespace; 2. A schema document can't not access components from a given namespace.
6d16ad696 Implemented of normalizeDocument and related set/getNormalizeFeature methods. For the following features setting the state to both true or false is supported: "comments", "entities", "cdata-sections", "split-cdata-sections", "discard-default-content", "validate". Setting "datatype-normalization" to [true] does not have any effect.
65845c806 In the last commit accidentally changed visibility of getDOMImplementation() from public to package.
d821abc03 fix a tiny typo.
c49f2a5aa update to use appropriate URIs as constants instead of arbitrary strings.  Of course the question as to whether strings, appropriate or not, should live in this interface is still open.
79ae6b2a6 Adding a schema implementation of the new grammar loading interface.  This also results in a complete decoupling of the schema Validator from the schema handler, which will hopefully make their formerly tangled relationship more clear and result in easier-to-maintain code.  Also centralized handling of schemaLocation strings.
2e5397b32 add a convenience method to our internal ErrorReporter to make XMLSchemaLoader have a happier life.
09413c8c8 fix DOMASBuilder and XMLGrammarCachingConfiguration to use the new schema loading framework.  This means they are very nearly decoupled from the schema package; when the convenience class for user interaction with the grammar loading framework arrives, it should be possible without too much effort to make this decoupling complete.
fb773e191 merging DTDGrammar and AbstractDTDGrammar because AbstractDTDGrammar served no purpose.  Also cleaning up a fair bit of the XML Schma-specific material that remained extant in AbstractDTDGrammar after the schema implementation went entirely its own way.  There is still more cleanup that could be done here, however--DTD element declarations need not, for instance, have an XMLSimpleType field.
ccd3b7b02 The spec requires that the "name" property of an anonymous complex type to be "absent".
efafa6aad The updated PSVI interfaces and the implementation: - updated some constant/method names; - expose heavy weight properties. A discussion on the mailing list suggests to change getIsXXX methods to isXXX. We may need to continue the discussion. When we get a conclusion from there, we might change some of the method names.
ce65427aa Didn't mean to commit the two sample files in my previous commit. :-P Now I'm taking them out. Also a faq for pull-parsing was (accidentally) commited with the last commit.
5078c1897 Added a new method on the element psvi item interface to return the [schema information] property. This property is only available on the validation root.
c899591d9 - Implement the updated ElementPSVI interface to expose [schema information] proeprty; - A new interface XSNamespaceItem to mode the [namespace schema information item]; - A new method in XSModel to return a list of XSNamespaceItem Now users can: 1. Get an ElementPSVI from the XNI augmentation of the validation root (normally the root element); 2. Get XSModel from it by calling ElementPSVI#getSchemaInformation(); 3. Get a list of XSNamespaceItem by XSModel#getNamespaceItems; 4. From each XSNamespaceItem, get its target namespace, components of that namespace, and document locations that contribute to that namespace.
0e633597f Potential NPE. When the returned grammar from grammar loader is null, return null from parseAS methods.
831d21ee3 -- To preserve backwards compatibility with Xerces1, XMLSerializer no longer fixes namespaces by default. Users will have to call setNamespaces(true) on XMLSerializer to activate namespace fixup algorithm. DOMWriter by default attempts to fix namespaces. -- Add implementation of ShadowedSymbolTable to utils: it is used in DOM Revalidation and for Cashing parser configuration. -- Modify DOMNormalizer to add symbols to a symbol table before calling the XMLSchemaValidator.
4453938bd Modify tests for XMLSerializer
f174ce687 updated according to the latest spec: http://www.w3.org/TR/2002/WD-DOM-Level-3-Core-20020409/core.html#Node3-lookupNamespacePrefix
a5e03d4af Implemented lookupNamespacePrefix && lookupNamespaceURI using the following algs.: http://www.w3.org/TR/2002/WD-DOM-Level-3-Core-20020409/namespaces-algorithms.html#lookupNamespacePrefixAlgo http://www.w3.org/TR/2002/WD-DOM-Level-3-Core-20020409/namespaces-algorithms.html#lookupNamespaceURIAlgo
5567c91fd Breaking XMLDTDValidator into two components:  one, thich implements DocumentHandler, does validation of instance documents given a grammar; the other, XMLDTDLoader, implements XMLDTDHandler and XMLDTDContentModelHandler and constructs the grammars.  All that now should be necessary to make DTD grammar caching work is for XMLDTDLoader to actually implement XMLGrammarLoader and to make the grammars it constructs available to the grammar pool.  Then it should be relatively straightforward to slap preparsing functionality on XMLDTDLoader by giving it the ability to talk appropriately with the DTD scanner.
26249d35f apparently I neglected to include this in ty commit from yesterday... :-( Everything should now build fine.
68617f2f7 A performance patch from Henry Zongaro: "In most cases, the Hashtable that's used for these Augmentations objects contains only a couple of entries, so I thought that it might be better to have the AugmentationsImpl contain two different inner classes to store the augmentations.  When there are only a few augmentations, the AugmentationsImpl uses a class that contains an array that contains the keys and values; when the number of augmentations exceeds a certain value, it switches to the other inner class which uses a Hashtable. I arbitrarily chose 10, but didn't experiment to find the break-even point."
f491bd3a8 A performance patch from Henry Zongaro: "The various components in the pipeline call "getProperty" and "getFeature" many times per parse:  18 times for getProperty without the schema validator in the pipeline, 25 with it in the pipeline.  Each time the getProperty and getFeature methods call checkProperty and checkFeature methods, respectively, to determine whether those properties and features are valid. The same properties and features end up being checked a number of times for each parse. I tried changing those methods to only check whether the property or feature was valid when the fProperties.get or fFeatures.get returned a null value, and to assume that it was a valid property or feature, otherwise."
1b1ed1c2d Performance patches from Henry Zongaro: "The parser spends a lot of time in the characters() and handleCharacters() methods of this class doing normalization.  One obvious improvement was in the references to "fBuffer.append(text.toString())" - the conversion of text (which is an XMLString) to a String is unnecessary because StringBuffer class has an append method that accepts a char[] with offset and length.
338b51afe Rename DOMRevalidationHandler to RevalidationHandler
68c772561 fix some wrong IANA names.  Also, and thanks to Glenn Marcy for pointing this out, since the IBM 1140 family does have an IANA name, use it.
554d262da removing IANA aliases with "+" symbols in them.  Since these cannot be valid XML 1.0 encoding names according to production 81 of that spec, including them in the table is pointless.
79a410ad5 The error message only takes one replacement text: the attribute name, but the code supplied 2: element name and attribute name. I removed the element name.
e0bfb69e1 Accidentally committed a change made for debugging purpose. Removing it now.
3c2f837db Fixing 2 bugs: 1. Potential ClassCastException: when validating a valud constraint against an xsi:type, we should use the String value (instead of the actual value) for validation. 2. Potential NullPointerException: when there was an error validating a String value, we shouldn't try to use the actual value (null in this case) for further constraint checking.
6dd821e07 A performance patch from Henry Zongaro: "I changed the parseSchema(XMLInputSource,XSDDescription) method to defer creating a DOMParser and the various traversers until it knows that they're actually needed.  I also moved the invocation of the prepare() method until we know that the registries, etc. that it clears are going to be needed."
7bed8af57 Provide error messages for the constraint "Attribute Group Definition Properties Correct" (ag-props-correct).
6ca45d8cc 1. Should use different error code based on whether an attribute group or a complex type is traversed. 2. Also provide the type/attribute group name as part of the replacement text of the error message.
c6554b415 When the item type of a list type is or is derived from ID, or when one of the member types of a union type is or is derived from ID, the list/union type itself should also be considered as derived from ID. The implementation of "isIDType()" method is modified to reflect this.
fad4e53fc Fixing bug [9041]: We were trying to defer the traversal of Schema documents, until they are actually referenced. But in this case, it was too late to load the schema *after* we try to get the element declaration from the content model.
1daa24e03 Moved DOMWriter implemenation to a separate class: xml.serialize.DOMWriterImpl.
65f78a97c (hopefully) fixing a bug reported by Kosuke Kawaguchi.
819bff62e making a couple of private methods public, since they definitely have applications outside the specific needs of thie class.
a4b145a52 implementing DTD grammar caching/preparsing.  XMLDTDProcessor is what XMLDTDLoader used to be; XMLDTDLoader extends XMLDTDProcessor by adding functionality specifically needed for preparsing.  The limited testing I have done appears to indicate that this set-up does indeed succeed in caching DTD grammars both when preparsed (as external subsets) and when loaded as part of parsing an instance.  I will post a message describing in more detail what I have done here on the xerces-j-dev list tomorrow.
4890ffe97 in order to make DTD preparsing/cacing work, I had to make the document scanners aware whether there was a need to build a grammar (and hence to expand entities).  I also had to add some new functionality to the DTD scanner so that it can be reset outside of a component manager.  (it could be argued that the DTD preparser should be a componentManager, but I saw no reason to complicate the implementation by doing that at this stage.)
3a63eaaf3 This is the face of preparsing as designed to be used by a user application.  It can preparse schema but has no dependency on schema classes.  It can also preparse DTD grammars.  It also has a facility for adding other grammar implementations.
547f48f56 make DTDConfiguration use XMLDTDProcessor instead of XMLDTDLoader
614d09d73 the work of carrying (some) of the information the scanners need to know when a DTD that has been cached is being used is done now by ValidationManager.
fca8e232f a sample that shows how to use Xerces native grammar preparsing/caching abilities.  This does somewhat the same thing as the ASBuilder sample, except that it handles DTD grammars (external subsets) and (hopefully!) its implementation will be a fair bit cleaner.
2af25186f Add interfaces that were added in the DOM L3 WD. Those are experimental and can be modified.
5fc9d03aa Add DOM Level 3 Load and Save interfaces (WD Experimental)
5ddb29aef Re-organize the code to expose DOM L3 implementation
83c6614a1 Modify tests to use new interfaces for DOM L3
7260d95a7 Fixing bug [9771]: It's a bug in XSGrammarBucket: when a grammar doesn't import other grammars, we failed to add it to the bucket.
31b7fcd18 updates samples to use DOM L3 interfaces
8135e480d fix a problem in loading the schema grammar loader.  Now XMLGrammarBuilder appears to behave as well as DOMASBuilder.
76caa5ec9 DOM Level 3 interfaces, put in a different hierarchy to allow building with this or the DOM Level 2 Core
4ba5722ac continued Elena's changes to have a new build supporting DOMLevel 3 Core, the default build no longer contains the DOM Level 3 Core extensions, on the other hand a bunch of new targets are defined to build Xerces with it, compile-dom3, samples-dom3, tests-dom3, test-dom3. More may be added later on.
1bcd64a10 Registering the schema message formatter to the error reporter. Otherwise the error messages won't be formatted correctly.
2ce11d6b4 Fixing bug [9795]: Particle derivation (restriction): derived: element; base: model group. We need to create a fake model group for the element in this case, and the min/maxOccurs values for such fake thing should be 1 and 1.
3814b5c34 added a bunch of additional targets for DOM Level 3 support
a01d7a8db fix a couple of bugs with schema preparsing:  make sure the error reporter knows about schemas; and make sure XSDDescription .equals method actually works in contexts such as Hashtables (the parameter should be an Object, not an XMLGrammarDescription).
39aa384e8 fix very many bugs in DTD grammar caching/loading.  In fact, it now does something whereas previously it did nothing in a clever and complicated way.
706f38b48 fix a number of bugs in the nascent XMLGrammarBuilder sample.
3354c2c1c small fix to please the latest version of ant
90d327f6b Re-implemented lookupNamespacePrefix and lookupNamespaceURI using different algorithm from the one in the DOM L3 WD. Added implementation to isDefaultNamespace(). Modified  import statements given the change in DOM L3 implementation.
afd23c2a0 Minor bug fixes in normalizeDocument and lookupNamespaceURI
98e74731c Updating release document.
ce4c937bc initial implementation of compareTreeNode.   Further testing and some cleanup required
0ca00513e Add specialized lists (StringList, ObjectList) to PSVI interfaces. Use these interfaces when need to return a list of strings or a list of objects. Add implementation for StringList and ObjectList interfaces. The implementation is not optimized: we need to revisit the code and make sure we create list objects only when needed. Also, need to consider whether we can use StringList instead of Vector and string arrays.
ddfb5af00 getErrorCodes now returns StringList (instead of Enumeration).
0d9c0048d Add removeItem (Node item, boolean addDefault)  method to AttributeMap to allow removing *this* node. Make sure that id tables are updated during removal or addition of default attributes of type ID.
a372bc36d Save type for default ID attributes
b77e599e8 Add more testing for ID attributes
7626d9643 Include in testing dom.ids.Test
56fe671cd Update documentation related to DOM Level 3
4a4f29b95 New test sample for DOM L3
e08549752 document dom3 targets
f1276d4ec Update comments
bf329a322 added line for compareTreePosition
d80ebefd8 Re-organize the code to allow building DTD only Xerces (build dtdjars)
8e1bed05a Modify build dtdjars target: The src need to include org.apache.xerces.impl.xs.XSTypeDecl and org.apache.xerces.impl.XSSimpleType to be able to ask isIDType() in DOM Parser. Need to come up with better way to query isIDType.. Also includes org.apache.xerces.impl.xs.psvi -- it allows us to expose PSVI information via DOM. Note xni.psvi is also included.
62e7b36f3 Xerces fails to compile under JDK 1.4
20d14bab9 Update performance/samples docs
9eb25ad6f 1. Changed the title of the schema page from "schema limitations" to "xml schema", because its content is not limited to "limitations". 2. Added a new item in the schema page, to describe the usage of PSVI and schema component API.
a58405f4f Update docs to make sure it is clear what interfaces are DOM L3 WD interfaces.
acba9206f Update docs to make it clear that these interfaces are DOM L3 WD interfaces.
13e0b29ec implemented the DOM Level 3 renameNode method, the only piece missing is the firing of the related mutation events, other than that everything seems to be working.
d0472b128 new test program to test the renameNode method
c6f32dda7 excludes new DOM level 3 test program from default build
cc18b3d82 fixed typo
8ef35b685 Fixing bug [9974]: typo of the name of the boolean type.
1d1451a30 finally:  some documents on grammar caching.
f450e64d6 in response to at least two bug reports, adopt a change of implementation from SAX 2.0.1.  Now it should be possible to create attributes lists with 0 elements.  Note that this has no effect on the behaviour of this class (except it will not throw ArrayIndexOutOfBounds exceptions) and neither does it affect signature compatibility.
7f3aa1704 final release update before 2.0.2
80ab0016c flip the version number to 2.0.2.
775520068 fix to make JAXP 1.2 properties work again.
6c72ab817 fix for bug 10251
0ec7d45fb first of the static mutability changes.  Now all RECOGNIZED_(PROPERTIES | FEATURES) members are final private; we also return clones of them in getRecognized(Properties | Features) methods instead of the originals.
731c48af0 Unexpected '|' characters in the error messages.
70b7b24fe applying some fixes from Kent Tamura to the regular expression code used in Schema validation.  This should fix bugzilla bugs 3560,, 7752, 7806.
ed83712d2 give credit where it is due.
6a96d138f Fix for JAXP1.2 property - SchemaSource for the case when value is Object[].
a423f1858 Fixing the pull-parsing FAQ: - typo "to to". should be a single "to". - update "continueParse" using the return value of config.parse().
fec2481e4 Fixing bug [10474]: min/maxOccurs doesn't work properly. When building the syntax tree, we need to copy the leaf nodes.
8d8db8478 since there have been no loud cries in protest, modifying the static kidOk array in the DOM CoreDocumentImpl to address static mutability issues.
5527195ce addressing static mutability issues in XSAttributeChecker.  Since this new implementation, where XSDWildcardTraverser can rely on getting fresh objects from XSAttributeChecker also saves some copying, it stands some chance of actually being more efficient than the old approach.
2bdfd9d94 Use "&amp;" in the source code.
46622833b statib mutability updates.  Make a few variables private that do not need public visibility.
0a9feb8da make some constants final; these should always have been final, so even were it not for static mutability concerns this would be a clear bugfix.
b4fb7e974 removing some unnecessary files.
4b946cbf1 fix to make facets work with Hexbinary and Base64 datatypes on non-ASCII platforms.
d106a79f5 more static mutability fixes.  These simply make access to various static members more restrive--static members which is is not obvious access to which is actually useful anyway.
1f0f5d551 Fixing http://nagoya.apache.org/bugzilla/show_bug.cgi?id=10607
e2a9e6596 Fixing Java serialization: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=10491
4b1569aef Add implementation to replaceWholeText and getWholeText.
7ebc0aae1 Because of nested entities we need to query for entity declaration at the endGeneralEntity call. Otherwise, entity replacement text won't be available.
a6429dae8 Add tests for DOM Level 3 and for Java serialization.
08113028b Add different tests for DOM Level 3
f955a4134 Fixing bug : http://nagoya.apache.org/bugzilla/show_bug.cgi?id=7972
5c4c46633 more static mutability changes.  Make SchemaGrammar.fAnyType statically immutable.  This complicates the design of the complex type traverser a bit, but that should not lose any noticeable efficiency.
da4f787dd infrastructure for localizing DOM implementation and serializer error messages.  Unfortunately, since the DOM has no provision for setting or storing Locale info, we are limited to using the platform default in this implementation.  In subsequent commits messages will actually get localized.
a24c9ca5e making the two static SchemaGrammars statically immutable (or at least they will be immutable once the static simpleTypes have this property.
17bff9733 a couple of javadoc fixes.  The DOM l3 implementation seems to need a few as well.
039153ac5 eliminate a few statics that were only used in fluffing up error messages.  These create static mutability risks and error situations do not tend to be ones where optimizing for speed is critical.
b8ee6d40d Add support for DOMBuilderFilter. The filters are not supported with deferred DOM implementation.
0ec9311b3 Fix bugs in DOMBuilderFilter handling
667e87976 Add support for DOMWriterFilter
7c45011a7 1. Resend 4 PSVI properties on endElement: element declaration, type definition, notation, and validation context. Now all element PSVI properties are available on endElement calls. 2. Fixed a bug in the method getSchemaDefault().
070432067 addressing static mutability issues in the Version class.  Now use of the fVersion field is deprecated, since that field cannot be made statically immutable and retain its function.  Instead, a new method--getVersion():  String--is provided; static immutability of this method can be guaranteed, while similar function to fVersion is provided.
b4e6612b3 splitting messages specific to the DOM into a separate file from those used by the serializer.
b4be0c49e Add a new kind of DOM document implmentation, which supports PSVI. When this kind of document is used, element/attribute nodes can be casted to Element/AttributePSVI interfaces to retrieve PSVI properties.
859aaa003 Update the dom parser: when the document class is set to the PSVI document class, the parser stores PSVI properties in elements/attributes of such document.
b928d62bc A line was removed by accident. I'm adding it back. This caused some performance problem: we don't need to do strick checking when creating a DOM tree from the parser, because such checking is already perfomed by the parser.
5f376b90e localize some exception message produced by our custom reader classes.
54fc73475 Fixing bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=10926
619d00f3d Fixing problems regarding circular references between schema documents.
3e54fb609 Moving the interface "ValidationContext" from package impl.validation to impl.dv, because it's part of the datatype interfaces, which live in impl.dv. This makes it easy to use the impl.dv package as a standalone datatype libaray.
eb2d0c05a The interface "ValidationContext" was moved to impl.dv. This sample needs to be updated accordingly.
24260a058 make static XSSimpleTypeDecls immutable.
5710dd4ba Fix for the redefine case: when both files are redefined, need to check the second condition based on namespace and location.
654124686 This interface provides an access to the post schema validation infoset for an  API that provides streaming document infoset, such as SAX, XNI, and  others
ad1991f87 Users can now retrieve PSVI in SAX using PSVIProvider interfaces.
a14963d6c Code cleanup for handling DOM L3 features.
ac43c0f8f Update some of the serialization code to use the new DOM/Serializer message property files, instead of hardcoded Strings, to make localization possible.
e27f9abd5 Provide an empty validatoin context when no such context is specified. This makes the datatype libary easier to use for types that don't need the validation context. And it doesn't have performance impact: the null-pointer check happens anyway.
e14524d13 Overwritten print* functions in XMLSerializer to check if a character is a valid XML character. During serialization of CDATA sections we also check if data includes characters that can not be represented. In this case CDATA section will be split.
39cde9c71 add back a constructor with only a Stream argument so that the build "tests" target will work again.
c7e727f78 make the get-conftests target work (thanks to Shane Curcuru for pointing out that it did not).  Also, taking the opportunity to update to ant 1.5; this should fix some problems, particularly with respect to attribute ordering, which we have previously had to hack around.
bf9e43cda Commented out a debugging message, as reported in bug [11085].
70be908f3 changing behaviour of datatype factories so that they may be used to create multiple instance of the datatypes.  This means that our default implementation must be used for instance document validation, but the factories can still serve a useful role as gateways to standalone datatype libraries.
05d173f45 some minor cleanup
75fa61002 DOM error message localization.
5845833be DOM error message localization.
ba9bdf054 minor doc fix.
fe96abd81 static mutability fix.  Now the XHTMLNamespace member has a sensible value, and a method is provided so that this can be overridden by an application on a per-instance basis.
db80fe019 Fixing bug [11155]. It contains 2 parts: 1. Traversal: for a model group like this:  <sequence/> we didn't generate a particle. But we should. 2. Content Model: for a case like this:  <choice>     <sequence/>     <sequence>       ...     </sequence>   </choice> we used to ignore the first (empty) sequence. Instead, we should treat the second sequence as optional.
b6178b8a2 Add check to avoid NPE.
d6bea9814 Compute baseURI value of element
ec05a40f0 Overrides getMessage() method in DatatypeException to return the formatted&localized error message.
36edf3db1 Remove (some of) the dependency from schema dv implementation (impl.dv.xs) to schema core implementation (impl.xs).
3750efb39 2 new ScheamDVFactory implementations: one for XForms base types (base), and one for all schema built-in simple types (full). The difference between the full one and the current SchemaDVFactoryImpl is that the latter uses an XSDeclarationPool while the former doesn't.
59f328674 1. Make the build target "tinyjars" work. This jar depends on some of the schema component and datatype interfaces. We need to include them in the jar.
300910c9a new version without any static table to avoid static mutability problems
db41ce562 updated to use new regitry class
c6739ef25 making this class somewhat more extensible by providing a method for the constructor to call to create an instance of the EntityScanner implementation.
e92ed3c32 Implemented a test platform on which XML 1.1 can be implemented.
abe7fbc49 This commit addresses several things:
764381c41 Got rid of old dtdjar* targets because they did not seem to be useful; renamed tinyjar* to dtdjar*.  Also added a new target, xml11jars, so that a xercesImpl can be built which transparently uses the new (experimental!) XML 1.1 support.  Finally, renamed the output of the various new targets so that the resulting jars have somewhat self-describing names, and so that everything is not xercesImpl.jar.
773d68672 new version without any static table to avoid static mutability problems
198498664 updated to use new regitry class
cf6f7c992 Fixing bug [11323]. Thanks to Loz for reporting this, and providing a patch. The error handler should be set when it's *different* from the one previously set. A typo: changed "==" to "!=".
bd2298ed4 Fixing bug [11349]. The normalized value in the ValidatedInfo object was overwritten if the type is a list. Now we store the normalized value *after* each of the items is validated, so it won't be overwritten.
ef4f12df6 Fixing bug http://nagoya.apache.org/bugzilla/show_bug.cgi?id=11176
066c932d2 Fix docs to allow null input source (see bug http://nagoya.apache.org/bugzilla/show_bug.cgi?id=11176)
aa2bd508e Allow value for setPrefix to be null or empty string:  http://nagoya.apache.org/bugzilla/show_bug.cgi?id=8738
9c7ed582a DTDHandler could be null..
f632eced6 Fixing bug [11455]. Added a null-checking to avoid NPE.
0b4e72887 A performance patch from Henry: avoid using exceptions to determine whether an array needs to be resized. I also replaced some tab characters with spaces, because it looked ugly in my editor where the tab size is set to 4.
e4458009a A performance patch from Henry: avoid using exceptions to determine whether an array needs to be resized.
6885f2351 when normalizing a String object to upper- or lowercase for a normalized comparison to some internal constant, it turns out that we need to be very careful not to rely on the default encoding of the platform.  This results from the fact that Turkish in particular does not map characters to their upper- or lowercase equivalents in English.  Now, everywhere where this could pose a problem, we force case conversion to be done according to an English locale.
4d4332667 Removed the parameter that's not used anymore.
cf15efa7c One more occurrence where exceptions are used as array-resizing conditions. Changed them to straight array null/size checking.
db7e9f6d5 More changes to the namespace fixup algorithm. Fixing the case where there is a top level element <xsl:stylesheet xmlns:xsl="http://xsl"> User creates via DOM another element "body" (bound to the "http://xsl" namespace) and a namespace attribute re-bounding "xsl" to another namespace: <xsl:body xmlns:xsl="http://another"> Need to make sure that the new namespace decl value is changed to  "http://xsl".
e701230f3 More changes to namespace fixup algorithm. During serialization we need to have additional checks to make sure we don't output duplicate namespace declarations.
2e58102df Add testcases to verify namespace fixup algorithm.
8ece0283f remove call to Vector.clear() so Xerces can be run under JDK 1.1.8.
dad26d4c9 remove call to Vector.clear() so Xerces can be run under JDK 1.1.8.
613383c7c A new message for the error where non-whitespace characters appear in schema elements other than xs:appinfo or xs:documentation. Only these 2 elements have mixed content; all others are element-only.
2898aea61 Report an error when non-whitespace characters appear in schema elements other than xs:appinfo or xs:documentation. Only these 2 elements have mixed content; all others are element-only.
096a79158 ensure that all our files have an @version field placed consistently above the beginning of the class.
6c8101cdf Fixing bugs [11004] [11016] and [11017]. They are all the same. It appears that the JLS requires every single-line-comment (//) to be terminated by an end-of-line sequence. 3 Xerces files had this problem. One was fixed by Neil in his previous commit. I'm fixing the other 2.
082e2604b Add current node field to the wrapper. This field can be set by other components, such as DOMNormalizer, to point to the current node in process.
3269b5ff7 Set current node on the DOM error handler wrapper, so that applications that register DOM error handler before calling normalizeDocument, have access to the current node if any validation error occurs. Make some modifications to  DOMError and DOMLocator to make those objects reusable.
066b07318 canSetFeature now accepts Xerces features. If exception occurs during parsing, we now report it via DOMErrorHandler.
edee82ac4 Update code related to DOMError
15f252c23 Modify error message to include error node
dce380567 identity constraint fix.  Since character content is buffered and normalized in XMLSchemaValidator so that it can be made available through the PSVI, no need to buffer it in identity constraints.  Therefore, removed characters callback and added an ElementPSVI object to the endElement  callback.
ebf0a0bd0 no need to init sources, this is done by newInstance
aba4b0188 more identity constraint performance fixes.  Eliminated unnecessary endDocumentFragment calls for XPathMatchers. Selectors now do not attempt to examine character data; only fields need do this. Refactored some code and eliminated some unnecessary global variables from XPathMatcher.
7ff1ee2bf 1. Trying to improve the use of symbol tables. Many predefined Strings are added to symbol tables every time the parser is reset. For small documents, this would be a significant cost. Now since we call String#intern for Strings in the symbol table, it's sufficient to use String#intern for those predefined symbols. This only needs to be performed once. 2. These commonly used symbols are gethered together in a new class XMLSymbols.
d89777cdf 1. Trying to improve the use of symbol tables. Many predefined Strings are added to symbol tables every time the parser is reset. For small documents, this would be a significant cost. Now since we call String#intern for Strings in the symbol table, it's sufficient to use String#intern for those predefined symbols. This only needs to be performed once. 2. These commonly used symbols are gethered together in a new class XMLSymbols.
08b6fa46b fix for bug 11152
aec614b58 Shouldn't have moved the string constants from xni.NamespaceContext to util.XMLSymbols. Those are public fields, hence part of the XNI API. Moving them would break some applications that use those constants.
cb4068647 1. Fixing an obvious typo. The condition to resize an array should be if it too *small". So '<' should be used instead of '>'. 2. The "fixed" size of an SchemaNamespaceSupport should be 3: - an empty context (which all NamespaceSupport objects have); - an context for "xml" and "xmlns" decls (ditto); - an context for global namespace decls on <xs:schema>.
9ac1d36b5 1. Removed the SymbolTable parameter of NamespaceSupport#reset(). 2. Call NamespaceSupport#reset() in XSDocumentInfo, after a new NamespaceSupport object is created. 3. Don't need to declare "xml" prefix in XSDocumentInfo, because they are already in every NamespaceSupport object.
e6e2d0f93 Fixing an error introduced by my earlier commits.
9d5bec04e Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=9664.
2fff20f49 Bug fix in namespace alg. Added setNamespace method to allow turning on namespace support from XMLSerializer (temporary solution -- in long term users should move using DOMWriter)
ffb248dce Remove tests for invalid nodes, i.e. DOM Level 1, non xmlns prefix bound to the xmlns namespace, etc.
4bc2e2d6c only xmlns prefix can be bound to the xmlns namespace
357a2481d Change XNI to include XMLDocumentHandler.setDocumentSource/getDocumentSource and XMLDocumentSource.getDocumentHandler. This change allows us to modify the pipeline dynamically, in particular we now remove DTDValidator if no DTD grammar is available. This change improves parsing performance by 7%-12% for medium size files (100k-1M).
910720df7 Update XNI samples following a change to XMLDocumentHandler/XMLDocumentSource
13781f56f According to the latest Namespace in XML erratum no other prefix other that  "xmlns" can be bound to the xmlns namespace. DOM L3 createAttributeNS() throws an exception in this case.
e7f2f2527 "fix" for bug 11571.  The bug report was wrong, but this fixes an NPE that it provoked.
5dd7e6b46 emptyElement should not call handleEndElement if validator is removed from the pipeline.
649c3c604 for external subset preparsing, set an XMLErrorReporter on the EntityManager so that it can create a locale-sensitive reader.  Also, eliminate a spurious, synthetic endDTD call.
e7d32d1d1 Applied patch from Philippe Le Hegaret: NPE parsing entity with no value.
8ec462164 Allow both --MM-- and --MM as valid gMonth representations. We'll remove the support for --MM-- when the erratum is officially in the rec.
0a0af77b9 The processContents for "anyType" should be "skip".
91dc95068 Copying a performance change that Neeraj made to the "jaxp-ri-1_2_0-fcs-branch".
d903cb0f0 A new interface representing (preparsed) schema grammars. When a grammar is preparsed, and its grammar type is XML Schema, it can be casted to this interface. Objects of this interface can be converted to XSModel, from which further information about components in this grammar can be obtained.
be975bd91 Implementing the new XSGrammar interface. Now preparsed schema grammas can be converted to XSModel (a PSVI interface), from which detailed information about components in this grammar can be obtained.
8d9ed0497 Second re-organization of DOM code: 6 new DOM Level 3 interfaces are removed from org.w3c.dom. package to org.apache.xerces.dom3 (modifed import statements in implemenation code). Removed org.apache.xerces.dom3.ls and org.apache.xerces.dom3.Entity3/Document3. The dom3 and dom3.ls packages are not included in the default Xerces build.
3921ac359 Modify build to allow building xerces with DOM Level 3 implementation by modifying import statements in the source code before compile
bfa176d2a Update sample to reference DOM Level 3 interfaces in org.apache.xerces.dom3 package
bd0f48a3b Performance changes (thanks to Neeraj's changes to the jaxp branch): 1. A new property for the input buffer size. The value is an Integer. It's better to use a larger buffer for big input files, and smaller one for small files. 2. Use different buffer size for internal and external entity, because internal ones are usually of smaller size. 3. The rewindable input stream doesn't need to be that big. In most cases, it only need to hold the <?xml ... ?> decl, and 64 bytes seem to be sufficient for many ecodings.
af3d5fd3d Copy the "allow-java-encoding" feature to the schema loader. Without this, we'll have problem parsing instance documents that refer to schemas with non-IANA encoding names.
80489e5e8 a fix for the case where a <field> matches an element with type xs:anyType.  Previously, we would throw an NPE; now we treat the situation as valid if there is no element content.  We need clarification of whether this is correct.
5959ade2e message localization changes
f7aae0ad7 message localization changes
cba4980e0 message localization changes
e3d5a805f Message localization changes
900df2fcd Move derivation-restriction.5.2 checking to XSConstraints.  Occurrence info for local element decls in complextypes isn't valid during complex type traversal
a39cc43df reverting change where content validated by xs:anyType would be exposed in the schemaNormalizedValue property of the PSVI.  Also, identity constraints will no longer validate such elements.
9c088b75c modified 2.1 release info
179c35ac8 Updating the doc for the new property "input-buffer-size".
a309f9689 Fix bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=11156 If the document does not have any data after doctype, we receive endEntity call. In this case we should just exit, since DTD scanner should be replaced with Document scanner
c843a529b The XML Schema specification "requires as a precondition for assessment an information set as defined in [XML-Infoset]" (Appendix D). According to the XML Infoset the infoset items contributing to the [character information item] are: characters in the document, whether literally, as a character reference, or within a CDATA section, or within Entity Reference.
e67e66505 Updating the release documentation.
a7d7e2c73 Update according to the latest draft: http://www.w3.org/TR/2002/WD-DOM-Level-3-LS-20020725/
72c2102e5 include running registry tests (for test-dom3 target)
6df7e91d3 migrating changes by Edwin Goie that address problems with the old JAXP FactoryFinder code in environments that employ security managers.  This change breaks compilability on JDK 1.1.8.
510ac1532 porting changes by Edwin Goei that address problems in environments with Security managers into our SAX interfaces.  This code is now thoroughly nonstandard, but no test-suite compatibility problems should result from this change.
9af8167b5 porting change by Edwin Goie intended to address problems with class loading in environments with security managers to our internal ObjectFactory code.
bb874b493 modify code that uses ObjectFactory directly to take account of new signatures.
6371deafd Updates docs to include description of DOM and XML Schema implementations in Xerces
ec46b15ea For extensibility, remove final methods
a4bf4ded0 Fixing bug [12062]. After the first time we see an error in the "all" content model, we should change the state from "first error" to "subsequence error", so that the schema validator won't report one error multiple times.
d846186c2 Improving the error-handling code in XSAllCM. In the old code, we go through the whole list of candidate elements to find the one that matches the current element, even if some of those elements were already matched. The new code only looks at those elements that are not matched yet. This will improve the performance for valid documents, because checking whether 2 elements match is an expensive operation (which involves substitution group checking). Of course, the performance would suffer a little bit for invalid documents (because we might need to go through the list twice), but the performance for valid documents is our primary concern.
09da68947 doc updates for upcoming release
6059545cf roll over the version number to 2.1.0
d93833904 Reversing the change I made some days ago. The current JAXP TCK requires that the process contents of "anyType" not to be "skip". We'll change it to skip when the TCK is updated.
4de34a522 adding message relating to identity constraint validation.  Also fixing bug#11840
17aae6638 minor doc updates (really should have gone into 2.1).
457441435 Relacing "Vector#insertElementAt()" with "setElementAt()". The latter is supposed to be a bit more efficient.
bf7c75829 1. Don't always create a new Vector, while it's possible to reuse the old one. 2. Relacing "Vector#insertElementAt()" with "setElementAt()". The latter is supposed to be a bit more efficient.
6b6200f59 It's better to use Hashtable#elements() to get all the values out of a hash table, than to call Hashtable#keys() to get all the keys, then use the get() method to get the corresponding values.
216f83ea0 fix for bug 11094.  Our handling of unions in selector xpaths was broken because we did not insert a self-axis test on on anything but the first component of the union.
6f6a4b81a some minor code cleanup
8240ccf88 Taking advantage of the fact that Strings internalized using symbol table and String#intern() can be compared by reference.
93b13cc84 fix for bug #12234
ec5a10261 Fixing bugs [8535] [10468] [10633]. when a directory name containing whitespaces is used to absolutize a relative URI, - in 2.0.1, DTD or Schema files can't be found - in 2.0.2/2.1.0, no file can be found, with a "no protocol" exception. Now it's fixed by escaping the whitespaces (and other special ASCII characters) in the "user.dir" system property. But it's still strongly recommended to provide the full-absolute (and properly encoded/escaped) URI to the "parse" methods.
9762a66d1 "fix" for bug 5950.  The bug itself is not valid, but a modification of it whowed that our handling of . in XPath expressions--both with and without surrounding whitespace--was broken when unions are in use.
9d6b42601 Escaping more ASCII characters that are not allowed in URI.
3bcc2d9d4 Patch: the current version in the Apache repository does not support request such as "XML 2.0 LS-Load 3.0". Submitted by: Philippe Le Hegaret Applied by: Elena Litani
b20cedb06 fixing bugs 11406 and 12040. When searching for a mark-up terminating symbol (like --> or ?>), the parser would go into an infinite loop if only some of the characters were present before EOF.
0d6d96e99 make Version#getVersion() static because it seems to be the right thing to do and has no obvious side-effects
a7a891a19 use a constant rather than an undefined variable in this sample code.
6ef03103f refactored Object instantiation code lsightly so that this class can now be used in the DOM implementation.
cdba1c285 fixing bug 9256.  Now all Xerces class finding/loading is`cat ~/temp/mods` done using the ObjectFactory mechanism, and hence by using the context classloader when available.  If the context classloader is unavailable or throws a ClassNotFoundException, then the system classloader is used as a fallback.
69ef9bbcf revert part of last commit.  That was experimental code that should not have been checked in.
c51d90a64 When the "validation/schema/normalized-value" feature is off, we don't need to augment PSVI for characters() calls, hence don't need to go through the initialization process of the augmentations and PSVI augmentation item.
42b047981 1. We don't always need to create a new ValueStoreCache when the parser is reset. The startDocument call can reset the ValueStoreCache. 2. When there is no IDC map, we don't need to clone the empty hashtable and push it into the stack. I'm pushing a null now. When the stacked is popped, we perform a null-checking to see whether we need to iterate the elements in the hashtable.
ec88ca90c removed reference to non-existent option.
3903e72e0 at long last, add a description for the XMLGrammarBuilder sample.
0e7c0df0a make the XNI samples use our classloading mechanism, rather than simply relying on Class.forName().
92f1a5521 this change attempts to address poor performance parsing documents with very large comments. I observed between 10% and 15% improvement (depending on the kind of parser being used) on a 200K file with a 100K comment.
1e6f52e01 Some cleanup in the schema validator: 1. Removed some code/variable that are never used; 2. Moved some one-time initialization code from "reset()" to the constructor; 3. Moved PSVI-related code closer to each other to improve readability.
6b0be6dbe processing instruction targets were not being reset.  This should fix Xalan smoketests.
1c7dc3ed6 Add a specialized scanner implementation that is also responsible for binding the namespace. This scanner will not bind namespaces if DTD grammar is available since it might add some default namespace attribute. Add a new DTD Validator that is responsible to bind namespaces, in case the scanner could not do it.
28030f370 fix for the mysterious ArrayIndexOutOfBoundsException that assailed Xerces-J during gump builds on 09/12/02. Cause was a small optimization, where a character was read from the current entity *before* it was ascertained whether there was anything at that place in the buffer.
e544ff61a Added the scanner/notify-char-refs and scanner/notify-builtin-refs features to the documentation.
41e5a1bbf Adding default attributes *after* we've validated those attributes that are present. Otherwise the default attributes will be validated *again*, but we know they are (supposed to be) valid.
2d69036d9 This was a long pending REVISIT: the handling of the feature "schema/normalized-value" was handled both in the schema validator, and various parsers. Now all the code is centralized in the validator. This has many benefits: 1. Applications that use xni parsers directly can benefit from this feature, instead of duplicating code from SAX or DOM parser to get the normalized values. 2. Centralized code makes it easier to understand and maintain. 3. This feature doesn't need to depend on PSVI.
07d0ad64a Performance improvement for default element value handling: 1. Don't always need to create a new XMLString. 2. Don't need to augment PSVI for characters() calls.
fa8c704eb The NonValidatingParserConfiguration now uses optimazed scanner (that binds namespaces). This commit also re-organizes some configuration code.
d8d2a14c0 Modified the identity constraint code so that it doesn't depend on PSVI.
2be080107 propagate change to improve processing of long comments to the experimental XML 1.1-handling XMLEntityManager.
55e61cb97 fixing bug 11989.  Now entities in the entity manager know whether they were declared in the internal or external subset.
b53332e6e Add new internal property: namespace-context that represent a shared namespace context between all the components. This property is reset by a configuration just before parse and is queried by all components. Note: this property MUST be set by the configuration. The private copies of the namespace support are removed.
aa9912ed2 Add a new field to the XMLAttributes implementation class, to indicate whether an attribute was validated using a Schema ID-drived type.
4b9a07b87 A new field for the property [schema default]. We used to get it from the attribute declaration. But for default attributes, the declaration is absent, but the schema default property has a value.
20cecb8fa 1. Explicitly set the [schema default] property, since it's separate from the attribute declaratoin now. 2. Update the "schemaId" field of XMLAttributesImpl to indicate whether an attribute was validated using a schema ID-derived type.
49bf4d09e Update the AbstractDOMParser to use the new field from XMLAttributesImpl, instead of accessing PSVI: 1. Remove the dependency on PSVI; 2. Better performance by avoiding accessing the augmentation.
bfa983b04 Should check whether there is a default/fixed value before storing it in PSVI.
abfd5195a fix to permit compilation under JDK 1.2
0ac26f8be Integrated configuration is now the default one. If namespace are turned off we use the original implementations of XMLScanner and DTDValidator that do not bind namespaces.
910fffbee fixing bug 11991
b1be20b0e Check whether fEnumeration and fPattern are null before accessing them, to avoid NPE's.
d25b30225 Fixing the meaning of some combinations of various validation features: - The meaning of validation off and schema on: according to the doc, the only difference from both are on should be that no errors are reported. But currently it controls more than that. Got fixed now. - Dyanmic validation. It only relies on whether xsi schema location attributes. But it should really depend on whether a decl is found for the root element.
88ec404b6 A new method to reset the state.
666a9ddc1 1. A new feature to indicate whether PSVI augmentation is necessary. It turned out PSVI augmentation is costly. For applications that care about performance but don't need PSVI, this feature can be turned off. 2. Fixing a PSVI bug: when an attribute is invalid, it's parent should also be marked invalid.
8878088a1 A new feature to indicate whether PSVI augmentation is necessary.
435f923db Adding DOM Level 3 XPath to the org.w3c.dom.xpath package. These are experimental interfaces and maybe modified or removed in the future
856f40d59 DOM Level 3 Xpath should be included in xercesImpl.jar
320c08272 Performance improvement for schema grammar parsing: 1. Specify the size of hashtables, to avoid too many empty enties or rehashing. 2. Choose either vector or hashtable based on the number of enties. 3. Avoid whitespace normalization: stripping the leading and trailing spaces are sufficient in most cases.
952d4121a When removing a DTD validator from the pipeline, the document source of its document handler should be changed to the document source of the DTD validator.
084e19c93 Removing unnecessary code related to schema normalized value.
c09a5e24a Make sure the default value of the PSVI augmentation feature is true.
7639eca52 Move this feature ID from AbstractDOMParser to this class, where it's actually used.
ed6830569 Remove the schema validator from the pipeline when it's not supposed to do anything. This happens when 1. A DTD grammar was found, but no schema grammar was found. 2. Dynamic validation is on, but no schema grammar was found.
c15ce54d2 since it is now recognized by IANA, add GB18030 to the list of supported encodings.
a05a16a28 fix for bug 11994
0dc6aa563 update docs to specify which methods are used by the Xerces DOM parser directly
579167249 fix typo
675e02d47 add note that dom.DOMAddLine is not included in the default Xerces distribution.
c74ec19b6 Avoid NPE if namespace were set to true.
e6ae0f5af Add *temporary* setProperty method to DOMBuilderImpl (this method will be removed if the W3C adds simillar method to the DOMBuilder interface). Users can set grammar pool using this method. Also, make DOM Level 3 implementation copy grammar pool from the parser: this is also a temporary solution to allow using grammar pool. Intead, we should add setProperty to the CoreDocumentImpl interface.
2c7983927 1. A typo in "endElement" call: should apply schema default element value when the "schema default" feature is "on", istead of "off". 2. Cleaned up some code related to normalizing data.
74991e003 1. A typo in "endElement" call: should apply schema default element value when the "schema default" feature is "on", istead of "off". 2. Cleaned up some code related to normalizing data.
bfb30c125 1) Added methods to XMLComponent so that parser configurations can    query the preferred default values for settings. Also modified    all of the classes that implement or use this interface to take    advantage of the new calls. 2) Removed extraneous output from xni.Writer sample.
4b7faba42 Fixing bug [12919]. Was a typo.
e6998112d Temporarily comment out the finalize() method, because 1. It seems that finalizers are not guaranteed to be called, so the functionality is not implemented. 2. It affects the performance greatly in multi-thread environment.
08bfac706 Fixing bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=12862 The CoreDocumentImpl.importNode is used for both clonning and importing nodes, and we should differentiate between the two cases
ddb98c485 Add constructors to the new IntegratedParserConfiguration, so that it can be constructed in other ways: with a given symbol table, a given grammar pool, etc.
e35195f7a The "IntegratedParserConfiguration" became the default. Updating the XNI samples to reflect it.
c72222df7 Add xni.NamespaceContext to the XMLDocumentHandler.startDocument() and update the implementation accordingly. Set default for  validation/schema feature in XMLSchemaValidator component to true. Modify docs for xni.NamespaceContext.
6d87ee153 Update XNI samples: added xni.NamespaceContext to the XMLDocumentHandler.startDocument() Need to update DocumentTracer to print out current namespace information per element.
9d8938919 Remove internal property for namespace context
5314bd855 Made some fixes for the last change which added methods to the XMLComponent interface which allows the parser config to query preferred default values for settings. However, since the XML Schema validator component is created dynamically, the parser config would query the default settings and overwrite the values set by the application.
bbaaafc8c Removed UTF-8 BOM that was confusing StyleBook.
4cec8509e Fixed typo bug introduced with XMLComponent changes.
b23bcf2a5 A bug: we didn't send characters to the document handler if schema-normalize-value feature is on, but the text doesn't need to be normalized (WS= preserve, or complex content). Fixed now.
db146fa46 DTD validator should pass the namespace context object to the next component.
6d1bfcc21 Moving the calls to ValidationManager#reset() to the classes where it gets created. It was called in DTD validator, but in the case where there are more than one DTD validator, it'll get called more than once; and when there is no DTD validator, it won't get called.
168490550 Applied patch (with minor modifications) from Mikko Honkala <honkkis@tml.hut.fi> to update the PSVI in the DOMNormalizer.
e2a1dc72c Update sample following the XNI changes
b41342096 Remove dom/xpath api from xerces distribution. Fix dtdjar target.
e24510945 Add deprecated flag
0e14a45d2 update xni doc to reflect XNI changes
b0f5424e6 release updates for 2.2.0
e2558606d fixing bug 7247
7fbf2946c update tools so that our docs can be built on IBM JDK 1.4. We are now using Xalan 2.4.0, Xerces 2.1.0 and a version of StyleBook freshly built from CVS.
118f667bb fixing bug http://nagoya.apache.org/bugzilla/show_bug.cgi?id=12257 Added a new class which escapes character sequences that doesn't have representation using an unreserved character, it corresponds to printable character of US-ASCII coded character   set [00-1F and 7F hexadecimal] or any US-ASCII character that is disallowed like space ' '  As of right now this class doesn't not handle  non-US ASCII character. But it may be extended in future to handle those cases.
91b786faf fixing bug http://nagoya.apache.org/bugzilla/show_bug.cgi?id=12257 Added a new class which escapes character sequences that doesn't have representation using an unreserved character, it corresponds to printable character of US-ASCII coded character   set [00-1F and 7F hexadecimal] or any US-ASCII character that is disallowed like space ' '  As of right now this class doesn't not handle  non-US ASCII character. But it may be extended in future to handle those cases.
b687bf6bf version number revision for 2.2.0
101ccf851 Fixing bug [13044]: the order of clearing the hashtable and storing the external schema location properties was not correct.
15772d2ce It should also recongnize JAXP_SCHEMA_LANGUAGE property. http://java.sun.com/xml/jaxp/properties/schemaLanguage
7426dec8b enable Xerces to be compiled under IBM JDK 1.4.0 without hacking the JDK installation.  This should not affect other JDKs at all.
8318ddf9d Escaping non-ASCII characters that appear in the "user.dir" property.
ec1c6c7f4 The array for property defaults has one less entry than that of the property names. This causes ArrayIndexOutOfBoundsException when the getPropertyDefault methods is called for the JAXP schema language property.
c8ed9f761 Fix for bug 13054
e058fddde 1. Shouldn't prepend "file://" to the user dir, because later on when a URI is created, another "file://" will be prepended. 2. Avoid creating a new Sting to change "blah/blah" to "blah/blah/", now we do it when we still have the string buffer.
57f08e2bf 1. JAXP spec. allows []s of String, File, InputStream, InputSource as well, apart from Object[] for the property "http://java.sun.com/xml/jaxp/properties/schemaSource". Implementation must adhere to the spec. 2. Making the exception message more descriptive.
ad4a7b11c Fixing a threading problem.
c61593bd3 Fixing bug [13275]: should fill all PSVI properties at once, before exiting from handleStart/EndElement calls.
819813658 enhance robustness when continue-after-fatal-error is set to true.
215b93473 URI was not updated in the element stack thus it was not set at the endElement() call. Fixes bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=13321
37a0e0f40 ensure that the allow-java-encodings and continue-after-fatal-error features are propagated from the main configuration to the parser responsible for parsing schema documents.
1637b5cd9 correct handling of continue-after-fatal-error feature.
6236b23ee Fixing bug [13428]: "annotation?" is allowed as a child of local <group>.
e601e2615 as described in a post to xerces-j-dev, this change introduces a JAXP-like default for Xerces to examine for a properties file ($java.home/lib/xerces.properties, to be precise).  It also no longer prepends $java.home/lib/ to a passed-in properties filename.
95dea0dec formerly, if Xerces encountered a file where the end-tag of the root element was repeated, it would enter an infinite loop and only stop when the JVM ran out of memory.  This commit fixes this problem.
ccb36ebca fix for bug 13717
930c6bcbb Fixing bug [13593]. Need to reset the first character to a space in the normliazed string buffer.
233958281 It doesn't make much sense if the buffer size is too small (smaller than 64). And if it's set to something less than 6, there isn't enough space to hold the "<?xml" string, and we'll get an ArrayIndexOutOfBoundException.
ad92f83b0 Making sure that getPrefix() returns the correct prefix. In the following case: <e1 xmlns:p="uri1"> <e2 xmlns:p="uri2"> ... </e2> </e1> In the context of "e2", getPrefix("uri1") shouldn't return "p".
1d1aba9b7 Peformance patch for XMLDTDValidator. Optimizing addDefaultAttributeValidate (hotspot) Passing elementname object to addDTDDefaultAttrsAndValidate, we already have this information available and can directly pass it. Greatly reduces the invocations of DTDGrammar.getElementDecl() (another hotspot).
5e6f60f06 The PSVI for endElement were added after we retrieve from the stack information for the parent element.
b8c347e01 Fixing a bug in traversing wildcards: a static value was updated when multiple wildcards are traversed, if none of them specifies the "namespace" attribute.
09bac55ce Fixing bugs related to PSVI properties "validity" and "validation attempted": 1. it's not invalid if an element decl/type definition can't be found for the root element. for historical reasons, we still report an error in this case, but in PSVI, the validity should be unknown. 2. if an sub-element/attribute is invalid, then the containing element should be invalid too. 3. if an element is laxly assessed, its validity should be unknown, instead of valid. 4. if an element is laxly assessed, and it doesn't have any children, its "validation attempted" should be "none", not "full".
afe1265a9 1. Fixing validation bug: need to a flag to indicate whether textual data appeared in the content of an element. We used to check the length of fBuffer, but for perforance reasons, we don't always want to append textual data into such buffer, and sometimes the buffer is normalized, hence could be empty even if there were character data (all whitespaces). 2. We don't need to know the could of sub-elements. Using a boolean fSubElement to replace the integer fChildCount.
7f5e0f626 Performance fix: we don't always need to append textual content to the buffer. It's only neccesary when the element decl has a fixed value constraint, or the type is simple.
970ca6e70 Use a different way to convert the file path to a URI. This approach is similar to what's in XMLEntityManager, and it can handle non-ASCII characters. When "ConvertToURI" is updated to be able to handle non-ASCII characters, we can come back and choose the better solution.
37a937f62 Performance: adding a new validate method that takes an Object as the string value. This enables passing a StringBuffer to such method, and possibly avoid some object creations. Without this method, we need to convert StringBuffer to String before calling validate method, then create a StringBuffer in the validate method for normalization, and finally convert the StringBuffer to a String again after normalization: buffer -> string -> buffer -> string With this method, the original StringBuffer can be used to hold the normalized value. This saves 2 object creations: buffer -> string
522e6e622 We can dynamically figure out the component before and after the DTD validator, so we don't need to pass such kind of information to the namespace scanner.
bca78dc49 1. Schema assessment doesn't augment the infoset for character information items, so our PSVIWriter sample doesn't need to output information abou characters. 2. All PSVI properties for elements are available on endElement calls, so we choose to output them all together. 3. When "validation attempted" is none, no other property is meaningful, so we don't need to output any other properties than "validation context", "validity" and "validation attempted". This also fixes bug [13276], because we won't try to access the "type definition" property when it's null.
725630756 Performance: we don't always need to fully normalize the string. 1. For base64 and derived types, the whitespaces are actually handled in the Base64 classes, so we don't need to normalize the string at all. 2. For many other types (all but string and derived types), no whitespace is allowed in in the value (only leading and trailing ones are allowed). So instead of collapse, the whitespaces, we only need to trim the leading and trailing one. if there are whitespaces in the middle, an error will be reported when trying to convert the string value to actual value.
d3d664db4 Performance: we were using java.math.BigDecimal and BigInteger to represent decimal values. These classes are too heavy, and involve a lot of object creations. Now we use a light weight object for decimal values. We may want to add more functionality to this new representation later, but it now has everything necessary for schema validation.
bb210c283 Fixing bug. When an array of Objects is used as the value of JAXP SCHEMA_SOURCE property it is illegal to have two schemas that share the same target namespace.
f83cbfd54 Putting the appropriate license.
0ca18dde1 Fixing Bug. Any component in the pipeline may open new entity using central XMLEntityManager component. So check in scanner ( DocumentFragmentScannerImpl , XMLNSDocumentScannerImpl ) that the element was opened in the same entity should be made before passing information to the next component in the pipeline.
287358028 addressing bug 1329.
c2c537859 Bug: we also need to check the pattern facet for list and union types. Performance: whitespaces are not allowed to appear in ID/IDREF/ENTITY types, so we don't need to perform full normalization on values of these types.
2a2e8e25c DOM Implementation now checks if qualifiedName is malformed/invalid per Namespace in XML specification. (createElementNS/createAttributeNS/createDoctype)
107f69f1c Performance: for list types, after tokenize the input string, we don't need to normalize each item, because there won't be any whitespace in there.
32191a2dc alter documentation to reflect the fact that Xerces implements JAXP 1.2
2b2593eef Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=13062
4b4d20ffe fixing bug 9102
aa1974683 Typo: should be { instead of "
ce4ad79be According to an errata (E1-2), <all minOccurs="0"> is allowed.
bcbc4cdcd According to an errata (E1-2), <all minOccurs="0"> is allowed.
87587c579 1. Changed the type of "public" attributes to "xs:token", to avoid one indirection; 2. Changed the type of "version" attributes to "xs:normalizedString", as required by erratum E1-9.
bf05ca740 Changed the pattern facet of the "language" type as required by erratum E2-25.
692f02297 Need to expose type information for default attributes. Don't know why the spec didn't ask for the attribute declaration.
7700da7bd release doc update for 2.2.1
8bbf51d2b Need to output character information, as part of the base infoset.
d2e738280 FAQ update describing how to derive XSModels from Grammars produced from parsing Schema documents
1a81c43db We need to check if attribute map not null (default) before attempting to reconcile the default attributes.
4c8c17fe5 Add reference for parsing schemas
51ee38026 add a note about DOM Level 1 nodes
8e7609241 getElementBy id moving to DOM FAQ
a65e116a3 add FAQ on SAX characters()
4a547e7b9 Fixing a memory leak problem: need to set the number of attribute uses that are currently used to 0 after each parse, otherwise the parser will keep creating new instances of XSAttributeUseImpl and store them in an array.
ea5821c69 This variable was not reset to 0. It stores the number of child elements of the current element. Each time the parse finishes, it's value is 1 (because there is one root element). Without setting it to 0, its value will increase by 1 each time an instance is parsed. It's used as an index to an array. With its value increasing, the size of that array needs to increase as well, which leads to some memory leak.
a858ab6fb As pointed out by Katarzyna Marszalek, we didn't propagate the entity resolver (that's set on the document parser) to the schema parser (a DOM parser that's used to parse the schema documents). Fixed now.
12af3d521 remove javax.xml.parsers.ConvertToURI.java from API jar file.  Also, clean up exclusions of non-existent files and remove some dead targets.
072bbc0c1 increment version number for 2.2.1
2e12fb707 doc updates to reflect ability to validate schema for schemas
2d6a90310 Now we can process the Schema for Schemas (found at http://www.w3.org/2001/XMLSchema.xsd) without reporting any errors. Inserted special logic to permit the presence of the built-in Schema datatypes in this particular schema.
c25a3ca63 fixing bug 14455.  Since it is not possible to read a byte stream twice, we used to fail when we tried doing so.
c7168ee3c fix broken pack-tools target.  Most of the LICENSE files, and the new xjavac task, were formerly omitted.
8e0af34bb 1. Provide canonical representations of Schema datatypes; 2. Provide more accurate equality checking for union types.
e51ce2c0e Make use of the changes made to the data types: 1. Use canonical representations for validation and PSVI, when required; 2. Use new equality checking machenism.
cc5f7f8cd javadoc fix: change @returns to @return
ff81c9e97 fix more javadoc warnings
18e5c5caf allow Locale to be set on DOMParsers, as they can be on SAXParsers and could on DOMParsers in Xerces1
248580cc2 1. If there is a pattern facet, then we have to do full normalization, because pattern is checked on the normalizaed value. 2. Output more descriptive error message for pattern facet violations.
97790a568 1. Rec issue R-22 suggests that 0 and -0 are the same value for float/double. Making necessary changes for order comparison (0 no longer greater than -0). 2. Generating correct canonical representations for float/double. We were relying on Java to do the job, but apparently, Java Float/Double don't do what we want.
8ee4203a3 When normalizing a StringBuffer, and the whitespace facet is collapse, we need to adjust the length of the StringBuffer after the normalization.
88480819d Fixing some indention problem in the sample source code.
ee957f526 Fix for bug 13282.  A great deal of thanks goes to Tim Bruce for the patch and stand-alone test case, and to Jean-Francois Arcand for much patience.
be47e0bfe give credit for patch to bug 13282 in release docs
084976c6f fix for bug 14882
6ea84a46e premature commit of this file...  oops...
b25b4597a Fixing bug 14939: the default attribute value was incorrect.
db2ea7116 Fixing bug 14915: possible array index exception if there are more than 11 grammars in the grammar pool.
25cb36ea9 A new error message for the new "disallow-doctype-decl" feature.
29c33b872 Introducing a new feature "disallow-doctype-decl". When this feature is set to true, a fatal error is thrown when the incoming document contains a doctype decl. This is to solve a security problem: processing the internal subset of the DTD might bring the JVM down.
42d691234 Updating the docs for the new "disallow-doctype-decl" feature.
4ee21bab5 A potential NPE. We check whether fDTDHandler is null everywhere else.
f67babd0c Fix for errata E1-16: the "public" attribute of <xs:notation> is optional.
cb3f902f6 as agreed on the list:  added getDTDSource to DTDHandler, getDTDHandler to DTDSource, and similarly for DTDContentModel*
fd76a3ed6 no longer needed in new architecture for XML 1.1 support
c14825599 Changes in support of XML 1.1.
1070f1129 implementing XNI changes and XML 1.1 support in DTD validation code
12265e72e to properly support XML 1.1 in DTD datatype validation code, it is necessary to implement a new factory which calls out specific XML 1.1 validators for NMTOKEN, NMTOKENS, ID, IDREF, and IDREFS
e7339ba65 add a character properties file specific to XML 1.1.  While these methods could have been included in the existing XMLChar, for applications that do not use XML 1.1, it may be possibly to avoid static initalization this way.
1578e5e24 changes in support of XNI modification
e5aa8cdd2 changes in support of XML 1.1.
88668f8e2 support for XML 1.1
3a95efd04 handle the version pseudoattribute correctly in both XML 1.0 and 1.1 contexts
e6c755316 The texts for whitespace facets were not ordered correctly.
90495ced5 Fix for errata E1-21: need to check the processContents of wildcards in the derived types (by restriction), to see whether they are stronger than those in the base types.
e559c5760 For existing attribute setAttributeNS changes value and prefix, make sure that prefix is not null before constructing the qName.
aa6ccfc06 update generic tests: -- xmlns attributes must belong to the xmlns namespace, it is forbitten to create element with "xmlns" as a prefix or local name -- test setAttributeNS for value and name change -- QName tests some should catch namespace error
0f6ab5ed2 add support for namespace 1.1 when XML 1.1 documents are being parsed.
10bf13502 Modifying XSDHandler so that it doesn't rely on DOMNodePool directly. This made it easier to switch to another DOM implementation (DTM for example).
9544fdae6 Add implementation for DOMConfiguration for DOMWriter. DOMWriterImpl now implements DOMConfiguration interface and supports 2 new features "namespaces" and "xml-declaration"
89d2a2099 Add implementation of DOMConfiguration for DOMBuilder and Document. Add support for "schema-type" and "schema-location" properties. Document no longer contains any code for configuration -- instead there is a new DOMConfigurationImpl class that implements configuration. No properties from the DOMParser are propagated to the DOM tree -- instead user should use setParameter mechanism to add any additional properties, ie. error handler, entity resolver.
1b40ed204 Update LS to reflect DOMConfiguration changes
fcf870652 Update DOM L3 Core interfances to include DOMConfiguration
88c5a31ef use getParameter
ffbfc8333 Update dom l3 samples
a20576dc6 Update the build to incorporate changes for the DOMConfiguration.
b74a17a8a Add tests for "schema-type" and "schema-location" and modify the test to use DOMConfiguration
78bcc0335 add sample files that include both dtd and XML schema
cc2ea2579 Update build for dom l3 tests
9bdc19b9d Fixing error in "test" target
ac88c1d82 A table-based implementation (DTM) of DOM, to improve schema loading perfomance. The code was originally developped by Rahul Srivastava in a branch of Xerces. Thx Rahul. The main differences from Rahul's code: 1. DefaultDocument extends NodeImpl now (instead of DefaultNode), to avoid some casting. 2. DefaultXMLDocumentHandler is modifed to reflect changes in XNI. 3. ElementImpl stores the line/column information, to better error reporting. 4. SchemaDOM parser is modified to check the error where non-whitespace textural content appears within schema elements other than annotations. There are still things that need to be implemented: 1. How to store content of annotation elements. To expose annotation, we need to provide all information about it, including its textural content, PIs, and even comments. But such information is not currently stored in DTM. (This is not a problem for now, since we don't expose annotations yet.) 2. Implement a DTMNodePool to further improve the performance by reusing the node objects.
029f80f09 Now it works with both DTM nodes and Xerces DOM nodes. This enables the possibility that we support both DTM and DOM as schema source at the same time.
4cc81f7e9 Switching from DOM to DTM for schema parsing.
41a9eddf1 XNI modifications 1. XMLResourceIdentifier add the following methods: public void setPublicId(String publicId); public void setExpandedSystemId(String systemId); public void setLiteralSystemId(String systemId); public void setBaseSystemId(String systemId);
fbbc8b831 Modify samples following the changes to XNI (removing start/end Prefix mappings)
16d1e1339 Tentative release plan
96f243a8d SAX reports empty string for a null URI.
662dd87fb createElement in HTML DOM converts a tagName to upper case, thus on the endElement we should compare names ignoring the case.
175e37e7f cleanup.
0d01bb71b fixing DOM Level 3 built that was broken (impl/xs/opti)
fb83a29bd fixing DOM Level 3 built that was broken (impl/xs/opti)
130aeee42 Implement XML 1.0 attribute value normalization. Expose normalized values and default content via DOM Tree. Add implementation of discard-default-content.
8c22cec9f Fix tests
79f3cf6c6 uncomment some tests
a0853fb68 Implementation of DOM Level 3 setId* methods.
73d435406 Update interfaces to include new ID methods
eca090abc Add test for DOM Level 3 setID methods
44db052d8 Feature "discard-default-content" should only be supported in the DOMWriter (Minutes DOM teleconference 20021204).
a556144fd Update implementation with new DOM L3 methods
f2630ae7e Rework handling of encodings within the serializer.  Now it should be able to support the intersection of the IANA encodings that Xerces recognizes and those for which the JDK has a CharToByte converter. To maximize portability of serialized documents, by default the serializer will only accept IANA names for encodings now.
120cac5c6 reworking encoding support, as well as fixing bug #15313
06776cac2 add a new XML 1.1 serializer.
37f63dab1 fix broken DOM 3 build
152b37083 Enable the DOMWriter implementation to correctly serialize XML 1.1 documents.
a37d91435 localize an errant error message
b2909b39e sync JAXP code up with tck-jaxp-1_2_0 branch from xml-commons.  This closes the file input stream we opened when reading the jaxp.properties file.
3551c0576 Close the file input stream we opened when reading the xerces.properties file.
e4299dc59 The texts for content types weren't ordered correctly.
14510bfbc Exclude DOMUtil.java from dtd-only jar build. This file is only used by XML Schema code, and has dependency on impl.xs package.
50401ced6 Update Id table during normalizeDocument operation
ffe442af5 Fix a JAXP TCK failure.  Now, whenever an EntityResolver needs to be set on one of our parsers, the corresponding configuration's setProperty method is called instead of its setEntityResolver method as had formerly been the case.  This allows the new resolver to be passed to all registered components; BasicParserConfiguration's setEntityResolver method does not exhibit this behaviour.
45f5a5131 Two new grammar description interfaces, for describing DTD and XML Schema grammars respectively. With these interfaces, users can get more detailed information about a grammar.
3222bc8d4 Implement the new grammar description interface for DTD grammars.
6960df22d Implement the new grammar description interface for XML Schema grammars.
6474cf5b5 Implement validators pool for normalizeDocument
5bf50387e Update setIdAttributeNode methods per latest DOM L3 draft
78ae219a2 Modify to test normalizeDocument
2fd5cba30 Include thread test for dom and sax for "test" and "test-dom3" targets
01cadc0c8 clean up some unused imports
b9169a396 add new SecurityManager property.  Once components have been altered to handle security problems, this property will allow the parser to behave in a security-conscious way if and only if an application has caused it to be set on the configuration.
db10f0a6c applying a patch, based on code Neeraj committed earlier to a branch, that leverages the new SecurityManager property to fix the entity expansion DOS hole.
5edcee053 add a new configuration that allows Xerces to behave in a security-conscious way with no changes in application code.
715d1945b fix JAXP 1.2 limitation where DTD errors would be emitted if a DTD were present, even if the schemaLanguage property was set appropriately.  Now no errors will be emitted under this condition.
8ec00d825 fixing bug 16021
51be532c6 fixing bug 15768.  According to the javadoc for StringBuffer and String, this is what the original code would have compiled to; this fix simply makes sure that, if compiled under JDK 1.4, Xerces will work with previous JDKs
efd471981 Committing the patch proposed by Michael Glavassevich to solve some performance problem in the URI class. Thx Michael. " 1) I created a lookup table for the character classes of URIs, to eliminate the linear character searches through strings.
6464b76fa fixing bug# 15574.  Thanks to Michael Glavassevich for both pointing out these bugs and providing an excellent fix for them!
4d0ffc8ba fix DTD-only jar build
ecb3a007d Modify PSVI interfaces
fe279f0bc Update PSVIWriter according to the changes in the PSVI interfaces
0299de462 XSTypeDecl interface is no longer needed since xs.psvi.XSTypeDefinition already includes methods that XSTypeDecl used to define
832b5ac42 Update this sample according to the changes in the PSVI interfaces
91f57f707 Make dv-only jar work again: 1. dvprepare-src target needs to depend on the prepare target 2. dv package now needs more classes to compile, namely those related class loading and security managing.
967c2d128 make DTD preparsing work again.
735ee9a1b if a SecurityManager has been enabled and the continue-after-fatal-error has nonetheless been set to true, there seems no better way to continue than to reset the entity expansion count once it has reached the limit and the fatalError has been thrown.  One could, in principle, use this to determine how much memory it cost for a particular number of entity expansions.
a4633dc33 Fixing another security problem. High value of maxOccur attirbute causes stackoverflow error. When application switches the mode of parser to behave in security conscious way using SecurityConfiguration. It sets the maximum number of nodes that should be created when building     content model from maxOccurs attribute value specified in schema document, number of nodes     created depneds upon the type of content model and value of maxOccurs attribute.Current limit of maximum number ofnodes has been set to 3000. However, it can be set to higher value if required by the application using SecurityManager Object.
f07c48965 Generate correct canonical lexical representation for date-time types.
67d3c68c7 According to a recent clarification of the schma spec, both the original lexical rep and the canonical rep of fixed/default values need to be valid wrt the type definition.
c5536ec19 Fixing another security problem. High value of maxOccur attirbute causes stackoverflow error. When application switches the mode of parser to behave in security conscious way using SecurityConfiguration. It sets the maximum number of nodes that should be created when building content model from maxOccurs attribute value specified in schema document, number of nodes created depneds upon the type of content model and value of maxOccurs attribute.Current limit of maximum number ofnodes has been set to 3000. However, it can be set to higher value if required by the application using SecurityManager Object.
28603bdd5 Fixing another security problem. High value of maxOccur attirbute causes stackoverflow error. When application switches the mode of parser to behave in security conscious way using SecurityConfiguration. It sets the maximum number of nodes that should be created when building content model from maxOccurs attribute value specified in schema document, number of nodes created depneds upon the type of content model and value of maxOccurs attribute.Current limit of maximum number ofnodes has been set to 3000. However, it can be set to higher value if required by the application using SecurityManager Object.
066190548 fixing bug #15255.  Also, I have altered things so that we are able to validly parse our own documentation--there were several errors related to duplicate declarations to get rid of.
705d2033b document new SecurityManager property
b59cc8e3c Implement DOM L3 TypeInfo. Clean up a bit DOMParser -- it used to create notation declarations from external DTD...
aac6a92ea Update DOM L3 interfaces to include TypeInfo
634de41e7 Modify build (implemented DOM L3 TypeInfo support)
89dd3df12 A new feature: http://apache.org/xml/features/standard-uri-conformant When it's turned on, it has to be a URI where a URI is expected, otherwise a URI.MalformedURI excpetion (a subclass of IOException) is thrown.
c365b31c1 Include the schema for the schema namespace in XSModel. Types from the schema namespace are by definition present in every schema document, so they should be included in XSModel.
66764ac7d Function to create instances of different node types should return CMNode type. Resetting the node counter once we are finished building content model.
5a14bab07 Fix a bug introduced in the new getTypeInfo method (DOM L3)
8048a5dd9 Element Definition should not have -1 code (related to debugging of the deferred DOM)
f8e04fa42 According to the latest DOM L3 clarification XML 1.0 attribute value normalization will not happen in the DOM (since DOM exposes the Infoset).
54387d7ee add a tarball containing API source from the JAXP TCK-compliant branch of xml-commons.  Note that this is not blessed yet; that will come as soon as one outstanding issue has been resolved and I am able to tag a frozen version of this branch.
3562fee62 update the xml-apis jar to match the current state of the JAXP TCK-compliant branch of xml-commons.  Note that this is not blessed yet; that will come as soon as one outstanding issue has been resolved and I am able to tag a frozen version of this branch.
eff96d614 compile against the classes in xml-apis.jar instead of the APIs in our CVS source tree.  Updated all build targets to get sources from the new xml-apis--src.tar.gz; now we are ready to remove our APIs from CVS.  Also updated the build script to copy DOM and SAX license information into distributions.
24a8a8517 adding files to describe the licenses under which we are allowed to distribute DOM and SAX API sources/binaries
6ee66ab0b adding license info for the xml-apis--src.tar.gz file
7175ec5a7 CMNodeFactory should not be a singleton, since this could cause thread-safety issues.
31e3ae574 improve error message and the description of the new methods added to SecurityManager for the control of schema content model construction
2cbfc9360 For PIs the baseURI is lost if entity refs are expanded, instead a warning is issued. Modifying also DOMError interfaces to include "type" and "relatedData" fields
d2418aadf Modify DOMError interface to include "type" and "relatedData" fields
01d5b8340 this file is corrupt!
03468cf54 reintroduce source for xml-apis.jar.  Hopefully this will not become corrupt.
512cc757d but that failed too... Let us see if CVS understands zip files next time
a7198af08 with high hopes that CVS will not corrupt this zip file, here are the sources for xml-apis.jar once again.
89b1ecf07 since it seems that CVS does not understand tarballs, use a zip to store commons API source instead.  Also, update copyright info as it appears on the documentation etc.
935460533 at the suggestion of some people in Xalan-land, here is a sample xerces.properties to use, along with some directions on where to put it and why it might be useful.
73fe91acd Update XS API according to the erratum: E1-14 & E1-12
93260ea52 The latest "cleanup" is invalid per DOM spec... Notation interface represents notation decl from DTD (internal or external)
00f864047 Changes for Erratum E1-5: some rules concerning "Property mapping for complex type definitions with complex content" have changed.
3f7e6490c Small performance fix: if the number of particle is 0, we don't need to always create an array of length 0.
31a164cf1 Error code change as per Erratum E1-15.
da55074ec 1. Changes for Erratum E1-15: if derived CT is mixed, base must be too. 2. Error code change as per Erratum E1-15.
58623d118 Error code change as per Erratum E1-15.
b2a0ab608 Change Validatiy_unknown to validity_notknown
7ab7e50fb 1. Fixing some errors in the message file; 2. Proper error codes for circular references; 3. Error code change as per Erratum E1-23.
da91c5776 re-enable successful builds on SUN 1.4.x platforms.  This requires making sure our APIs are prepended to the bootclasspath, since the Sun JDKs contain a slightly different version of the HTML DOM than we do.
562f86aa3 re-enbale building under JDK 1.2.2
d2d4f44da fix some warnings issued when compiling under JDK 1.2.2
d47f880a9 More changes for E1-5: error code; an NPE introduced from a previous commit.
4bfdba2df Error code change as per Erratum E1-36.
db5ed21ec Fixing bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=16235
618e2dbf4 Error code change as per Erratum E1-39.
6986cf1dd Update the DOM documentation for the new release
0e12f1751 The SAX DeclHandler#attrDecl method requires no callback to be made for the second and subsequent declarations of attributes.  This patch fixes the parser so that it correctly implements that behaviour.
6cd6caa30 Additional fixes related the bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=16235
a874fb9e5 fix the "test" target
9402afd22 change default configuration from IntegratedParserConfiguration to XML11Configuration
54004f33b Enable XML 1.1 support by default.  Now, if the parser is presented with a document with the version pseudoattribute having a value of 1.1, it will parse it according to the XML 1.1 candidate recommendation. This was effected by changing the default configuration that the parser uses for SAX/DOM parser construction from IntegratedParserConfiguration to XML11Configuration.
87380dbd5 Pulling out the change for schema erratum E-16: The JAXP JCK is not updated for this erratum, but we need to pass it before the release. Will put the change back when the TCK is updated.
ad7a88690 Mark the interfaces as deprecated (next release those might move to another package)
7387e6e07 XNI API changes as per Andy's suggestion: 1. Augmentations: rename "clear" to "removeAllItems"; 2. NamespaceContext: clarify what the "reset()" method is responsible for; 3. XMLAttributes: add a new method "setAugmentations".
4e31e2a19 change getMapLength to getLength to be consistent with the rest collection interfaces. Also rename methods that were missed during the XS API change
c3e5e16e6 "validate" and "validate-if-schema" are mutually exclusive in the DOM
674ddc67b pull back recognition of XML 1.1 documents by default.  The performance of the code implementing this behaviour appeared to be unacceptable.
5254437c1 Update documentation before the release
b29768e26 Fixing an NPE. When applying default element values for elements with xsi:type, we only need to validate the string once (as oppose to twice when we traverse the element decl with value constraints, for the original lexical rep and the canonical one).
6f9e26a9d fix a problem with the signature of the SAX DefaultHandler#resolveEntity method.  This cannot throw an IOException under SAX 2.0
cbd91483d Update release info
f9508d741 Making the behavior of dynamic validation consistent: - Make it work as what the feature description says; - Make DTD and Schema validation work the same way. That is, when dynamic validation feature is on, dynamic validation always happens, in spite of the state of the validation feature.
a0c033ffd added a method needed by compareDocPosition
cab5b3b1b added initial impl for compareDocPosition
1b9ca1bd9 Removed setter methods from XMLLocator interface for finalization of XNI.
91a3b17e4 changes for compareDocumentPosition as per Oct public WD
1e68f7cb8 changed method sig. for compareDocumentPosition
f38393e86 added compareDocumentPosition
44335f3da make ObjectFactory cachec xerces.properties, refreshing it when necessary, in like manner to the FactoryFinder implementation we will be relying upon.
2d0105055 replace logic to reset the current entity character buffer after version detection by something which seems a good deal more correct.  It also allows the class to work properly when the source of characters is a character reader, rather than a byte stream.
0c710aad9 update release docs in preparation for 2.3.0
1cbf589cc final update of commons code; this incorporates the performance fix to cache jaxp.properties files, if present.  This code was generated from the Xerces-J_2_3_0 tag on the jaxp-tck-1_2_0 branch.
a75e6ed16 Update the release document.
bcffef472 documentation update for the upcoming release.
8f443e0ec reflect certain XNI changes in the docs
1124ca44d updated release info
344beca5a document newly-added interfaces in the xni.grammars package
ad0dcb5ed Fixed XMLLocator interface per mailing list discussion and updated implementation to comply.
d0213afea minor doc update to complete description of XMLLocator change
4e3f4927a Should initialize the datatypes when either validation or dynamic validation is turned on.
b2627c29b Should initialize the datatypes when either validation or dynamic validation is turned on.
6451eb438 update release number
125747d3b Update info about DOM l3
d0fd9a78b updated release plan
f92a23ae1 Updates to PSVI interfaces
e71a97d3e Delete "Changes from Previous Release" section
4957658e3 Fix for Javadoc that still stated the XMLLocator extended XMLResourceIdentifier.
8596b2c62 "getLexicalPattern" didn't give correct answer for "Name", "NCName", and "NMTOKEN" derived types.
689076f97 With the "XMLResourceIdentifier" interface being read/write now, we can write directly to it, instead of finding an instance of XMLResourceIdentifierImpl.
1d432d216 Fixing a class cast exception: actual values of list types are no longer of type Object[].
d87ded379 while adding default attribute from the DTD back (after removal) we must also copy a namespace from the attribute we are trying to remove.
f241a34b3 Updated the scanner implementation to NOT buffer when scanning CDATA sections. This enables Xerces to use less memory and be able to parse very large CDATA sections which would previously cause out-of-memory exceptions.
ac8930324 Fix for my fix. ;) Now both CDATA sections and processing instruction scanning works as expected.
969540b27 Update comment.
250dd66fe change reference to the dom package to a reference to the sax package in the SAX samples documentation.
82a56a447 fix security exceptions that result when the parser is run in an applet environment
61bb06e34 If the same entity reference used in the document more than once, we should only build entity definition when we *see* an entity reference the first time See non-deferred DOM implementation or Xerces1.
fa5da931b Value of attribute should take into consideration entity reference nodes (appended as children)
6a8fe0c3d some spelling/punctuation corrections; thanks to Steve Dulin
462e8414e Bug: it's an error if fractionDigits > base.totalDigits.
4fe557201 Bug in substitution group handling. All {derivation method}s and all {disallowed substitution}s should be considered.
219a1d566 Fixing an NPE: if the namespace list in a wildcard is empty, toString() shouldn't try to access the namespace array, because it's null in such case.
cc6667e5d get rid of unnecessary instanceof checks
17bab0b21 When a particle is empty, the min/max effective ranges should both be 0.
dba747cb5 1. Should combine the derivation methods (missed bit-or operation); 2. Need to deal with the special case of the base type of anySimpleType.
2127b8363 if the file containing the replacement text for an external parameter entity contained a text decl, the parser would go into an infinite loop; fixed.
329b3017b replace a superfluous string concatenation
c308b10ba Checking for DOM L1 nodes is done using localName instead of relying on colon. Local namespace binder now carries all the prefixes that have been printed out during namespace fixup of the current element. Add resetting of namespaceBinder in XMLSerializer and other fixes.
d6aef1d1f Remove reset() method, instead use reset present in XMLSerializer
30d162104 Checking for DOM L1 nodes is done using localName instead of relying on colon. Local namespace binder now carries all the local declaration that has been modified/added by the namespace algorithm.
500ef0611 Add tests (to check that serializer won't output multiple namespace declarations) and modify the output accordingly. See bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=16612
9dd190d68 We always attempt to find a prefix following the pattern "NS" +index (starting at 1). Previously we kept global namespace counter to find an index..
1a5cb000a XML 1.1 parsing would not work if the parser was being reused.
f0d7d0755 remove unnecessary data member
32706b447 SAX 2.0 conformance bug.  When a null DTDHandler, ContentHandler, ErrorHandler or EntityResolver is registered with the XMLReader, SAX 2.0 clearly requires an NPE to be thrown.  While this is at variance with both SAX 1 and SAX 2.0.1, to conform to SAX 2.0 this behaviour is necessary.
33a747ab7 Fixing a schema traversal: while deferring the traversal of local elements, we need to check the minOccurs value to make sure "emptiable particle" works fine.
4be20c189 when the normalize() method is invoked on a DocumentFragment object, Text/CDATA nodes must be coalesced just as they are with Elements.
b7505135f Erratum E1-27: a complex type with simple content *can* restrict another complex type with mixed content and an emptiable particle.
1f14684c7 Remove prohibited attributes *before* checking for valid restriction, otherwise prohibited attributes will make the restriction invalid.
e20c590ae Erratum E1-23: the definition of "substitution group" was changed so that some element declarations (those blocked by either the head or one of the type definitions) aren't in the substitution group anymore.
dcc2875b2 Xerces failed to report a fatal error on invalid QName. Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=15079.
09a925b33 Under some JDK's (notably both Sun and IBM 1.4.0), getClassLoader(), when invoked on the JAXP or SAX classes, it returns null.  This means that the fallback mechanism in these API's may not work correctly:  in particular, when an attempt to invoke an unknown Parser/XMLReader implementation is made in SAX, a NullPointerException rather than the correct ClassNotFoundException results.  This patch fixes this problem, by using Class.forName() in the event that the bootstrap classloader is not returned in this particular situation.
ed605a0e2 Synchronizing startDocument calls with the (not-so-recent) XNI change.  Thanks to Steven Dulin for discovering this problem
6de98ee3b removing API files made redundant now that the API jar (tools/xml-apis.jar) and source (tools/xml-apis--src.zip) are pulled from xml-commons
24a7a6cc4 Schema erratum E2-40: NaN in float and double equals itself, and isn't comparable with any other value.
631666259 Schema erratum E2-40: float and double types are partially ordered.
1ee7c6014 Schema erratum E2-36: length, minLength, maxLength facets have no effect on QName and NOTATION derived types.
8f0de0714 Fixing a schema traversal bug: for the following case <complexType> <sequence> <element minOccurs=maxOccurs=0 according to the spec, the complex type has element-only content (though it doesn't allow any element). We used to make it an empty content.
76f93c827 Fixing reference to the constants defined in the xni.NamespaceContext interfaces. Patch submitter: Ville Skytt�  (http://nagoya.apache.org/bugzilla/show_bug.cgi?id=12502)
b11ff2f56 Fixing "datatype-normalization" bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=16594
f98034ee1 fix for bug 16840; thanks to Jorg Pietschmann
bc3c07be9 Fix related to the datatype-normalization[1]  bug -- default content. [1] http://nagoya.apache.org/bugzilla/show_bug.cgi?id=16594
6f55d79f2 fix for bug 16674; thanks to Igor Malinin
cdfd152b7 release doc update
3574857d4 fixing bug 16714
91f003565 fix to bug 16509; thanks to Igor Malinin
056c030de amendment to fix for bug 16509
2d75d4b32 additional fix for bug 16674; thanks again to Igor Malinin
01efdc8c2 If namespace feature is off, we should issue an error when validating against XML Schema. Reorganizing IntegratedConfiguration configurePipeline() so that the namespace aware scanner is only used in the case namespace feature is turned on.
f905e13bf Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=17064 Patch submitter: Michael Glavassevich
a2465bb97 Bug fix: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=17152 This might be a temporary solution, in the long run we should see if XML Schema type information could be made serializable.
674aade6f Remove @deprecated flag -- since we have not provided any replacement interfaces we should not have deprecated existing ones. Instead, just have a warning that those interfaces might be updated or replaced.
7c4930748 Add testing serialization while validating against XML Schemas
54e90933e use XML schema in the test for java serialization
708fed364 Fixing bug 17286: NPE when toString is called on a model group with no particles.
3117ff4fc Fixing bug 17020: didn't report error on some invalid date/time literals.
a65338144 A potential NPE: actual value in a value constraint might be null (if the value constraint is invalid). Use stringValue() instead.
7a85162ef in anticipation to the DOM Level 3 Event spec support, we now call event listeners in the order in which they were registered
962208caf added output of getAttrChange() for DOMAttrModified events
e12b6dc4a added a call to setAttribute()
a0e601375 updated to the new Test and EventReporter
aea4f8a7e Schema erratum E2-38: some character blocks are removed. Many thanks to Khaled Noaman for the patch.
4fce99122 Canonical for QName types: we use the rawname as the canonical for now.
4c39dc89e 1. E1-23 was updated. The head's block is considered when determine the substitution group for an element declaration. 2. Fixing a bug in determining the substitution group.
95bca9b89 Fixing bug 17529: shouldn't be able to set totalDigits to 0.
1c3a76d5a Schema erratum E2-44: a clarification on totalDigits makes 0.1 to be valid for a type with totalDigits=1.
2cb72d219 when memory usage is enabled in this sample, the garbage collector should be explicitly run before the parse so that the statistics reflect the amount of memory the parse actually used, rather than that plus whatever was used by initial class loading etc.  The current code actually returns negative values for certain platforms; thanks to Steve Dulin for pointing this out.
070c091ac Fixing a bug in using the Schema Decl Pool. When a grammar is preparsed, even if there is no grammar pool, we still can't use a decl pool, because the application might store the grammar somewhere, and the decl objects shouldn't be recycled by the decl pool. Now the decl pool is only used when the schema loader is called by the schema validator, and no grammar pool is set.
61971fdf4 remove some unnecessary imports
00d97b243 Improve performance of XML11Configuration and make it the default one. The XMLVersionDetector is now only responsible for parsing the XML decl and reporting the version back to the configuration. The configuration job is to reset a pipeline in the case the document is XML1.1 document. The XMLVersionDetector is then called to reset the entity manager's scanner and start parsing of the document.
90e043475 Fixing bug 17414: \pL isn't a valid schema pattern regex value. Many thanks to Khaled Noaman for the patch.
70b3c80f8 fixing bug 15584.  Thanks to Michael Glavassevich for pointing out this bug in a SAX context; it was equally an XNI bug, however.
04c6fe8ef fixing bug 16706
e22d3821e Applying patch from Michael Glavassevich as well as fixing some import statements. http://nagoya.apache.org/bugzilla/show_bug.cgi?id=17385
bacf78298 fix for bug 17330
92505ef4d more complete fix for bug 16706; thanks to Navid Mehrigani for pointing out the previous fix did not handle all cases.
be1179267 Implemented whatCanGoHere in the schema content models. For now it's only used internally. If we ever want to expose such functionality, we might want to revisit the method signature.
250f5b633 Improve some of the schema error messages, to make it easier to understand.
2a4f777da Fixing bug 17412: ']' isn't a valid schema pattern regex value. Many thanks to Khaled Noaman for the patch.
8ebff4457 Fixing bug 17885: sometimes the member type definition in PSVI is not null when the type definition is not a simple type with union variety.
ea31e1955 Another bug was introduced when fixing 17885. Can't reset the content of ValidatedInfo when validate is called, because the normalizedValue will be used later. So we should only clear the memberType field.
4dd47aa7c Fixing bug 18034. Need to check whether there is anything unexpected between "second" and "time zone".
83686f6c9 fixing docs bug 17325
ed42ddaba Fixing range bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=17590
ccf8b21f0 Modify range testing to include in automatic build "test" target
aeb574868 add ranges testing
4dfbbd62a we were testing threads with DOM parser and no test were done on SAX one
4ab208754 permit DOM 3 samples to be built under (sun) JDK 1.4
061b61f30 Modified the Xerces DOM implementation according to the latest DOM L3 draft: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/
45a220073 Modified the DOM L3 tests according to the latest DOM L3 draft: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/
3b4899c52 Modified the DOM L3 sample according to the latest DOM L3 draft: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/
b7ce571bc Updated the build to take into account latest changes: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/
fc45ed6c3 Fix compilation under JDK 1.4 (compile against Xerces api.jar)
267bc48cc update release-preparation instructions so that they mention xml-commons dependencies
4a39a7286 Fixing bugs 16579, 16639,  and 16702: some invalid test cases concerning <redefine> weren't detected. Many thanks to Khaled Noaman for the patch. Also removed some unused imports and local variables.
2ac02c2c2 Fixed null pointer exception caused when no DTD handlers are registered with the parser.
5f6e47c3a Fix compilation under jdk 1.4.
3f9213013 Update DOM L3 Load and Save implementation according to the latest draft: http://www.w3.org/TR/2003/WD-DOM-Level-3-LS-20030226/
bdb26bd50 Add a sample implementation of DOMBuilderFilter
da656c264 update build to remove deleted dom l3 ls file from the jars-dom3 target
32263c840 rename assert methods to allow running under JDK 1.4 without warnings
f0aff20ed Given that AS module is not longer under development by the W3C mark Xerces AS implementation and interfaces as deprecated
2d116920e Given that AS module is not longer under development by the W3C mark Xerces AS sample as deprecated
11ecf7315 Undeprecating setNamespace() in XMLSerializer : http://nagoya.apache.org/bugzilla/show_bug.cgi?id=16103
7a54a61a2 Introducing 2 new methods on XMLResourceIdentifier, to get/set the namespace information, which is useful when the resource is some kind of namespace-aware grammar. Also re-organizing some import statements for readability, and removing some local variables that are never referenced.
c5c6df08c Updating the doc to reflect the addition of "namespace" to the XMLResourceIdentifier interface.
1bb518b07 Updating the release document.
7a189f88a Remove "xml11" target since Xerces supports XML 1.1 by default. Fix "dtdjars" and "dvjar" targets.
e995fbb66 Issue warnings for unsupported features
b647fb5ca Applying patch from Michael Glavassevich http://nagoya.apache.org/bugzilla/show_bug.cgi?id=17381
17092beed Applying patchesfrom Michael Glavassevich: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=17359 Also, made some renamed some FAQs to avoid truncation...
cbfbaa1c2 Fixing spelling errors in the message property file.
218c54d8d Fixing bugs 17417: Regex {min,max} with min > max not rejected. Many thanks to Khaled Noaman for the patch.
e4d524aa8 Fixing bugs 16563: Parser accepts invalid regular expression. Many thanks to Khaled Noaman for the patch.
a2bdc54fa Fixing a bug for PSVI. Schema document locations weren't correctly reported. Many thanks to Stef Epardaud for reporting the bug and the proposed patch.
f6fbb6219 Fixing bugs 17415: Regexes with large min/max not handled correctly. Many thanks to Khaled Noaman for the patch.
719202c7e Change the default parser configuration to the one that supports XML 1.1.
31166d04b added support for ordering disconnected nodes - needed for compareDocumentPosition
9c3b3b787 Make the schema limitation page in the docs up-to-date.
23c34ae1b Update dom3 and release docs
7672f9f9f in preparation for a new release - change version of the parser
9ad208aaf Remove broken link
6a441b116 XNI change:  add getEncoding():  String to XMLLocator interface as per list discussion
0a8172821 implementation of XNI change (addition of getEncoding to XMLLocator)
d4b05ea72 document XNI change (addition of getEncoding to XMLLocator) and describe how to make use of it in a SAX context
eb82a0dfe update sample xerces.properties to reflect new default configuration
ff65b093d add manifest info after the manner of xml-commons.  Should fix bug 9345
f26892b2a Adding bugzilla documentation
674e82c9b Taking changes out as per consensus on mailing list.
22f18d5fd Update according to the latest in xml-commons (tag 'Xerces-J_2_4_0')
52e3394c2 Add a new public key
d53c6bfef add tests for external-schema location. Submitter: Khaled Noaman
4f6014bf5 typo
69fd26e99 Fix the EOFException in the case of parsing an empty file.
a35990110 fix thread safety problem
3b1c3bea5 patch from Michael Glavassevich to fix a typo in docs.
d9741d06d include manifest.xerces in the source distribution; if it is not present a build failure results.  Tanks to Neil Delima
fd4b34e58 Fixing a bug in dateTime comparison algorithem. Sometimes 2 values aren't comparable if one has time zone and the other one doesn't.
7392bd92a Fixing bugs 18603: schema default value returned from attribute PSVI wasn't correct.
67d09fcc3 The first step towards improving the performance of the deferred DOM. Instead of setting the value of each entry in the array, use the system array copy method.
7e9d0dcd8 Fix for bug 17294. Thanks to Venugopal for the patch.
68f99c5a3 Changing the parameter order while calling and in error messages as suggested by Glenn. We should take care of it in future too so as the standard of " all attribute errors have the element name as the {0} parameter and the attribute name as the {1} parameter and any *additional* parameters occur after these. " is maintained.
c0f71ab26 Fixing bug [18677]: wrong error message.
996accd04 formerly, if the parser received an arbitrarily long sequence of ] in a CDATA section, an internal buffer in the document scanner would grow without bound.  Thanks to Michael Glavassevich, this is now fixed.
afa64b309 make samples use same default configuration as the parser itself
dbf803b04 fix to XML 1.1 attribute normalization.  Thanks to Michael Glavassevich
37bca1084 Unicode characters 0x85 and 0x2028 are not part of the S production in XML 1.1. Thanks to Michael Glavassevich for pointing this out.  Also, Michael pointed out that the original code incorrectly implemented the spec's normalization provisions with respect to 0x0d 0x85. Thanks to Michael for providing a partial patch to fix this latter problem.
d4a1bf869 Running the xni.XMLGrammarBuilder  throws NPE in Integrated configuration since the document handler is set to null but configuraition attempting to access it.
7909c1887 Fix for bug 18937. Thanks Venu for the patch.
7f22b0ecc Fixing a bug: should create new arrays for each type of component.
2a31910c4 Given that differnt platforms have different default code pages, we need to specify code page while attempting reading ASCII HTMLEntities.res file.
54221eb23 fix the STDeclInvalid message so that a meaningful value is printed out instead of a placeholder.  Thanks to Neil Delima.
bc55bdb0a Sometimes we failed to read included/redefined documents, if they are provided in the form of byte or character streams, by no system Id is specified in the input source. Fixed now.
facde1e3e Some error message fixups.
4ed0f8af6 Fix for bug 19107. Thanks to Venu for the patch.
0ca9dc409 Fix for bug 19211. Thanks to Venugopal for the patch.
02a532332 Removing unused imports in the dom package
672a0010a reference correctly static fields
635e631a8 Access correctly static fields
761b09f35 Access static method in a static way
0ef3062a0 Access static method/fields in a static way
10834ce3c Removing unused import statements and accessing static method/fields in a static way
e8ce517d3 Removing unused import statements.
17ae255ae Fixing potential NPEs: 1. Sometimes a complex type has "simple" content, but its simple type is null; 2. Sometimes a complex type has a null base type (in error situation); 3. Sometimes an element has a null name (in error situation); 4. Sometimes an attribute has a null name (in error situation).
67a5e5234 Remove redundant imports
9258bafd4 The predefined entity quot should only be used in attribute values. It should not be used in character data. Applying patch thanks to Ias ( iasandcb@apache-korea.org)
c0d213a8e Fixing one infinite loop after fatal error.
477a1c00b Fix dom3 target
44c7938a9 For particle restriction checking, don't emit an error when the restriction is empty and the base is element-only with an emptiable particle
8512ab26f Fixing a bug: whitespace normalization didn't work properly for "collapse", if the first chunk contains only whitespaces, and the second chunk starts with a whitespace
eae092609 remove *deprecated* for PSVI api
5f8a9d820 Fixing bug in textContent (it should not return null for element.getTextContent). This fixes the following bug reported for normalizeDocument: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=20172
2b534cd20 Add tests to textContent
62146e091 Applying patch from Michael Glavassevich (Document.standalone): http://nagoya.apache.org/bugzilla/show_bug.cgi?id=20245
45845cc4c Fixing a typo in serializer, thanks to Michael Glavassevich: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=20248
a4d2168d2 The DOM schema-location property was not mapped correctly to the JAXP schemaSource we should use array of Objects if more than one schema is specified. See: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=19106
fa8eda996 Fix code for handling JAXP schema-source property. Given that target namespaces are not specified, when we load schemas XSDDescriptions do not have a target namespace set. Therefore, we should not attempt to find a schema in the local cache first, because if a schema with no namespace was loaded first, findSchema method will always find no namespace schema for any attemp to load more schemas. This is realated to the following bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=19106
c64e6c5b0 Add tests for JAXP schemaSource property
66d596ac1 Run test for JAXP schemaSource property
0f4d50691 Committing the patch for bug 17294. Lot of thanks to Venu for providing patches to long pending issue.
7b7d8ca31 Fixing bug: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=18374
5591d70b1 PR: Obtained from: Submitted by:Venugopal	k.venugopal@sun.com Reviewed by:Neeraj Adding new Test case for testing JAXP 1.2 specification constraints as submitted by Venugopal. Many thanks to Venu for this contribution.
e1ef650aa PR: Obtained from: Submitted by: Venugopal k.venugopal@sun.com Reviewed by:Neeraj Adding new Test case for testing JAXP 1.2 specification constraints as submitted by Venugopal. Many thanks to Venu for this contribution.
084a84781 PR: Obtained from: Submitted by: Reviewed by: Adding Apache copyright license.
6a84aba2f Applying patches from Venu (k.venugopal@sun.com) for bugs 20429 and 20431
2ae848000 add a scanNCName function which may be used to scan names which are known must be NCNames
8a67cf054 fix non-conformance to namespaces (1.0 and 1.1) with respect to ENTITY/NOTATION/PI names
c0c9dd0c7 in order to be namespace-valid, attributes of type ID/IDREF/IDREFS must be NCNames.  Thus, ValidationContext must be able to describe whether namespace processing is enabled.
14ebac925 when namespaces are enabled, we will now honour the namespace-validity constraint that states that attributes of type ID/IDREF/IDREFS must be NCNames
e8b504751 updating error messages
fe819f6b5 fix entity-reading bug created by previous commit
8eddf8658 Fixing setParameter/canSetParameter: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=20636
a50aae62c Fix a small bug in the latest commit
7744fa754 Add constants for new DOM L3 features
25d21955b Remove dom3 interfaces before update to the Last Call version
fa5a38704 Update to the DOM level 3 Last Call version
1a6b251cd Sink up with the DOM Level 3 Core Last Call interfaces. Also add a hook to support XPath DOM API if Xalan implementation can be found in the classpath.
e8443a706 Remove duplicate interfaces for DOM L3 support
103b0ca57 Remove class that no longer exists
4181dfd44 Update according to the latest DOM L3 draft
ed59d96c3 fix for bug #9102.  This assumes that, in JDK 1.4, ISO8859_15 is an alias for ISO8859_15_FDIS.  This seems like a safe assumption, so this should fix the problem in 1.3.x and have no ramifications for 1.4.x users
e92b187dc now that we have used a DTM for schema-document parsing for a long time, there is no longer a need to maintain the old DOM-based code.  Removing it, along with the references to it in XSDHandler.
fab1289c8 Updating copyright to '1999-2003', and simultaneously checking that I can 'cvs commit'.
249e35800 E2-41 and E2-45: allowing 24:00:00.
ac8977e43 XML Schema support: Balance the syntax tree to improve the reliability and performance of the parser.
68c36ca7f StackOverflowException isn't likely to be thrown anymore.
82dfc1a0c A performance improvement for UTF8 scanning.
a72c9be28 Based on Glenn's suggestion, fixing a bug which allowed invalid ASCII bytes to slip through the reader.
3480794c8 Improved language of InvalidASCII error message.
3a2854003 change order of constant declarations to match comments
75315f10d first step towards support for exposing XML Schema annotation components.
5537ef44a Fix 2 related bugs:
ffe5345ae pass non-schema attributes of complexType children to the annotation traverser
841a54345 Fixing 2 bugs: 1) Bugzilla# 18429, NPE thrown validating NMTOKEN. Thanks to Neil Delima for the patch. 2) S production is unchanged in XML 1.1, so shouldn't override isSpace()
d6e418eec Fixing a bug introduced by a previous commit when trying to balance the syntax tree.
08452497d Committing the patches proposed by Peter McCracken. These patches provide more useful information for schema errors. Thx for the good work, Peter!
8c70948b5 Schema erratum E2-13: it's an error for fraction digits in the derived type to be greater than that in the base type.
dc5b2f932 update to use new error schema for schema error message
a8584d331 just as complexType definitions can possess multiple annotations, so can simpleType definitions.  It appears that there is a bug in the schema specs that only gives one annotation component to simpleTypes.  Fixing this problem in our schema component API as a prelude to full annotation support
f42be5538 ensure that annotations are passed to all components that may possess them.
42ca322ea as part of annotation support, enabling schema datatype factories to create XSSimpleType implementations containing lists of annotations
4a57b692a add annotation support to simple types
d9038f9f5 add a method to reset an XSObjectList implementation
b80a7e725 Change to PSVI API -- adding a way to retrieve facets as objects, to allow users access to annotations
092c5a303 The preliminary implementation of XInclude submitted by Peter McCracken. It supports most normal functions: regular includes, text includes, fallbacks, namespace fix-up, etc, and it should be okay for regular use.
860cadc84 Preliminary support for XInclude submitted by Peter McCracken. It supports: regular/text includes, fallbacks, namespace fix-up, etc...
2a38eb580 Fixing bug 21038: when an identity constraint field is invalid, sometimes we add the same IDValue to the hashtable again and again, leading the parser into infinite loop.
f12ae9649 rename recently-introduced method to more appropriately reflect what it does
06d60a448 add representations of annotations as Text-node children to the first child of an annotation element.  The complete annotation is stored as a string, with all in-scope namespaces from ancestor elements.  This allows for minimal schema-correctness checking in the schema-parsing code, while giving the annotation implementation full access to a representation of what was included in the schema
7050c3b44 change visibility of data member to make annotation implementation easier
8d1ad1743 as part of the annotation implementation, need to pass SymbolTable to the SchemaGrammar constructor; also, need to allow for GrammarBucket queries
1147949fe expose annotations in the PSVI.  Now the XSAnnotation implementation is complete (though probably not yet bug-free)
9dd86cacc remove some debugging code
5183ecb6f Remove extra semicolon to fix GUMP failure.
d1fd0668a Fixing bug in HTML DOM (http://nagoya.apache.org/bugzilla/show_bug.cgi?id=18744). Deletion of rows other than row 0 were failing siliently.
30a0bfa09 as made clear by Xalan bug #21300, we should recognize the KS_C_5601-1987 encoding.  This is now fixed.
294d2838f Fixing #18597, AIOOBE thrown for invalid char refs of the form &#; &#x; &#2147483648 (and every other 'codepoint' > 2^31-1).
8621ebda7 Fixed 16566, 18320, 18344, 18345, 18776, 18780, 18782, 18785 (partial).
b47a66d57 Fixing "illegal unicode escape" error so that it compiles with JDK 1.4.2.
4dbea2366 Added a necessary constraint not expressed by the BNF. IPv4 addresses are 32-bit. Each segment contains 8-bits of information, and thus each one cannot be greater than 255.
74a9afc87 Added a necessary constraint not expressed by the BNF. RFC 2396 states that hostnames take the form described in RFC 1034 and RFC 1123. According to RFC 1034, hostnames are limited to 255 chars.
d3457eaeb Recognize ISO-8859-13 (Java supports this encoding), and Latin-9, a registered alias of ISO-8859-15.
5cd5db648 Added ISO-8859-13 & ISO-8859-15 to list of supported encodings. Improved the language in one of the FAQs. Replaced mention of xmlParserAPIs.jar with xml-apis.jar since the former is deprecated.
6ea37a698 Replaced instances of xmlParserAPIs.jar with xml-apis.jar. Documented the deprecation of xmlParserAPIs.jar. Capitalized each occurence of Xerces, Xalan, and Ant.
9b3fac190 Use English locale when converting to upper case, otherwise we might not get the behaviour we expect. In the Turkish locale, letter i (#x69) maps to I with a dot above (#x130).
f31aac620 XInclude implementation update: * Couple of bugs fixes, copyright date updates (Peter McCracken) * XIncludeHandler is now using EntityResover and structure of text inclusions has changed. (Peter McCracken) * Implementation for determining the encoding of  included documents when  parse="text". Encoding is determined  as per  section 4.3 of XInclude spec (Arun Yadav) * Support for unparsed entities and notations (Peter McCracken) * Introduce a new features "allow-dtd-events-after-endDTD" that controls sending unparsed entity declaration and notation declaration events outside of start/end DTD events. (Peter McCracken)
da200a5bd More fixes to the URI implementation. Using the definition of IPv6 addresses from section 2.2 of RFC 2373, since the BNF in Appendix B is incorrect. Labels in hostnames must be <= 63 chars.
896f4f41a Build Javadocs for XInclude implementation.
b09947c37 Fixing dom-jar3 target.
a5d2ca244 Provide a way in the implementation to construct an XSModel that corresponds to all the schema grammars in the grammar pool implementation.
a23577d97 Making changes to recognize DOM L3 wellformed-ness feature.
1b20fdfd0 Store and expose annotation for simpleTypes and facets. Add a new interface to represent enumeration and pattern facets.
7444273e5 Add a new facet to store enumeration and patterns
4ba026d16 Well-formed feature could be both true or false. For ex. currently DOMWriter/DOMSerializer doesn't check for well-formedness when serializing and sets the value of this feature to false. Still need to make changes in  DOMBuilderImpl.java for "well-formed". Will work on it tomorrow.
9b3fb44e9 Fix a small bug in exposing pattern annotation.
5202b9bcc inherit annotations for pattern facet from the base type
dd3374a88 inherit annotations for pattern facet from the base type
06cfee408 fixes for various small bugs (potential NPEs, problems in certain situations with well-formedness of annotation strings) in our PSVI/schema component model support.  Patches by Peter McCracken.
109adfc06 updates to PSVIWriter by Peter McCracken.  Now it outputs the entirety ot the PSVI as well as exercising our entire schema component model API.  It also outputs to a stream of XNI events rather than to a hardcoded XML file.
7c0e99949 documentation update to reflect the change in PSVIWriter from outputing to a hardcoded XML file to a stream of XNI events; thanks to Peter McCracken
41ff257df Upgrade to SAX 2.0.1 (sax2r2)
6cfd8cf05 Fix endless loop after continue-after-fatal-error is set to true: bug #18271.
ffa944be9 Fix a problem when searching for the port boundary. Do not accept any index before the beginning of the host.
250758cd1 DOMBuilder always checks for well-formedness. Doing appropriate changes so that default parameter value is 'true' and setting to 'false' is not allowed.
7f75e0afa PR: Obtained from: Submitted by: Reviewed by: Setting the default value to 'false'. We only support the 'true' value in DOMBuilder which is taken care in DOMBuilderImpl.
2c3c54c00 fix for bug 18789; thanks to Neil Delima for the patch
e7930233e the fix to bug 18789 exposed another bug in the XML 1.1 implementation:  For comments and processing instructions, we permittted control characters to be present, unescaped. This commit should resolve that bug.
185dda375 fix for bug 20892; thanks to Peter McCracken for the report and the fix.
e7911237f Fix reset problem: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=18272
ab02b893f Fixing reset problem -- after XML 1.1. was parsed sometimes we did not reset property dtd scanner and processor.
f7946fc84 An additional error message is needed for unsupported versions of XML. The  XML 1.1 scanners were incorrectly reporting that only 1.0 is supported.
90191a5d2 Added a VersionNotSupported message key for  XML 1.1.
6d6af344f Fixing a possible NPE exception in the case QName is invalid.
2c48bc35f Added missing Apache license.
65abf614a fixing some minor bugs in the PSVIWriter; thanks to Peter McCracken for the patch.
f4e78cd4e Fixing some bugs in XInclude implementation. Submitter: Peter McCracken
215d99d9b Commit the tests for XInclude implementation. Submitter: Peter McCracken
b41fdaf2a Automate tests for XInclude. Submitter: Peter McCracken
70fb5bec0 update the release doc
68f168043 Performance patch by Thomas DeWeese from Apache Batik: the patch makes XMLStringBuffer use array doubling instead of a fixed 32 char increment. For one of Batik test files with a 500Kb embedded image, this patch reduces parse time from ~4.5min to .8 sec (n*log(n) is much better than n^2). This is not even a particularly extreme case for SVG.
35ef0dad7 Updating the release document, and fixing some typos.
91575a9a3 Patch from Neil Delima: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=18678 Reviewed by Peter McCracken.
4fd18e26b Patch from Neil Delima: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=18676 Reviewed by Peter McCracken.
8f8aa2e55 Document updates for the new release
9bda70e5d Applying patches to upgrade to latest DOM L3 LS draft. Thanks Gopal.
770731686 Applying patches to upgrade to latest DOM L3 LS draft. Thanks Gopal.
c77db9d93   Applying patches to upgrade to latest DOM L3 LS draft. Thanks Gopal.   DOMBuilderImpl.java is changed to DOMParserImpl.java   DOMWriterImpl.java is changed to DOMSerializerImpl.java
9506fc092 PR: Obtained from: Submitted by: Reviewed by: Correctin build failures. Now the build compiles sucessfully.
79c6beb9d Additional docs for Xinclude FAQ.
dd491607c Apply patch by Peter McCracken: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=21966
8cce80b73 Remove reduntant methods (no longer supported by DOM L3 LS) as well as fix implementation of write* methods to use reflection API to allow to compile this code with the DOM L2 implementation.
1ff852ed5 Reverse the upgrade to SAX 2.0.1 which caused some TCK failures. Plan to upgrade to SAX 2.0.1 in the next release
4823fe556 fixing several small bugs in the PSVIWriter, found and fixed by Peter McCracken.
cbf7e95f9 According to the latest spec, version can never be null
fbacc46da Add UID (serialver): http://nagoya.apache.org/bugzilla/show_bug.cgi?id=17815
e46955ebc Preparation for the new Xerces release
f1fd1ae87 Preparation for the new Xerces release: update docs
0839312fc The latest change has broken dtdjars target. Reversing it to fix dtdjars.
e0b32461b Adding ability to convert all grammars in the XMLGrammarPool to XSModel.
b80ce51b7 Fixing dtdjars and dvjar targets
ba26fd207 We don't have tinyjars target anymore
dd6f59335 For dtdjars need to extract sources for the API before compiling
1db601908 We meet all the requirements of setting 'infoset' value to true when loading the DOM. So, Changing the default value of 'infoset' feature to true.
b7730059c Fixing a typo.
5792c242a Fixing Bug #20363, incorporates fix for XML SE E20. http://nagoya.apache.org/bugzilla/show_bug.cgi?id=20363.
c43ec4ad8 Committing the patch from Peter McCracken to avoid potential NPE's.
efbb8ee3b Errata for XML 1.0 Second edition: this fixes E15.1, (elements declared to be EMPTY in the DTD cannot have comments, PIs or entity references), E15.2 (character references to whitespace are not allowed when the elements are declared to have child content), E27 and E2 (Validity constraint: No duplicate tokens)
d179bfef6 fix for bug 22531; thanks to Peter McCracken
64506d6df Errata fo XML 1.0  Second Edition: E43 (partial): the base URI is the URI of the resource after all redirection has occurred.
a8a7f80ee Fixing E2: Check uniqueness of enum lists when attdecl is validated instead of once for each instance in the document. Before, a list may have been checked none or many times.
406182b84 Improve MSG_DISTINCT_TOKENS_IN_ENUMERATION and MSG_DISTINCT_NOTATION_IN_ENUMERATION for users by providing information specific to the invalid attribute declaration.
e51b2e4db Errata for XML 1.0 Second edition: This fixes E20 for attribute default values.
c6792a651 Fixed bug in HTML DOM implementation that would cause a hierarchy request error because it was trying to move all of the document node children to be children of the <html> node. But this is not desired behavior and actually causes a problem when trying to move the doctype node.
261fa63e7 Fixing various bugs involving NEL and LSEP. In some cases they were treated as spaces in internal entities, and in others they were not normalized to LF in external entities.
6a1bd30c0 Fixing #22871: The rawname parameter in some error messages was null because the variable was only set if the DTD validator was removed from the pipeline.
cb6044e00 Support printing of XML 1.1 documents, CDATA sections, and print space and end of line characters appearing in content so that they can be roundtripped. Fixed a bug with escaping characters in comments.
2c10d7a73 Support printing of XML 1.1 documents, comments, and print space and end of line characters appearing in content so that they can be roundtripped. Fixed a bug with printing null system IDs in DOCTYPE.
2969451c3 Bug: Incorrect locator info was reported for errors in 1.1 external entities. The locator must be replaced in the error reporter before parsing with the current entity scanner.
03998cfb7 Fixes: Ensure we have a message formatter, and that the locator for the error reporter is the current entity scanner. Errors reported had garbled messages and no locator info.
9caa3ca87 Initialize external entity features to their default values. Defaults were only written when this component was reset. This allows external PEs to be read when a DTD is preparsed.
fc8f3a942 Fixing potential NullPointerException.
996e2fa28 In anticipation of J2SE 1.5, replace all occurences where enum has been used as the name in a local variable, with a new and appropriate name. In J2SE 1.5, enum has become a keyword. Making these changes should prevent potential compilation problems when J2SE 1.5 becomes available.
69d04560f In anticipation of J2SE 1.5, replace all occurences where enum has been used as the name in a local variable, with a new and appropriate name. In J2SE 1.5, enum has become a keyword. Making these changes should prevent potential compilation problems when J2SE 1.5 becomes available.
0bda873da Reorganization of Identity constraint code that improves performance of schema validation. Some initial testing showed that for smaller documents (2K) with IDC support schema validation improves by 7%, for larger documents (10K) - up to 30%. Main changes are * removing reduntant data passed in the interfaces between XMLSchemaValidator and IDC support * changing data structures for IDC in XMLSchemaValidator: removing OrderedHashtable * storing actual values in the IDC code, previously the values were recomputed.
9948792be The URI grammar is ambiguous concerning whether or not a URI contains a net path or absolute path. Two slashes means we may have authority, but definitely means we're either matching net_path or abs_path. Every net_path is an abs_path.
a5ec84214 Fixed 18779: We now support registry based naming authority.
db2131ea7 Fixing a typo in the XInclude documentation.
0c2e775e6 Update the release document.
c9a9bf19a Expected output from XInclude test harness. Submitted by Peter McCracken.
b71bf88d5 Added XInclude tests for xml:base. Submitted by Peter McCracken.
818e2dbfd Additional clean up for identity constraint code: removing parameter that is not used.
64b8a75ab Adding a specialized document scanner and DTD validator for namepace binding of XML 1.1 documents. This was inspired by the improvement that was gained from a similar change for XML 1.0.
d954abe66 Fixing indentation.
44d8a61f1 Adding specialized document scanner and DTD validator to the configuration for improving performance of namespace processing. When namespace processing is enabled, these components are added to the pipeline. They are responsible for binding namespaces; replacing the role of the NamespaceBinder.
34e1452e5 removed code tag which was invalid.
8029a90c8 Removed emph tag which was invalid.
d19552c5e Removed character that made the document poorly formed.
a0dd01c17 Added download.xml for mirrors download and updated dtd/stylesheet to deal with this.
5c2a81050 Fixing potential NPEs.
36ea6f1b1 Improved processing of attribute lists both small and large in many ways. Take advantage of the SymbolTable and always use reference comparison when checking names.
213320a9d After loading a DTD grammar the streams opened by the parser need to be closed.
0db64b7ea Fix an infinite loop when processing a DOCTYPE that appears where content is expected. This problem only occurs when continue-after-fatal-error is set to true.
3e3205357 Improve the language used in the DoctypeIllegalInContent message.
66dfbfbf7 Nonterminal S is unchanged in XML 1.1, so NEL (0x85) and LSEP (0x2028) are not space characters.
b5fda1b1f Add a method which returns the integer value of the element at a given depth in the stack. This method is used by the XInclude implementation. Submitted by Peter McCracken.
2eff3ea68 A very large update to the XInclude implementation. Submitted by Peter McCracken.
41e85b16a Some changes to the XInclude test harness submitted by Peter McCracken. The changes include new tests for xml:base, and checking against expected output.
6b3e2d72f Some cleanup.
c53504004 These classes no longer have any use, since the error reporter is consistently used by XIncludeHandler.
9931bc78e Update the release doc.
a34f2123b Update to reflect the FAQ to reflect that XML Base is now supported by the XInclude implementation.
746773c29 Remove redundant check for XML 1.0 well-formness (the check is now done in ElementNSImpl)
0070797a8 Fixing potential AIOOBEs and NPEs that can occur when the continue-after-fatal-error feature is set to true, and an attribute specification contains duplicate names.
645ed94f7 Fixing Bug #24113 reported by Ville Skytt�, as well a few other issues. We need to fill in the version and vendor information ourselves because Ant will write itself as the creator if not specified.
fdd6bcec5 Fixing Bug #24113 reported by Ville Skytt�. Replace hard coded 'Created-By' with tokens to be replaced by a filter for version and vendor. Also include the version of Ant used to build Xerces.
0ae384e1c Fixing Bug #23947. There were some typos in the message for e-props-correct.4. Patch submitted by Gareth Reakes.
af28e8145 PR: Obtained from: Submitted by: Reviewed by:
e1631937d Fixing another bug. The method Node.getBaseURI() returns null in case when the base URI is defined by the attribute 'xml:base' in a root element. Absolute base URI is computed according to XML Base (http://www.w3.org/TR/xmlbase/#granularity) 1.the base URI specified by an xml:base attribute on the element, if one exists 2.the base URI of the element's parent element within the document or external entity, if one exists, otherwise 3.the base URI of the document entity or external entity containing the element.
97ffc9c22 Fixing another bug. canSetParameter returns 'true' if the parameter could be successfully set to the specified value, or false if the parameter is not recognized or the requested value is not supported. This method does not throw DOMException.
39bb7f6f5 Fixing another bug. NullPointerException was thrown with following call. implementation.createDocument("http://xxx.xxx", null, null);
51bb056f7 Fixing baseURI problem in ElementNSImpl.java too. The method Node.getBaseURI() returns null in case when   the base URI is defined by the attribute 'xml:base' in a root element.   Absolute base URI is computed according to XML Base (http://www.w3.org/TR/xmlbase/#granularity)   1.the base URI specified by an xml:base attribute on the element, if one exists   2.the base URI of the element's parent element within the document or external entity, if one exists, otherwise   3.the base URI of the document entity or external entity containing the element.
01271955b Fixing another bug. The method Document.adoptNode() throws NullPointerException in case when an attribute node is adopted
1c8ef96b7 PR: Obtained from: Submitted by: Reviewed by:
6b6321e66 PR: Obtained from: Submitted by: Reviewed by:
c3fd640c8 Performance: Reduce object creation by reusing temp QName (already available) instead of creating a new one for each element declaration.
a3c5b7f92 Fixing Bugzilla #22482. http://nagoya.apache.org/bugzilla/show_bug.cgi?id=22482
5624df5a9 Fixing Bug #21568. Patch submitted by Peter McCracken. Document.getOwnerDocument() always returns null. Compare node against 'this' instead.
3885b90f9 Description : DOMInput.setEncoding should take priority when DOMInput has bytestream. 	 Also changed UTF-16 encoding for java.
8d709194c Fixing a bug. <?xml versions="1.0"?> was being accepted by the parser because we were trying to consume the '=' after 'version' without checking if it actually was one.
afab8d34f Fixing Bug #21625. Patch submitted by Neil Delima. In several methods INVALID_STATE_ERR was not being raised after detach() was invoked on the Range.
576531aa1 Update copyright.
dd7fe6670 Fixing Bug #22329. Patch submitted by Neil Delima. This implements DOM L2 Ranges Errata - range-1. Also fixed up some typos in the Apache license.
39891239b Description : When  attribute is not declared , mark the attribute type to null. Refer TypeInfo interface DOM core L3 spec.
987abb1bc Description : When  attribute is not declared , mark the attribute type to null. Refer TypeInfo interface DOM L3 core  spec. Dependant files : XMLDTDValidator.java
1d86ce70d Update the release doc.
e879c679d Description : When  attribute is not declared , mark the attribute type to null.   Refer TypeInfo interface DOM L3 core  spec.   Dependant files : XMLDTDValidator.java,AbstractDOMParser.java
6956372f4 backed out changes
2eb2d6fed Backed out changes
b49f9d6b0 Fixing Bug #20304: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=20304
b1956e92c Fixing another bug. NOT_SUPPORTED_ERR: Raised if the version is set to a value that is not supported by this Document. We only support XML version 1.0 and 1.1
60ac71aac Fixing a bug which seems to have arisen from factoring entity scanner out from the entity manager several releases ago.
ef0215d9d Fixing compilation error in the previous commit.
e8e4f31d5 During addition of recognized properties/features from the component we should only add these the main vectors and not try to propagate to all components.
3601a42c6 XInclude experimental prototype should only work with XML 1.0 for now.
15be78a04 remove debug (fails to compile)
1b5399838 update KEYS file with public key as newly-signed by two other Apache-ites
b1763a7c6 Fixing a bug: We should be checking value that is passed
0742de94d Fixing NPE: setXMLVersion can't accept null values
71f188a87 Re-implement XML11Configuration:
0702a3bf2 PR: Obtained from: Submitted by: Reviewed by: Fixing NPE.
1364f7415 PR: Obtained from: Submitted by: Reviewed by: Debug value got changed. changing it back to off.
e300b3dd8 Define parser-settings constant in the base class since it is used by all subclassing configurations
9abc68a83 Disallow setting interna/parser-settings feature by the user. This is a special feature that only configuration is allowed to set. Improve a bit XML 1.1. parsing -- don't create non-namespace aware scanners unless those are needed.
20d68861b Disallow setting interna/parser-settings feature by the user. Make sure the interna/parser-settings feature is recognized by all configurations
88142b1bc Improve a bit performance of NonValidatingConfiguration -- so it recognizes the special internal/parser-settings feature.
676e8ddd1 Re-use schema parser.
06a32cb43 Fixing a couple of bugs:
f3fcb8b56 Fixing Bug #22471. Patch submitted by Amit Kapoor. http://nagoya.apache.org/bugzilla/show_bug.cgi?id=22471
43ed6e4a4 Fixing Bug #22471. Patch submitted by Amit Kapoor. http://nagoya.apache.org/bugzilla/show_bug.cgi?id=22471
a2399e3ea add one more key signature
25d087d7f Fixed several  bugs with text inclusion. Most notably we weren't reporting errors for invalid characters, nor were we using the encoding map to lookup java encoding names.
15039bb63 We weren't checking either of the UniqueNotationName or NoNotationOnEmptyElement VCs. Thanks to Neil Delima for the patch for UniqueNotationName.
b40d2ba5c Added error messages for NoNotationOnEmptyElement and UniqueNotationName validity constraints. Thanks to Neil Delima for the patch for UniqueNotationName.
ee98283c8 check for valid name/qualified name as per xml version. more to be checked in.
6c3cd5060 Format code. Same has been done in previous checkin.
0d6e9bbe4 Description : Merging sources from  jaxp-1_3_0-04 tag in  main branch .
f1b40ca0c Added function to check if the document version was changed.. this would be useful for DOMNormalizer to optimize name rules checks . We should be checking names only when the document version changed at some point.
0182db303 Committing the PSVI Writer patch propsed by Pete Lloyd. Thx Pete.
50e63402f Committing the PSVI Writer patch propsed by Pete Lloyd, with minor modifications. Thx Pete.
757d94a71 We were using wrong some error codes.
6c6521e77 Fixing facet-related methods on simple type definition, to return correct values for pattern and fractionDigits when the type is derived from NMTOKEN, NAME,NCNAME, or integer.
50f147e3b Make information about whether an attribute was declared by attaching this information to its augmentations. Absence of this property means that the attribute was not declared.
63ec7b990 For DOM Level 3 TypeInfo, if an attribute was not declared in the DTD, its type name is null. Using new augmentations property "ATTRIBUTE_DECLARED" to propogate this information to the DOM Attr.
e9166324f I missed DefferredDOM on the last commit. Also, if the attribute wasn't declared, then there's no reason to lookup its type from XMLAttributes.
0f3d71ad7 More PSVI related fixes. We didn't have proper final/block values on element and complex declarations.
e784d8248 Thanks to Kohsuke Kawaguchi for the patch .
060d846ff PSVI API changes. Step 1: Move classes from packages org.apache.xerces.impl.xs.psvi and org.apache.xercex.xni.psvi to org.apache.xerces.xs.
64302db91 Fixing some NPEs from the previous commit.
ee02ba85b PSVI API changes. Step 2: - Updated some doucmentation - Added interfaces for loading XSModels - Added methods to expose actual values and their types - Implementation of the new methods
9ccdad386 PSVI API changes. Step 3: - Updated the PSVIWriter sample to reflect the API changes
0efd54cf8 Adding a schema which defines xml:base for tests.xsd, and enabling test output comparison. Thanks to Dean Chalker for helping to locate the problem. The old import URI was inaccessible..
47cf454e2 Fixing Bug #24662. Some grammar errors reported and corrected by George Cristian Bina.
04c70496e Reenable XML11Configuration to be used in a pull parsing fashion.
a74e0abc1 PR: Obtained from: Submitted by: Reviewed by:
21a8790b1 Adding support fowr  ell-formed featue. Still need  adddo more changes.r
d8db096e9 Made necessary changes to align our XML 1.1 implementation with the PR for XML 1.1: http://www.w3.org/TR/2003/PR-xml11-20031105/
b8bd3cb6a Updating the release doc.
6ea5647ea Changes to DOM Level 3 Core CR:
fdf3326f7  Added implementations for DOMStringList
ec4c4a868 Updated to DOM Level 3 Core CR. Patches from Neil Delima.
48e763ace Fix tests according  to the DOM Level 3 Core CR. Patches from Neil Delima.
5d497c76b Fix sample according  to the DOM Level 3 Core CR. Patches from Neil Delima.
41f743dbe Updated build for DOM Level 3 CR changes. Patch from Neil Delima.
14bb3a202 In preparation for the release, update the version to 2.6.0.
076fc21ab Update references to XML 1.1 from CR to PR.
3e07780ed Fixing typo. infoseet -> infoset.
8b4659e74 Changed DOMNormalizer to reuse DOMErrorImpl. Patch submitted by kohosuke kawaguchi.
859280917 Generate the docs for the XML Schema API in the javadocs target.
af8069f18 Create a new section for the XML Schema API. Also add a link to the Grammar interfaces in the XNI section.
1610cc0bb Committing schemaLocation patch  submitted by kohosuke kawaguchi.
0f5614fc9 CleanUp.
85ebbaf86 Allow to undeclare a prefix as per xml1.1 spec was error in xml1.0.
310aec75b Fixing XNI Javadocs.
eb110ccfc Everytime we change the default parser configuration our documentation needs to be updated to reflect this. References within in the docs have become badly out of date.
a4eff0c0a Replace tokens for the default configuration in entities.ent using two new properties. We could come up with something fancier in the future which reads org/apache/xerces/parsers/org.apache.xerces.xni.parser.XMLParserConfiguration, but at least for now when the default config changes, we only have to change the value of the properties in the build file.
17de10773 Update references to PSVI packages, and fix reference to the default configuration.
e2acd4417 Add a section which explains that the XML Schema API references some DOM Level 3 interfaces.
e2aa2d8c2 Fix Java docs. Also remove setRecognizedVersions method -- the interface is read-only, the method was added by mistake.
bc974e6aa Add implemenation of xs.XSLoader and xs.XSImplementation.
829f4d559 Add sample file that shows how to load and query XML Schemas using XS API
ef4f86ead Fix build (after adding XSLoader implementation). Add QueryXS to test-dom3
5d7a454ca Fix reference to the default configuration and improve FAQ on the validation behaviour of the default configuration.
8fec56828 Fix reference to the default configuration and update the Overriding Default Parser FAQ so that it mentions the xerces.properties file in the serach path for a configuration.
323520e70 Update download link to the mirror page, and fix a few typos.
93aa999c6 Fix reference to default configuration and some typos.
2e191fab0 Added a new FAQ entry to explain where the PSVI interfaces have been moved to.
a9933e9a8 Added an anchor to the XML Schema API documentation.
53ec54f28 Fixing a bug in XML10 configurePipeline: we should always setup DTD pipeline (was only setup if scanner has not been changed)
e6fa818fe Allow XML 1.1. support in XInclude
8c4766281 In case of an error -- output difference
6777150ab Committing patches from Neil Delima ( DOM TYPE_MISMATCH_ERR)
746c8fef4 A patch to report errors during normalizeDocument when an attribute is encountered whose value contains a reference to an entity for which no declaration has been read. (patch from Neil Delima)
f72756f39 Package new XS sample with xercesSamples.jar.
889766421 fix for bug 24692
2e403af28 Adding support for XML 1.1 text inclusion.
aa0310cfe Further changes for support of well-formed feature
0c5a3a1c4 DOM3LS CR changes . Submitted by Ramesh Mandava PR: Obtained from: Submitted by: Reviewed by:
d3787c91d DOM3 LS CR changes bug #24742 . Submitted by Ramesh Mandava
b7f101cf1 DOM3LS CR changes bug #24742 . Submitted by Ramesh Mandava
dcd088b22 DOM3LS CR changes bug #24742 . Submitted by Ramesh Mandava
d637ecd18 Adding further changes for well-formed feature support. Adding valid xml character checks for CDATA and TEXT nodes. Added new function checkInvaliXMLdCharactes to check valid XML characters as per the version of the document.
a50d30d71 We should be checking the attribute names for valid XML characters
14a6c0b94 Package XS samples with xercesSamples.jar when building DOM Level 3. Also, resolved one of the issues with dtdjars. The other problems still need to be fixed.
fc0b811e2 Actually return the list of recognized versions instead of null.
99eba14f8 Add missing author and version info.
5df1474ef Update the release doc.
3d3220ca5 Update the release doc.
12d61e55c Added a sentence on "being specific and providing enough information to reproduce a bug".
ff47514b7 Patch to documentation concerning DOM Level 3. Submitted by Neil Delima.
c5f619008 remove an extra check for getBaseURI computation
0fd1034a9 Add tests for baseURI
bbf24ff40 Update references to XML Schema API.
ba469d74d Fixing several typos.
d9c6c8e97 We've had support for UCS-2 and UCS-4 for a long time.
4371b1268 Add an FAQ about XSLoader.
73ec60c33 Now applications can set the value of well-formedness feature to either true or fals when normalizing document.
9d1f565eb Fix for bug 24778. Patch submitted by ramesh mandava.
ce2467368 Fixing typo: cashing -> caching.
e9d0bb428 Static mutability fix. Make character flag array private. It should never have had public visibility.
ae6579ae0 fix for typo in toString method; thanks to Jon Schewe for pointing this out
b138361fd Actually set flag which indicates that XML11 components have been initialized. We were recreating them on every parse.
bfc3bc925 Cleanup. Remove extra call of init().
2b4be9a8f Cleanup: the XMLSchemaValidator should be only added to common components vector (done in configure*Pipeline methods)
dc4412740 Setting well-formed parameter to true is now supported.
126247408 Patches for bugs #24795  ,#24797: Patches submitted by ramesh mandava.
9d1dbf89c no fixes , just code formatting.
c79409ecf Fixing Bugs #897 & #19152. They're very different reports, but they're both symptoms of the same bug. We were keeping a list of all the readers opened during a parse and only closing them after we finish. This means if a document contains millions of internal entity references we'll have a list of millions of references to StringReader that cannot be garbage collected until we dump the list after the parse, and since we don't close the streams until we're done, the operating system may run out of file handles.
1a2d86dad Fix to compareDocumentPosition:  when this is an attr and other is an ancestor node, ensure CONTAINS bit is set in return value
222b2b0d0 Update the release doc.
54f423994 We need to escape CR during text normalization and TAB, CR, NL during attribute value serialization to allow roundtripping [1], [2]. Similar escaping is done for XML11 serialization.
4d0d5012f Upgrading to SAX 2.0.1. support
62d01e844 Upgrading to SAX 2.0.1 support
559a1b7ea Fixing dtdjar target -- should only rely on the xerces.xs interfaces not actual implementation.
98a9eab7c rename DOMInputList to LSInputList to be consistant with the DOM Level 3 LS CR.
77684fad3 Separate dom implementation source from XML Schema API and PSVI support. Now DOMImplementationSourceImpl is only aware of Xerces DOM implementation. DOMXSImplementationSourceImpl is aware of PSVI and xerces.xs implementations
f0937421c Reference DOMXSImplementationSourceImpl.java
93e46786e Fixing a bug related to busy -- was not resetting this field properly. Also abort() means that the parsing is stopped, therefore we need to throw an exception.
3891e9331 reference DOMXSImplementationSourceImpl
c10f1fb05 fix dom3 target and dtd targets
8578eeb25 Added section on grammar caching. Modified section which discusses performance of parser configurations. XML11Configuration (the default) has similar performance to the NonValidatingCongfiguration since Elena improved reset.
1088f2ead Updating release notes.
f80cacec2 Update the release doc, and improve the text in some of the entries.
3c637a145 Improved language in the 'Parser Performance' FAQ.
e23ed7893 Fixing dvjar target
6a234cb90 Update XSLoader example to use DOMXSImplementationSourceImpl.
d79abaca3 Fixing a bug in XInclude -- DTD pipeline is not setup proparly. Thanks to Neeraj patch.
950838c4c update docs prior to the release
527a8b6f2 fixed minor doc bugs
6c78607a6 update download page docs
741cc7f1b make sure download.cgi is in the build for docs target
b1bd6d8a4 fixing error in the last commit: make sure download.cgi is in the build for docs target
d40e667e6 Add namespace-prefixes, load external DTD and dynamic validation options to SAX samples.
634740340 Update description of options for SAX samples.
ec684edf2 Add dynamic validation and load external DTD (added to Writer only) options to DOM samples.
174df7c21 Update description of options for DOM samples.
eb6f8b0c8 Updating implementation to incorporate change to XInclude namespace from latest WD: http://www.w3.org/TR/2003/WD-xinclude-20031110/
5cccc429a Updating messages to incorporate change to XInclude namespace from latest WD: http://www.w3.org/TR/2003/WD-xinclude-20031110/
6a8571aa8 Updating tests to incorporate change to XInclude namespace from latest WD: http://www.w3.org/TR/2003/WD-xinclude-20031110/
1992c2a22 Remove unused static member.
242253f2a Fixing a couple reset bugs, including Bug #25043. We were overwriting the user's configuration with default values when namespace support was disabled.
4f5026e5e Basic implementation of setting Accept, Accept-Charset,Accetp-Language as per [1]. Not yet complete. [1]http://www.w3.org/TR/2003/WD-xinclude-20031110
e7f92c2e5 Fixing some typos.
15364971e Issue a warning to users of the old http://www.w3.org/2001/XInclude namespace. See: http://www.w3.org/TR/2003/WD-xinclude-20031110/#syntax
d9f22e5fe Fixing Bug #24318: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=24318
5ba592aa9 Partial fix for Bug #24992. Fix NPE which would occur if an include parent has no base URI.
b5f15e9b0 Allow user to specify a target directory for the output.
b3566f74e Enable setting http properties.
6bf2e83dd check for xpointer as href is optional in latest spec.
8fefcc922 Add a new method in the XSGrammar interface, to convert an array of schema grammers to an XSModel.
6d4a09909 Update manifest file.
fb5dbf51f Added a message  to print when href is missing.
1160512aa Fix for bug #24124. Thanks to Kohsuke.Kawaguchi@Sun.COM.
4b68e53e7 Fix for #25347. Thanks to kohsuke.kawaguchi@sun.com for identifying and fixing the same.
4955afce1 The default values for HTML/XHTML system IDs and public IDs were out of date (reported on xerces-j-dev by Michael Smith). The old location for the XHTML DTD is actually a broken link.
13be09709 Fixing Bug #6878: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=6878
7e478c6e8 Fixing a potential threading problem in schema duration data type.
160848383 Bad names used in my previous commit. Fixed now.
120a1f1ea Fixing Bugs 24886, 25571, 25572 and 25573.
61fe2fe5c Fix for bug 25577. Thanks to Kohsuke for finding the bug and submitting the patch.
d33815d26 Fixing a bug in the last commit. When we're scanning a long QName and we need to resize or copy down, we also need to adjust the index of the ':' if we found one.
d8be3b1b1 Fix DOM Level 3 Load and Save /Core implementation bugs, i.e. hasFeature, getParameterLists, make sure we pass stringData from LSInput, etc. Thanks to Neil Delima for fixing several of those bugs.
372ca2d50 Update copyright.
a44946b2b Update copyright for documentation footer -> 1999-2004.
b2b2a9504 Update copyright info for API docs, etc... Also fixing 'usage' target. The 'parser.Name' variable was not being initialized.
9d1ba0842 Fixing an edge case. We should reject PIs at the start of an entity whose targets are of the form 'xml:foo' when namespace support is enabled.
af61ded79 Report unsupported-encoding error when unknown encoding is specified.
f420dd512 Chaning mailid of Gerv on his request.
808ce3e26 Fixing bug 25200. We added 2 kinds of schema components, but we didn't update the array in the XSModelImpl.
168eecca4 Fixing Bug #22395: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=22395
85e053c52 Fixing bug 25723. Allow leading "+" for values of min/max/length facets and min/maxOccurs.
17accbfc1 Fixing Bug #23768: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=23768
aa3f48798 Apply patch submitted by Neil Delima. See bug #24667
6d70091db Fixing Bug #26198: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=26198
2638af709 Update LSParser filter  impl according to the latest spec: 1. "The document element is never passed to the LSParserFilter methods, i.e. it is not possible to filter out the document element" 2. "The child nodes of an EntityReference node are passed to the filter if the parameter "entities" is set to false"
a26709a5d Fixing bug #21859
9b0b8697b Schema erratum E2-35 and bug [25724]. This erratum allows length to be specified along with min/maxLength, as long as they are at different derivation steps, and minLength <= length <= maxLength.
f4580c4d3 Committing patch from Kohsuke Kawaguchi. Bug http://nagoya.apache.org/bugzilla/show_bug.cgi?id=25346.
cd4748578 Fixing Bug #24753. Patch submitted by Alex Milowski. http://nagoya.apache.org/bugzilla/show_bug.cgi?id=24753
3b909c6c7 Improve performance of getType. To determine if we're looking at an enumerated type it is sufficient to check that the first char is a '('. If it is a '(' then it cannot be anything else.
05ccddbdb Fixing the remainder of Bug #18785: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=18785
9e95faea2 For backwards compatibility, trim whitespace before passing a system id to the URI class to read (when standard-uri-conformant feature is false).
c11d736f0 Fixing bug [24783]: an ArrayIndexOutOfBoundsException. Wrong counter was used as the array index.
03e52c1ce Fixing a bug in the schema anyURI implementation. Now we accept special characters and non-ascii characters in anyURI values. This partially fixes bug [18803].
1d264fc6b Redistributing code for content negotation.
19437fdcf Update copyright and remove some unused imports.
c46e23596 Update Xerces features and properties arrays. XInclude uses these to copy the configuration to a child parser. It was missing several of them.
82df306ac Fixing a few bugs. We weren't propogating the parent parser's entity resolver or security manager to the child parser.
a01f74ccb Fix possible security hole by propagating security features and properties that are set on the parser to the XSDHandler. Reorganize the code so that reset is done in a consistant maner independenly on how the XMLSchemaLoader was created : it can be either created by a user or by XMLSchemaValidator. Make sure that all properties (in particular entity-resolver) are passed correctly between XMLSchemaLoader and XSDHandler.
739a64a4b We're required to report "http://www.w3.org/2001/XMLSchema" as the type for XML schema as per the DOM L3 LS CR. Since we don't have a type field on the resource identifier, we can check that the identifier is grammar description and then get its type.
62fdc3ffd Putting the change for schema errata E1-16 back in. publicId attribute is now optional on notation.
f18f52ac8 Use equals() instead of reference comparison.
6e9e5ee5e Adding @version field to some files which were missing it.
a53d2fe07 Updating XInclude documentation. Added FAQs on content negotation and the old 2001 namespace.
07d6b419b Fixing some typos from the last commit.
876563163 Fix minor bugs in well-formness implementation, e.g. report errors on '--' in comments. Optimize well-formness checks for attribute values, cdata sections, text nodes.
9bfd13580 Updating the release doc.
325735908 Fixing Bug #24579: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=24579
6d3ee85ef Performance improvement.
b99976750 XML Commons Resolver 1.1.
73f3bbd4d License for XML Commons Resolver.
a55c19c90 Adding the resolver to the build.
22874e6d6 A resolver which supports OASIS XML Catalogs. It implements both XNI and SAX entity resolvers and allows users to extend the class to override the methods from these interfaces. This class encapsualtes the XML Commons resolver.
20cf72044 Fixing up javadoc.
2fbeb759e Fixing a javadoc warning. @version had no value.
678f108f0 Some revisions... Reworded some of the text. Also hrefs have changed from IURIs to IRIs in the latest WD.
5c47a9fe6 Fix a bug in full-schema checking. When validator loads the schema the full checking on the grammar should not be done during loading, instead validator will do it. If schema pre-loaded (by user or via JAXP) the full checking should be done.
af6de985a Update following the latest changes to the draft
f683e9c25 Update following the latest changes to the LS draft
bc01e3dcf Committing Neil Delima patch: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=26385
4fa508149 Fixing Bug #26157: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=26157
12386a7c9 Update copyright.
39cfbdc68 Fixing DOM tests. getConfig is now getDomConfig.
31754fe1a Fixing DOM samples. getConfig -> getDomConfig.
5c2a3558f Reducing creation of short lived objects. Many of the check/get/set-feature/property methods call String.substring creating objects are only used a few times to compare against other strings.
aacbba39f Fixing a bug in the last commit. If the suffix of the feature/property id is longer than the suffix we're testing we'll accept it if the region we're testing matches. We should only accept if it's truly equal.
864d5de61 We need to use the EncodingMap to translate IANA to Java encoding names. Set a byte stream on the serializer instead of trying to create an OutputStreamWriter. The underlying serializer will do that for us and do the encoding map lookup.
810d593e9 Prepare for Xerces 2.6.1.
415ed76d1 Improve performance of attribute value normalization for XML 1.0 documents.
693912e4e Update installation document.
c6eeeb782 Fixing an NPE. See REVISIT comment.
b144d750e Add an FAQ for XML Catalogs.
836d020d6 Fixing some typos.
33a337622 Improve language.
32b4163b1 Refer consistently to the XML Schema API and reference the specification posted on the W3C site.
81638fc22 Updating the release doc.
59a247557 Add description for Xerces 2.6.1.
f89646420 Reducing creation of short lived objects. The debug print method calls were creating instances of StringBuffer and String which are never read.
99d02f6bc Update readme.xml for Xerces 2.6.1.
bd10f1fcf Add a note which specifies that 2.6.1 will be the last release to support JDK 1.1.
c395422c3 Add a new public key.
988f21da7 Fixing a bug which caused the DOM parser to throw out text preceeding a CDATA section when deferred DOM is off and we're not creating CDATA nodes.
ab2675c1b Fixing Bug #26472: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=26472
6b7b1df74 Schema errata E1-52, E1-53, E2-56. The types of some attributes in schema documents were changed.
0230dd0b1 Fixing some broken tests.
64925351e Fixing build for DOM L3 for new tests
e34c30067 According to the DOM Spec Attr.setValue(..) method is not supposed to raise any NamespaceErr exceptions.
7c22291fb Support the 'infoset' parameter for the DOMConfiguration of LSParser. By default the value of this parameter is true which implies that all of (namespace-declarations, well-formed, element-content-whitespace, comments, namespaces) must be true and all of (validate-if-schema, entities, datatype-normalization, cdata-sections) must be false. These parameters must be set to these values when we create the parser.
44baa3a97 cleanup
6806d3cb1 Add LSException per latest change to the draft
700224e38 Cleanup
8426b47f0 Let DOMMessageFormatter also support reporting XML messages (needed for well-formness check).
fa99bbac3 Some cleanup as well as making methods for well-formness check public, to allow serializer to access those methods (LSSerializer needs it for "well-formed" checking).
546f41663 Adding support for "well-formed" and "infoset" features for serialization. Currently, "well-formed" features is implemented inefficiently -- we walk the tree twice, in the future we should perform well-formness checking as we serialize the tree. Fixed some minor bugs in hangling "cdata-sections" and "entities" features. Reorganized code in DOMSerializerImpl on how to handle parameters. The code still needs more work: we need to try consolidate different configurations impls (for serializer, parser, core normalizeDocument). Added new LSException for write* methods.
648be33a9 Support 'infoset' parameter in DOM core. Also fixing a bug. We don't currently support setting element-content-whitespace to false so we should be reporting that it isn't supported.
83675c59a Fixing Bug #26437: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=26437.
889173836 Update DOM L3 docs.
47b5876ae Get appropriate DOM implementation for PSVI implementation
fb70ae3dd Add more information on XML Schema API
13510297d Update dom docs
efc716cf3 Fix some missed feature support
20759036a Updated release docs
11bf769fa Adding a note in the doc to indicate that we've deprecated the old form of gMonth (which is --MM--) and will discontinue support for it in a future release.
01327322e Fixing some typos and formatting of code samples.
2b8d7d976 Removing byte order mark.
fbf89bda7 Fixing a link.
b9be0a0bd Adding an anchor to FAQ about other catalog formats.
cc0170043 Add well-formedness checking in LSSerializer to list of changes from the previous release.
a1918855a Fixing bug [26480]: when a child element matches a strict wildcard and there is no corresponding global element decl for it, it's an error on the parent element, not the sub-element itself.
65d908904 Expose more information from the implementation of XSModel: 1. Whether this XSModel contains any IDC. 2. To get the substitution group for a give element declaration.
df5f02d30 Fixing a potential NPE. When there exist empty particles, it's possible for other parts to get NPE when they try to access such particles. Now all empty particles are removed from the model group that contains it.
3003603d7 Improve performance of the initialization of the character flag arrays for XMLChar and XML11Char. Although these arrays are always the same we were building them dynamically.
554500937 Fixing 2 bugs and improving performance.
77c9bdb8d Add serialVersionUID to PSVI DOM classes.
8865f6eef Some clean up:
3996e70ed Remove unused import.
dc3a39632 Eliminate compiler warning. We shouldn't be appending char[] to a string.
942742570 Remove unused import.
4fb4ddda3 At the moment we do not support object serialization of grammars so a user cannot serialize a DOM containing PSVI. Adding readObject/writeObject methods which explicitly ban serialization of PSVI DOM. These must be removed once we support grammar serialization.
48e3a0dec Finally... Localizing messages for SAX. Created a new message formatter for SAX messages and replaced all the clear text with message keys.
d3e382395 fixed a bug in the XPath parser where it accepts malformed XPath. Also simplified the parser a bit
3d058ea22 rolling back from 1.10 to 1.9
a5dc288f7 fixed the regression problem reported in 1.9 by Elena
09ecdf64f fixed a problem in the XPath matcher where XPath like 'a/.' causes the matcher to fail to identify the match. I think the fundamental problem here is that the XPath class is unnecessarily generic, so we should probably cut it down so that it only handles the XML Schema subset of XPath.
711678178 Reuse StringBuffer
a98db6ea8 Commit the patch from Neil Delima: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=26812
1310bd59e Localizing another message and fixing a few bugs. We were looking up messages from the wrong message domain.
678ddbafa Localizing DocumentBuilder messages.
53d5cbdc2 fixed a bug in the identity constraint handling where the actual type of the element was ignored
a2cef2635 Performance: Replace some Vectors with unsynchronized ArrayLists.  We don't require thread-safety in our configurations so this should speed us up a bit on reset.
a304303f1 Some cleanup.
b7011c5f3 Fixing a bug in XML Serializer -- CDATA sections were automatically converted to Text; entity references were expanded.
d1f26283a Per latest LS draft, attribute nodes must be passed to a filter.
ef90b95db Fixing Bug #26893: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=26893
3a3160679 Fixing behaviour for interrupts and abort. We were throwing a RuntimeException to stop parsing but this bubbled up to the user. Instead throw a unique instance of RuntimeException and consume it in the parse methods.
f7be0894c XML 1.1 has gone to rec, and DOM L3 has reached PR. Updating the docs to reflect this.
ca8514d5c DOM L3 CR -> PR. Updating references.
4dbe7c616 Committing documentation patch from James Littlejohn. Thanks James.
f4771b347 Some changes to the intro sections for SAX and DOM.
6343b1afe Improving language in a few FAQs.
4e340bdfb Preparing for Xerces 2.6.2.
d6a5e41fa Deprecating HTML/XHTML serializers. Also, fixing long standing Bug #2248. Have had this fixed locally for almost a year, might as well apply it.
f6bfcc9fc Fixing Bug #26960: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=26960
79959206f Bug #26613. Making code consistent with startDocument by checking for default document class name. This is the right thing to do since we load DocumentImpl statically.
54415e556 We should be extending the default configuration: XML11Configuration.
4e3ef8ccb Fix a bug in the documentation for the API (sync. up with implemenation of this API)
893499144 Aligning serialVersionUID with the hash from Xerces 2.0.0.
ab05ac05f Add FAQ on why the parser reports no namespace for xmlns attributes.
3b68c057c Some improvements. If the document class name is our PSVI implementation don't go through ObjectFactory. Load it with the current classloader like we do for DocumentImpl. Also, made some minor performance fixes. If we're loading some other Document implementation only lookup the classloader once instead of three times.
7f1b7db3a PR: Obtained from: Submitted by: Reviewed by: ObjectFactory was designed to be package private. Putting copy of ObjectFactory and related classes in the sub packages. This class   exposes class loaders and other sensitive data directly which is security concern. directly which is security concern.
162fde9ce Add an FAQ which describes all of our available parser configurations.
c75f90a1f Small doc fix. This class extends XML11Configuration.
dbf055262 Add FAQ on JDK compatibility.
a60ec6475 Fixing Bug #27087: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27087
867ae56c8 Adding FAQ on Java Object Serialization.
6e2ae441e Adding FAQ on ignorableWhitespace and XML Schemas.
b3425634e Update release doc for Xerces 2.6.2. Adding Lucian to 2.6.1 release notes for fixing bug #26437.
1238a3631 Updating readme for Xerces 2.6.2.
77833c644 Add FAQ on Xerces serializers and classloaders
2374aaf76 Explain documentation fix for XML Schema API
c588e448b Fixed some typos. Also we should be using link instead of jump for internal references.
63b08025f Fixing Bug #27081: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27081
0ee852910 New Apache 2.0 license update.
f7911a5aa New Apache 2.0 license update.
369d579d9 New Apache 2.0 license update.
5cc4cb32d New Apache 2.0 license update.
f736b04f0 New Apache 2.0 license update.
55eb42057 New Apache 2.0 license update.
b581d1de1 Adding Apache 2.0 "top level" license.
847ae9998 Link to 2.0 license. Also fixing a few typos.
06698df7c Source files for documentation should include a license [1]. Adding boilerplate copyright notice for Apache License, Version 2.0 to all documentation source files with appropriate copyright dates.
86e91dfdf Adding license to some more files we distribute.
0f77e1036 New Apache 2.0 license update.
57a041c84 removing a try-catch block that was masking RuntimeException in the user's code
32ab05dd7 Fixing Bug #27264: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27264
281a05bdd Fixing a bug in getLexicalPattern. Many thx to Mike Boos for the patch.
9db44759b Adding a NOTICE file. Currently contains minimal text. It needs to be filled in with attributions.
58ea3f13b Include NOTICE file in source and binary distributions.
ad4c20668 Adding NOTICE file to package descriptions.
c142befb6 Fixing Bug #26685: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=26685
2de2e3d5b Pass augs to endEntity.
f00018a29 Fixing Bug #27303: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27303
d4c49d336 Fixing Bugs 26964 & 27350: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=26964 http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27350
d987c4aa7 DOM Level 3 core states that: "The parameter names used by the DOMConfiguration object are defined throughout the DOM Level 3 specifications. Names are case-insensitive."
ba4971c45 DOM Level 3 core states that: "The parameter names used by the DOMConfiguration object are defined throughout the DOM Level 3 specifications. Names are case-insensitive."
c10c1b2ec Fixing Bug #26994: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=26994
86d577ff4 In anticipation of SAX2 extensions 1.1, implement the isDeclared and isSpecified methods of Attributes2 on AttributesProxy.
bf4beb560 Fixing Bug #27421: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27421
64777c0d0 As a first step towards fixing Bug #27083 and #27422 modify our internal readers so that they throw a new exception class which exposes the necessary fields required for generating localized error messages. This allows these exceptions to be caught where appropriate so that the error which occured may be reported to an error reporter.
114ba23b2 Partial fix for Bug #27422: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27422
cf65eb6d6 Fixing Bug #27083 & #27422: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27083 http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27422
11319b902 Update references to XML Schema API.
6442a0ea8 Fixing a typo.
dff601b04 Fixing a thread-safety problem regarding identity constraints. Fields which are contained in a SchemaGrammar were mutable; keeping the state of whether a field is permitted to match a value in order to detect whether there is more than one match for a field in a given scope. This caused spurious errors about duplicate field matches when a grammar with identity constraints was shared across parsers on different threads. Applying a similar fix to the one that Khaled made to Xerces-C++ to make this portion of the grammar stateless.
880163ff7 Some cleanup from the last commit.
ab751ed6a Further fixes for Bugs #27083 & #27422: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27083 http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27422
bf7369822 Fixing Bug #27452: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27452
d263b29f9 Performance: to read the service provider name from a jar we use a BufferedReader and read the first line from the file. BufferedReader's default buffer size is 8K chars. Since we're only reading one line this is pretty excessive. Reducing this size significantly.
8a2ca9ce0 Fixing a bug. Pass the package name not the class name to check package.
8e00d2891 Fixing Bug #27585: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27585
8103abe84 Fixing Bug #27716: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27716
358006206 Preparing for SAX2 Extensions 1.1. As first step towards supporting EntityResolver2, create a new interface which extends XMLResourceIdentifier that communicates the name of an entity in addition to its location. This is required to support EntityResolver2.resolveEntity() whose first parameter is the name of the entity.
45f9993a6 fixed a typo I introduced in the error message IDs
bbfd57c0e Improving language in some of our schema messages thanks to this patch by Neil Delima.
94f51f8fa Check made as per 3.12.1 section n http://www.w3.org/TR/xmlschema-1/
5eb05de3f check made if errorChecking is enabled.
ea3ac51b4 Adding ANSI_X3.4-1968 to the IANA map. This is better known as US-ASCII which is the preferred MIME name but is actually an alias.
1605bc890 Use a more meaningful error code for schema erratum E1-16.
2912981a6 Fixing Bug #27750: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27750
00eece492 Fixing Bug #27792: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27792
d659c2493 Fixing a typo.
0de60ba7b Support the SAX feature: lexical-handler/parameter-entities. This should now complete support for all features defined for SAX 2.0.
1101d615d Adding support for DOM L3 LSResourceResolvers.
b77834b09 Refine javadoc for resolveResource.
cd808e0cf Adding LSResourceResolver to list of interfaces XMLCatalogResolver implements. Replacing CDATA sections with entity references.
efe62e623 Adding http://xml.org/sax/features/lexical-handler/parameter-entities from SAX2 Extensions 1.0 to list of supported SAX features.
6946314ae Adding a FAQ on the scoping of the startElement Attributes parameter.
e2e3a567f Fixing javadoc. It wasn't being generated for the methods because we were using the wrong style of comments.
b744b2282 proposal for 2.7.0 release
677ec9e56 Remove extraneous comments.
744b67f6f Preparing for SAX2 Extensions 1.1:
3256f11ee Fixing Bug #27872: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27872
c681014ce Fixing many javadoc warnings.
2382a0ad6 Performance: Use String.hashCode() instead of using our own hash method. The keys stored in instances of these hashtables are interned strings (also in the SymbolTable) so we get the hashcode for free since it is cached after it has been computed.
f048eabea Removing an obsolete comment.
aa7731a75 Performance: Reducing the number of characters visited while scanning a URI. A URI has a scheme if it contains a ':' which is not preceeded by a '?', '/', '#'.  If a ':' has been found in the string, we need only search to the left of it instead of over the entire string.
46c57eb5a Performance: Reducing object creation.
62aeba594 Filling in NOTICE file.
a85662520 Fixing Bug #27924: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27924
07a9de4fb Fixing Bug #27995: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=27995
215db2e69 Fixing Bug #28022: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=28022
4f1f37879 Fixing Bug #28022: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=28022
6e43d2c09 Include up to date W3C software and document licenses.
cb8e49c10 Package W3C software and documentation licenses in the source and binary distributions.
94998a3f1 List SAX and DOM licenses among files included in the source and binary distributions.
2c9cff0cc Fixing a bug.
584606072 Infrastructure work in the scanners to support the SAX2 Extensions 1.1 interface EntityResolver2, specifically getExternalSubset which allows an application to provide an external subset for a document which doesn't otherwise have one.
41ad82c91 Committing Mike Boos' PSVI writer patches to fix various problems.
9c3f4ce1f Fixing bug [28304]: we should check whether the number of particles before trying to access the array.
586edf74f Replace HashTables with unsynchronized HashMaps. This is done for performance reasons because we don't require thread-safety here. Also, it allows setting of null entries which is useful for our LSParser's DOMConfiguration.
15406c720 Fixing Bug #28288: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=28288
c5b96e951 Fixing Bug #28064: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=28064
f39a9b632 Committing Mike Boos' PSVI writer patches to fix various problems.
5e5b2891d Fixing Jira Bug #944: http://nagoya.apache.org/jira/browse/XERCESJ-944
7480233d7 Updating implementation to incorporate change to XInclude namespace from the latest draft: http://www.w3.org/TR/2004/CR-xinclude-20040413/
b99b93500 Updating tests to incorporate change to XInclude namespace from the latest draft: http://www.w3.org/TR/2004/CR-xinclude-20040413/
47cdede6c Updates for changes in latest draft: http://www.w3.org/TR/2004/CR-xinclude-20040413/
79ce2dd4c Update docs on bug reporting to reflect recent migration from Bugzilla to Jira.
547c1ab37 Fixing Jira Bug #923: http://nagoya.apache.org/jira/browse/XERCESJ-923
b40b800d0 Updating 2.7.0 release plan:
93e2e49a8 Updated to DOM Level 3 Core REC: http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/
1fa0d9942 Updated to DOM Level 3 LS REC: http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407/
82adaadf3 Fixing Jira Bug #948: http://nagoya.apache.org/jira/browse/XERCESJ-948
fe21d5461 Fixing Jira Bug #949: http://nagoya.apache.org/jira/browse/XERCESJ-949
45006567b Fixing Jira Bug #944: http://nagoya.apache.org/jira/browse/XERCESJ-944
81a6f5330 Fix indentation in getParameterNames method.
a724063df Patches for DOMImplementationList and DOMImplementationSource. DOMImplementationListImpl is not part of the bootstrap package, so provide our own implementation. Thanks to Neil Delima.
8238b5d13 Copy org.w3c.dom.DOMImplementationSourceList to META-INF/services.
014fb8665 Adding constants for SAX 2.0.2 and SAX2 Extensions 1.1. 8 new features and 1 new property.
f957aaff7 A new XNI entity resolver for wrapping SAX2 Extensions 1.1's EntityResolver2. Using an EntityResolver2 like interface until the real one is available.
6e13fb843 Change some comments.
2d467a850 Cleanup unused imports.
2cb7d1ecb Modified patch submitted for bug XERCESJ-947 by neil dilema il dilema, also fixed the problem incase of importNode.
74d4504b4 Fixing a NPE which occured for any schema containing a CDATA section outside of an annotation.
7da389c54 If the disallow-doctype-decl feature is set to true, do not query a user's ExternalSubsetResolver if there was no DOCTYPE in the document.
84dae4b7b Fixing Jira Bug #954: http://nagoya.apache.org/jira/browse/XERCESJ-954
7b7c362fa Update schedule with sizing for implementing [false] for the namespace-declarations parameter in DOM Level 3.
f90edf1f6 Contributed by Neil Delima:
4554e7e34 Premature commit of this file. Undoing change to debug variables.
c95b1584e DOM L3 namespace-declarations=false is complete.
c2c212883 Feature/Property Support for SAX2 Extensions 1.1 & SAX 2.0.2.
042c3c0d5 Update the release plan. The SAX 2.0.2 work is near completion.
35f37f2fc Some schema messages contained incorrectly escaped curly braces and single quotes. Fixed, thanks to the patch from Neil Delima.
4cce988f0 Fixing Jira Bug #961: http://nagoya.apache.org/jira/browse/XERCESJ-961
245daf499 If an LSException was thrown to the LSSerializer rethrow it.
2eedae92c Do not call EntityResolver2.resolveEntity if both the pubic and system identifiers are null.
c214be038 Fixing Jira Bug #960: http://nagoya.apache.org/jira/browse/XERCESJ-960
02680df93 XSSimpleTypeDefinition [1] specifies that empty lists (XSObjectList & StringList) are returned when no list for a requested item exists. Our implementation got out of synch with the spec. We were returning null instead. This is now fixed.
d1d474a79 Fixing bug [XERCESJ-962]. Should use the base type to convert from lexical values to actual values for min/maxIn/Exclusive facets, so that the "pattern" facet specified at the same level isn't picked up.
296729aa6 Fixing Jira Bug #892: http://nagoya.apache.org/jira/browse/XERCESJ-892
60697c3db Fixing Jira Bug #968: http://nagoya.apache.org/jira/browse/XERCESJ-968
5c3cd2e1a Fixing a bug in DOMEntityResolverWrapper. The DOM Level 3 LS REC states that inputs specified in a LSInput are look at by a LSParser in the following order to determine which will be used:
1c6625eb7 Fixing a couple warnings for Javadoc and a deprecated Ant feature.
3cfc52017 Fixing Jira Bug #966: http://nagoya.apache.org/jira/browse/XERCESJ-966
7b4aadeb8 Fixing Jira Bug #967: http://nagoya.apache.org/jira/browse/XERCESJ-967
05feac5e3 Adding a serialVersionUID.
4c1206905 Fixing Jira Bug #525: http://nagoya.apache.org/jira/browse/XERCESJ-525
e3c6d1cb2 Fix for  http://issues.apache.org/jira/browse/XERCESJ-971
8a5e04c5c Fixing Jira Bug #974: http://nagoya.apache.org/jira/browse/XERCESJ-974
62ff0b1ea Fixing a bug reported to xerces-j-user by Robert Houben: http://marc.theaimsgroup.com/?l=xerces-j-user&m=108587697229050&w=2
0ded4fbec Some cleanup, minor performance improvements.
1582a4435 Grammar Caching and SAX's EntityResolver2:
62d851935 Add a note to the description of the input-buffer-size property to clarify that the size of the parser's internal buffers may need to be increased beyond the size of the input buffer.
490546c9d Removing out of date W3C DOM license. Replaced with the up to date licenses LICENSE.DOM-documentation.html and LICENSE.DOM-software.html.
fa4b83641 Fixing a potential memory leak. The reader used to read the service provider is never closed if an IOException is thrown while reading from it.  Adding a finally block so that the reader will always be closed.
e820933e8 Fixing another potential memory leak. The input stream used for loading properties may never be closed if an IOException is thrown while reading from it. Adding finally blocks so that the input stream will always be closed.
a5043b8f8 fixed bug XERCESJ-980
62b65e276 The XML Schema API [1] states that the DOMConfiguration of an XSLoader may allow setting of a resource-resolver (LSResourceResolver). Supporting this parameter so that applications may use their own resolver to locate schema imports and includes.
2478d3643 The DOM normalizer was rejecting supplemental characters in text, comments and CDATA sections. We should now be correctly handling surrogate character pairs.
0987533ad Updating XInclude documentation.
9eedc2daa DOM Level 3 adoptNode fix that returns null while attempting to adopt nodes between different DOMImplementaitons.
7fe426bbd Update implementation according to the errata: http://www.w3.org/2001/05/xmlschema-errata#e2-54
049571af9 An anonymous class DTDGrammar$1.class seems to come from an argument to the init method of ChildrenList. This class has been declared to be 'private static' and does not declare any constructors so a default constructor is implicitily provided. According to the Java Language Specification [1], this default constructor will be private.  DTDGrammar calls this private constructor to create a ChildrenList.
435143ac0 Fixes problems with DOMImplementation.getFeature and hasFeature, Node.getFeature and isSupported and support for Xalan's DOM XPath implementation.
a676dedd7 Fixing up file indentation as well as license and version info.
09f1a784c Updating the release doc.
b4c6ce418 As discussed on the xerces-j-dev and xerces-j-user [1] lists eliminate the redundant xmlParserAPIs.jar file from the distribution.
96b171235 Remove reference to xmlParserAPIs.jar.
7fd7c8132 Fixing Jira Bug #981: http://nagoya.apache.org/jira/browse/XERCESJ-981
f859da843 Fixing Jira Bug #470: http://nagoya.apache.org/jira/browse/XERCESJ-470
64263e7ff Update the release plan. The changes from DOM L3 PR to REC have appearently been complete for a while now.
9882f01c6 Schema location hints specified as relative URIs should be relative to the actual URI of the schema document rather than the specified URI. When available use the actual document URI as the base URI for resolving imports and includes.
f5c009185 Fixing Jira Bug #984: http://nagoya.apache.org/jira/browse/XERCESJ-984
20e6cc5f9 Eliminate some new compiler warnings emitted when compiling with J2SE 1.5.0 beta2. java.lang.Class.getMethod() and java.lang.reflect.Method.invoke() now take a varargs parameter.
685c04586 Eliminate some new compiler warnings emitted when compiling with J2SE 1.5.0 beta2. java.lang.Class.getMethod() and java.lang.reflect.Method.invoke() now take a varargs parameter.
407cd798a Patch to fix problems with replaceWholeText.
4cf406e88 Update the release plan. replaceWholeText is complete.
7f1cffd04 Patch for defect http://nagoya.apache.org/jira/browse/XERCESJ-987.
8ba9ac8b9 Fixed the replaceWholeText dom3.Test failure and other problems.
5fa54eb54 Fixing Jira Bug #949: http://nagoya.apache.org/jira/browse/XERCESJ-949
84a509508 Fixing Jira Bug #949: http://nagoya.apache.org/jira/browse/XERCESJ-949
3140d309c Improve formatting of content model representation reported in schema messages. For instance when there's no namespace, report foo instead of "":foo.
eba1a5102 Minor performance improvements to use of StringBuffer when building string description of an element description.
45ec51a61 Fixing Jira Bug #926: http://nagoya.apache.org/jira/browse/XERCESJ-926
f23884897 Although the escaped path for the user.dir system property is cached we were creating the URI it represents over and over again.
aae682d9b Performance fix: Replace building of strings using concatenation in while loops with StringBuffers.
ccde42342 Performance fix: Replace building of strings using concatenation in while loops with StringBuffers.
fb1ae1f83 Clean-up unused imports.
ea2ae97ce Prevent reading property files every time,also added locale support.
101cb5d09 Fixing a bug in schema particle derivation: we didn't report an error when the base type has empty content and a restriction has non-empty content.
956ea63fc If the exception thrown is an XMLParseException we've already reported the error to the user's error-handler. We were reporting fatal errors twice. On the second time without an error type set.
aa612d25b Fixing Jira Bug #950: http://nagoya.apache.org/jira/browse/XERCESJ-950
3fdd5f031 Changes w.r.t fix for bug 973. PR: Obtained from: Submitted by: Reviewed by:
fd229c3fa Changes w.r.t bug 973.
bc14ad37e Some cleanup.
2aa01a8a1 Jira Issue #990: http://nagoya.apache.org/jira/browse/XERCESJ-990
c26051d40 fixed a bug ,where wrong property file was being used for domain XML and SERIALIZER.
aebdd2430 For LSResourceResolver, resolve the system identifier against the base URI if the user prefers that the expanded system identifier be used when doing a lookup on the catalog. Also doing a bit of cleanup.
18e6e2ae1 Performance fix. Getting the length of a node list causes the traveral of a linked list. Walk the child/sibling chain instead of by index with node lists.
65ef539df Several updates to the Xerces 2.7.0 plan.
1552e9208 Updating the release doc.
ade5503bf Adding a 'since' field for features and properties to identify in which release a given feature or property was added.
295b4f887 Adding documentation for most of the SAX 2.0.2 and SAX2 Extensions 1.1 features and properties.
98c8a4817 Fix for defect http://nagoya.apache.org/jira/browse/XERCESJ-969.  Thanks for Jonathan Au for the patch.
03687903c In writeToURI, escapes in URIs such as: file:///D:/My%20Documents/file.xml were not being decoded. On Windows, we were writing to "D:\My%20Documents\file.xml" instead of "D:\My Documents\file.xml".
2db20914c JIRA Issue #992: http://nagoya.apache.org/jira/browse/XERCESJ-992
fbe6887ce Bug Fixes: - must escape '<' in attribute values - must process attribute values on annotation root   since they may have characters which need escaping - fixed bugs in namespace fixup on annotation root
8c89c529b Fixing Jira Bug #950: http://nagoya.apache.org/jira/browse/XERCESJ-950
3e3e368cd Fixing Jira Bug #843: http://nagoya.apache.org/jira/browse/XERCESJ-843
2fa2dd8f7 Fixing an AIOOBE which may occur when an xi:include element appears as the top-level document element. Since no members of the array were marked as valid we were running off the front of the array. Now, if we reach the root we always stop.
3f28717c1 Updating test document. Must unbind namespace on 'child4' element. An xi:fallback element must not contain any elements from the XInclude namespace other than xi:include.
d262ca33b Applying a few bug fixes.
3c46143f0 Adding an error message for elements other than xi:include from the XInclude namespace which appear on xi:fallback.
535a94120 Adding an interface to allow parser configurations which aren't subclasses of XML11Configuration to be recognized as supporting XML 1.1 by the SAX parser.
0f9d23fe1 JIRA Issue #995: http://nagoya.apache.org/jira/browse/XERCESJ-995
0024a1fb0 Allow the SAXParser to recognize these configurations as supporting XML 1.1. Also some identation cleanup.
fcb7c29ea Fix broken dtd target.
824513f92 Fixing Jira bug [XERCESJ-991]. Sometimes, due to some schema errors, we try to remove a particle from another particle which is empty. We didn't check for this case, and got an NPE. Note that this commit includes many accidental whitespace changes. The really changes are between lines 1655 and 1665.
4ca6988eb Formatting changes: Converting leading tabs to 4 spaces. They look really ugly in some editors.
96c8f4fd2 Fixing Jira bug [XERCESJ-994]. When the values for features/properties don't change between parses, we don't bother getting those values again in "reset". The parser has a list of external schema locations, which is cleared in "reset". We need to re-parse the external schema location properties in "reset" to rebuild such list, regardless of whether the values of the properties changed.
e036d10de JIRA Issue #998: http://nagoya.apache.org/jira/browse/XERCESJ-998
6c7a16c32 Fixing Jira Bug #997: http://nagoya.apache.org/jira/browse/XERCESJ-997
52b81b9ca Add documentation on XML11DTDConfiguration and XML11NonValidatingConfiguration.
2a507f88d Updating the release doc.
182d6f7f3 Several updates to the Xerces 2.7.0 plan.
8ad988f82 DOM Ranges Fix:  If one boundary-point of a Range is set to have a root container other than the current one for the Range, the Range should be collapsed to the new position. This enforces the restriction that both boundary-points of a Range must have the same root container.
d995a7c93 DOM Ranges Fix:  The start position of a Range is guaranteed to never be after the end position. To enforce this restriction, if the start is set to be at a position after the end, the Range is collapsed to that position. Similarly, if the end is set to be at a position before the start, the Range is collapsed to that position.
5b454a7cd Bug fix: The method detach () should raise an INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
ba5163c42 compareBoundaryPoints should raise a WRONG_DOCUMENT_ERR if the two Ranges are not in the same Document or DocumentFragment.
89002e740 Avoid creating a new Augmentations object for every probable whitespace character reference.
149ca5bdf Allow EntityResolver to be unset. Don't need DefaultHandler to set ErrorHandler to null. The wrapper on the DOMParser checks for null.
8eca4bb00 Adding support for EntityResolver2.
e7b8ee718 Fixing a bug reported on xerces-j-user: http://marc.theaimsgroup.com/?l=xerces-j-dev&m=109169885816999&w=2
218f58464 Fixing a potential NPE and some cleanup.
81dc09869 Update the release plan.
77828b82e cloneContents and extractContents should raise the DOMException HIERARCHY_REQUEST_ERR when a DocumentType node is cloned/extracted into the new DocumentFragment instead of the RangeException INVALID_NODE_TYPE_ERR.
867902c7f JIRA Issue #1001: http://nagoya.apache.org/jira/browse/XERCESJ-1001
7320b3973 Performance: If the scanner stopped on the closing quote that means we've scanned the entire attribute value. If this value does not contain any TABs, CRs or LFs then it would be unchanged by normalization. Now checking this common condition to test whether both the normalized and non-normalized values are equal.
1fd73c5ef Adding an implementation for language fixup as specified in the XInclude 1.0 CR (April, 2004). Also, renaming some fields to conform to the project's naming conventions.
35274f855 Fixing a bug introduced in a previous commit. Should be calling startElement() instead of emptyElement().
dfcab83fe Update the release plan.
598feebf0 Sharing the symbol table with child pipelines. Also, SAX is expecting internalized strings for all XML names since the string-interning feature is always on. We weren't doing that for attributes added during fixup: xml:base, xml:lang and xmlns:*. This should now be fixed.
a70aa8a81 Fixing a number of bugs regarding namespace fixup:
f71f2b241 Fixing a bug in RangeImpl related to the effect of DOM mutations (insertions) on Ranges.
283606ab8 All classes which extend java.lang.Throwable implement java.io.Serializable.  Adding serialVersionUIDs to all Exception and Error classes which didn't have them.
5694f5142 The XInclude 1.0 CR [1] states that: "It is a fatal error to attempt to replace an xi:include element appearing as the document (top-level) element in the source infoset with something other than a list of zero or more comments, zero or more processing instructions, and one element."
602e768af Propagate buffer size to child pipelines.
90fc8abc4 Adding back some methods which were renamed between DOM Level 3 drafts for compatibility with older applications which were early adopters of this API.
96e4ba9cd Once we've created an XPathEvaluator, cache it to avoid looking it up again and creating it using reflection.
b0895c11a Updating the XJavac task to better future proof it against later versions of Ant which are aware of JDK versions beyond 1.4. For instance, Ant 1.6.1 started detecting JDK 1.5 but XJavac was only checking for JDK 1.4.
7569f1e56 Fixing bug [XERCESJ-919] http://nagoya.apache.org/jira/browse/XERCESJ-919 We used to ignore leading zeros in the fractional part of date/time "second" values; we used to retain trailing zeros in the fractional part of data/time "second" values.
8ca9122d1 Fix for defect http://nagoya.apache.org/jira/browse/XERCESJ-864 so that Node.getBaseURI consistently returns null if the URI to return is malformed.
0b7297165 A fix to prevent the field fDocumentURI from being overwritten when getBaseURI is invoked.
7edaaec43 Making XNI changes as per discussion on xerces-j-dev:
64538884f Updating the implementation to work with the changes to XNI's XMLLocator. Implemented getXMLVersion in XMLEntityScanner and XMLEntityManager, propogating this to the SAX parser. Also removed some setter methods which have long been removed from the XMLLocator interface.
442fb786e Avoid overwriting baseURI field each time getBaseURI is called.
a838e0a82 Updating toString() method to print out character offset. Removing redundant printing of public identifier. We were writing it to the buffer twice.
a31687c9e Adding support for computing character offsets to the scanner. Exposing this information to the XNI and DOM locators. Thanks to Ankit Pasricha for this contribution.
4180a0cf5 Fixing JIRA Bug #1006: http://nagoya.apache.org/jira/browse/XERCESJ-1006
8e8a4e683 Adding some information on the deprecation of HTMLSerializer and XHTMLSerializer.
4849d13c8 Initial support for XML Schema 1.1. Adding datatype validators for the two new duration types as well as some interfaces for actual values: List, Double, Float, HexBinary, Base64. Thanks to Ankit Pasricha for this contribution.
b7a9c7ef0 Build infrastructure for XML Schema 1.1. Thanks to Ankit Pasricha.
918bd6d91 Fixing up indentation in ListDV$ListData.
e7ab2dde6 Fixup license information.
e32732900 Fixing dvjar build target.
34b5d1592 For now make XML Schema 1.1 datatype validators package private.
ba1b625d6 Add manifest to jar for XML Schema 1.1. Also adding info to the usage target about the new schema targets.
1d2452e8c Clearly mark datatype interfaces as being experimental and likely to change.
3f3a6d14c Updating the release document.
6703c08a9 Updating the release document.
a75650e8e Added FAQ for language fixup.
3a47b671b Adding a new initialization method which has a parameter that controls whether an exception is thrown if the URI specified is relative. Also factoring the URI resolution code into an absolutize method as well as a method which returns whether the URI is absolute. This will enable us to avoid throwing an exception for relative URIs, but allow us to detect a relative URI so that we can absolutize it against a base.
65ff598b9 Fixing bug XERCESJ-1010 (http://issues.apache.org/jira/browse/XERCESJ-1010) There is a list of complex types for which we need to check UPA. Somehow the entry for the "root" type was overwritten by the "test" type, so we were not checking UPA for the "root" type.
b23337c80 XML Schema 1.1 - RQ-123: Allow year 0000 in date-related types. Thanks to Naela Nissar, now checking for year 0000.
49b2ab640 Handle December 31st, 24:00:00 year -1 == January 1st, 00:00:00 year 0 which is 1 BCE in the first WD for XML Schema 1.1. Thanks to Ankit Pasricha for catching this.
5d3b8c9dd Updating the release document.
511e7c3d7 Replace references to Bugzilla with JIRA.
974a19a0a Some additional changes for new initialization and absolutize methods.
729d8e223 Performance: Reduce MalformedURIExceptions thrown while expanding system ids. The URI class previously only accepted absolute URIs so at least one exception was always being thrown for relative URIs.
71a74e9c1 Fixing JIRA Bug #816: http://nagoya.apache.org/jira/browse/XERCESJ-816
53c7d2f71 Adding a convenience method for other classes which wish to resolve URIs against the current user dir.
3f9f1fd1f Patch for the implementation of TypeInfo.isDerivedFrom from the DOM Level 3 Core Recommendation.
84954d5a4 Add references to XML application performance articles to the performance FAQ.
528680d16 Update badly out of date FAQ on how to instruct the parser to validate against XML schema only. This has been possible for a long time with JAXP 1.2. Added some examples which demonstrate how to set the schema language property.
100563c2f Cleanup ClassCastException FAQ: - expanding acronyms - fixing some typos
d6d956c1a Update features and properties docs. We should be showing examples which use JAXP rather than ones which use org.apache.xerces.parsers.DOMParser directly.
c380bf307 Committing a patch from Ankit Pasricha to retain timezone information after normalization.
53f949c94 XInclude: Support content negotation for parse='xml'. Restructured interaction between XIncludeTextReader and XIncludeHandler for accept and accept-language attributes. Created new HTTPInputSource class which glues it all together.
00c0d2bf0 Update the release plan.
9389c953b Adding version tag to several classes.
67e50d888 Call setInstanceFollowRedirects by reflection since this method doesn't exist in some earlier JDKs.
fd38b6398 XML Schema 1.1: Adding a type validator for anyAtomicType as described in the 07/16/2004 draft [1].
e16d69116 XML Schema 1.1: Adding a type validator for precisionDecimal as described in the 07/16/2004 draft [1].
25170183c XML Schema 1.1: Various changes for new datatypes.
6141ecc3e If the continue after fatal error feature is enabled we don't want to send out a request with malformed request properties. Nulling them if they're bad so we don't use them later.
90df78259 XML Schema 1.1 makes a distinction between equality [1] and identity [2]. For instance 0.0 is equal but not identical to -0.0 for the float and double datatypes. Also for date/time datatypes, two values representing the same moment in time in different timezones are equal but not identical. For many datatypes, the identity relation is the equality relation.
acb195f3c Updates for changes in PR draft: http://www.w3.org/TR/2004/PR-xinclude-20040930/
a88d00ca1 Avoid creating objects when testing whether two doubles or floats are identical. We can determine whether two 0.0' values are identical by examining their bits.
7acce45c5 Update XNI version to 1.2 to reflect recent changes made to XMLLocator and XMLParseException.
527da50d2 Some documentation updates for XInclude 1.0 PR.
8249c467a Update the release doc.
c977f8084 Fixing some Javadoc warnings.
7af974604 Fixing some Javadoc warnings.
6889a288c Fixing Javadoc warnings.
c18829ab1 Provide support for two custom taglets for javadocs in xerces: @xerces.internal and @xerces.experimental. These tags should be applied to any xerces classes/interfaces or methods that are internal (not to be used by end users) or experimental (highly likely to change or deleted) in the same way as @deprecated is used.
87597bd9b Updates to support new taglets for @xerces.internal and @xerces.experimental. Thanks to Ankit Pasricha for this contribution.
09450b5ed Marking several classes as internal with the @xerces.internal tag.
7e2e895c2 Marking several classes as internal with the @xerces.internal tag.
ef292316c Marking several classes as internal with the @xerces.internal tag.
0490776e1 Marking several classes as internal with the @xerces.internal tag.
f8427cae2 Marking several classes as internal with the @xerces.internal tag.
d66dcea8b Fixing a typo.
8877a5c86 Adding documentation for use-attributes2, use-entity-resolver2 and use-locator2.
35fe25471 Marking several classes as internal with the @xerces.internal tag. Patch thanks to Ankit Pasricha.
0885cd5b2 Marking several classes as internal with the @xerces.internal tag. Patch thanks to Ankit Pasricha.
28fc8d460 Marking several classes as internal with the @xerces.internal tag. Patch thanks to Ankit Pasricha.
e0604b224 Marking several classes as internal with the @xerces.internal tag. Patch thanks to Ankit Pasricha.
addd1807c Fixing an AIOOBE. When validating content declared to be hexBinary we were throwing the exception if the value contained characters U+255 and above.
e140b237a Fixing an AIOOBE. When validating content declared to be base64Binary we were throwing the exception if the lexical value contained characters U+255 and above.
4d19ef4f1 Some cleanup.
ecf8c5298 Make ObjectList consistent with other object lists in the XML Schema API by returning null instead of throwing an exception when the index specified is invalid.
7699e8a7a For QNames, NOTATIONs and types derived from them you cannot determine actual values from the lexical form alone.
325d41149 Remove a couple unused variables.
c1c7c929a In environments where taglets are not supported such as in JDK 1.3 and lower, provide another method with replacing the @xerces.internal and @xerces.experimental tags. This patch is thanks to Ankit Pasricha.
6a9e33e88 Some fixes to allow replacement of @xerces.internal and @xerces.experimental to work on JDK 1.3 or lower. This patch is thanks to Ankit Pasricha.
0cd752517 Reduce memory used by lookup tables.
dee892078 Reduce object creation.
5365543c1 Reduce overhead of creating a ScannedEntity by reusing character buffers. This is accomplished with a buffer pool. Buffers are returned to the pool once scanning of the entity is complete. Also reducing the internal entity buffer size to 512 from 1024.
b98b83060 Patch that fixes some DOM Level 2 events problems such as: - Dispatching of events to a subtree was being stopped from reaching descendants when a higher node in the tree did not have a registered listener. - Sibling of the target node and its descendants were receiving events during dispatch to the target node's subtree. - During replaceData, only one event to mark the replacement rather than two for insert and delete is fired. - DOMAttrModified was not being fired when the text node child of an attribute was modified. - Adds a total field to LCount to tell whether any listeners are registered rather than checking captures + bubbles + default
76aa6562a Update the release doc.
76d3e42bf Fixing JIRA Bug #1023: http://nagoya.apache.org/jira/browse/XERCESJ-1023
87e00f7f4 Fixing JIRA Bug #1016: http://nagoya.apache.org/jira/browse/XERCESJ-1016
861425231 Fixing JIRA Bug #1025: http://issues.apache.org/jira/browse/XERCESJ-1025
06acbe51f Fixing JIRA Bug #1025: http://issues.apache.org/jira/browse/XERCESJ-1025
cdd0ea79f Decode %nn escapes in write() as we do for writeToURI().
4c90d6179 When an annotation has no <documentation> or <appinfo> children we were completely losing the annotation component. This is because the schema DOM stores the textual representation of the annotation on the first child of the current parent. When <annotation> has element content, that's its first child. When <annotation> has no element content, that's its parent's first child. The latter is problematic because only if the annotation is the first child of its parent will we find the text node there. We need to store the string representation in a consistent place so it can be reliably retrieved, perhaps as user data.  In the mean time we look for a text child on annotation if it has no element content. This works for a large number of cases but not all of them.
7980f8504 Schema erratum E1-8 allows non-schema namespace attributes on appinfo and documentation.
ef27fd311 Adding a utility method for retrieving prefixes.
5ef118a28 Both <schema> and <documentation> may have an xml:lang attribute of type language. We need to check that when these attributes appear in a schema document on these elements that their value is valid with respect to the language type. Also fixed a couple bugs where we were incorrectly processing xml* and xmlns* attributes.
43da2130f DOM Level 3 specifies an attribute called strictErrorChecking [1] which when set to false allows an implementation to not test every possible error case. Reducing the amount of checking performed when strictErrorChecking is false. This patch is thanks to Naela Nissar.
ed9dd34ec Fixing indentation from last commit.
8d796ccbe DOM Level 3 specifies an attribute called strictErrorChecking [1] which when set to false allows an implementation to not test every possible error case. Reducing the amount of checking performed when strictErrorChecking is false. This patch is thanks to Naela Nissar.
ef2ee94a4 DOM Level 3 specifies an attribute called strictErrorChecking [1] which when set to false allows an implementation to not test every possible error case. Reducing the amount of checking performed when strictErrorChecking is false. This patch is thanks to Naela Nissar.
414da891f DOM Level 3 specifies an attribute called strictErrorChecking [1] which when set to false allows an implementation to not test every possible error case. Reducing the amount of checking performed when strictErrorChecking is false. This patch is thanks to Naela Nissar.
8d7b130fa DOM Level 3 specifies an attribute called strictErrorChecking [1] which when set to false allows an implementation to not test every possible error case. Reducing the amount of checking performed when strictErrorChecking is false. This patch is thanks to Naela Nissar.
7f734e130 DOM Level 3 specifies an attribute called strictErrorChecking [1] which when set to false allows an implementation to not test every possible error case. Reducing the amount of checking performed when strictErrorChecking is false. This patch is thanks to Naela Nissar.
7d5e2eec3 DOM Level 3 specifies an attribute called strictErrorChecking [1] which when set to false allows an implementation to not test every possible error case. Reducing the amount of checking performed when strictErrorChecking is false. This patch is thanks to Naela Nissar.
199236d0d DOM Level 3 specifies an attribute called strictErrorChecking [1] which when set to false allows an implementation to not test every possible error case. Reducing the amount of checking performed when strictErrorChecking is false. This patch is thanks to Naela Nissar.
93c209843 DOM Level 3 specifies an attribute called strictErrorChecking [1] which when set to false allows an implementation to not test every possible error case. Reducing the amount of checking performed when strictErrorChecking is false. This patch is thanks to Naela Nissar.
1512fef8f Applying patches for getWholeText[1] and replaceWholeText[2] submitted by Naela Nissar with minor modifications.  Also fixing a bad getWholeText test (dom.dom3.Test) that was broken by the fix.
8cab1924e Adding public key to KEYS file
de2de457e Added a schema grammar implementation which synthesizes the portion of the schema for schemas relevant to annotations. This partial schema for schemas will allow Xerces to laxly validate annotations during schema processing.
84e323705 Some clean-up from previous commit. Also, changed the size of the SymbolHash so that all of the element declarations hash to unique locations.
1eb0c4a75 Update release plan.
badf0af2d remove reference to taglet options file
093e42e84 removed need for this file
5fe3f831a Update URL for location of nightly GUMP builds.
14e53fe40 expose date-time information through an interface.
7d131bcf7 Fixing JIRA Bug #701: http://nagoya.apache.org/jira/browse/XERCESJ-701
7a7b74251 Modifying expandSystemId to reject one character scheme names when strict mode is off. The URI class used to this work. We do this here so that we flag likely DOS file names and then fix them up.
05e95ac74 When fixing up windows file names transform C:blah into file:///C:/blah instead of /C:/blah.  The latter is a relative URI with an absolute path. This is later resolved against the base URI. If the base URI didn't look like file:///blah/blah/blah then you'd get unexpected results. For instance if the base URI were http://www.abc.com we'd get http://www.abc.com/C:/blah instead of file:///C:/blah.
be6735303 Fix indentation.
a2f90e1f5 Fix indentation. Convert tabs to 4 spaces.
72f8638e0 constant for generate-annotations feature
5ccad056f bug fixes for toString methods
383d40631 fix bug causing incorrect comparison of date/time related types
ad7ef87f9 Cleaning up SecuritySupport. We no longer need both SecuritySupport and SecuritySupport12 because Xerces now only compiles and runs on J2SE 1.2 or higher. This allows us to tighten up this class even more.
07f9f986a Removing SecuritySupport12. Since Xerces only supports J2SE 1.2 or higher this class is no longer needed.
c6f2aec7b Cleaning up SecuritySupport. We no longer need both SecuritySupport and SecuritySupport12 because Xerces now only compiles and runs on J2SE 1.2 or higher. This allows us to tighten up this class even more.
94ffd12e2 fixes for date/time comparisons
e5ad5ec27 fixes for date/time comparisons
3653197ad Final field "DEFAULT_SIZE" is initialized with a constant expression. Making this static to save some memory per instance of this class.
c00f76848 - expose timezone info - access to enumeration type info
96e3421b5 correct indentation changes to date/time interface
4132e2991 Potential NPEs.
c8c8e2c72 When XSLoader is asked to create an XSModel from multiple sources it's possible that we process the same schema several times. So that we don't get duplicate components in an XSModel, creating a new implementation of XSLoader which wraps XMLSchemaLoader and registers a grammar pool on it.
8da006f0c Fixing a potential NPE.
4c9a754fc Added a specialized grammar pool which knows how to merge two schema grammars with the same target namespace.
bb44e7191 Adding version field to the class' javadoc.
13892ec89 Fixing a few minor bugs.
2ee2bff87 provide access to item type info (for LIST and LISTOFUNION types) for enumeration values.
a9cc7455a no message
de716fd2a Fixing potential NPE with enumeration types.
b98899aca Adding constant for validate-annotations feature.
73a42fae7 Initial cut at support for validating annotations. This is controlled under a new feature: http://apache.org/xml/features/validate-annotations. When this feature is enabled during schema processing, all of the annotations from the root schema document and its subordinates will be validated once they've been fully traversed against all of the available schema grammars, including a partial schema for schemas containing the relevant declarations for annotations.
b7b0f1be6 Eliminating try/catch blocks which caught and rethrew the same SecurityException.
a497503c6 Add validate-annotations option to SAX samples.
66cd69724 Add validate-annotations option to DOM samples.
e62842a06 Update description of options for SAX samples.
c6bbc23a8 Update description of options for DOM samples.
71b9377b9 Update the release document.
c1163753d fix roll over of year when schema 1.1 is not activated
998012dd9 Initial check in for support of synthetic annotations generation. This is controlled with: http://apache.org/xml/features/generate-synthetic-annotations. Turning this on will cause annotations to be generated for elements containing non-schema attributes and not containing an annotation element already.
82d32b2db Fixing a build failure on JDK 1.2. Boolean.valueOf(boolean b) was being invoked, a method that has only existed since JDK 1.4.
602dd7619 Adding validate-annotations feature to list of DOM paramater names.
28e58d947 Some cleanup from previous commit.
0901f0dfe Updating the release document.
d5a37c177 expose lexical value for date-time related data types provide access to (min/max) Exclusive/Inclusive objects
dff54f1e6 Fixing an NPE and a bug with detecting non-schema attributes related to the new generate-synthetic-annotations feature. On an empty element we need to check that we're not currently processing an annotation.
e1c73bca6 Fixing a potential memory leak. Clear the stacks used to support the generate-synthetic annotations feature at the start of each document. If there was a failure on the previous usage, we might not be at depth 0. Also now using a specialized boolean stack for better performance.
9a56b755c Enable validation of synthetic annotations. When both features: "http://apache.org/xml/features/validate-annotations" and "http://apache.org/xml/features/generate-synthetic-annotations" are true then synthetic annotations will be validated.
812d073e9 Recognize generate-sytnethic-annotations feature in parser configurations and propogate to schema parser.
457118c9b Update release plan.
66a70aef6 Update copyright info for API docs, etc...
3f58f8e5c Update copyright for documentation footer -> 1999-2005.
b82ad47c4 add generate-synthetic-annotations option to samples
07e35f199 Updating copyright dates.
32d3baba5 Update description of options for DOM samples.
c4fe0e7b0 Update description of options for SAX samples.
f3930e630 Updating copyright dates.
5fa5e58d5 Adding documentation for generate-synthetic-annotations and validate-annotations.
27f88abcd Thanks to Naela Nissar, adding an interface for exposing decimal values. Editorial changes were made to the javadoc from the original patch.
156a58673 Implementing the new XSDecimal interface. Committing a patch from Naela Nissar with some modifications.
f0fa8daa8 Updating copyright date.
ce6a9ade0 Clean-up unused imports.
a24287b78 Fixing potential memory leaks. If there's a failure the language stacks never get reset. Making sure this always happens on reset. Changing Vectors for notations and unparsed entities to ArrayLists and reusing them.
871b50a42 Performance: Reduce reset cost by not reading features/properties from the parser configuration when it has not changed between parses.
839646838 Fixing copyrights in XInclude source. The files were first contributed in 2003.
3b0cae149 Updating copyright. Missed this on last commit.
0e039e7c5 Updating copyright. Missed this on last commit.
698d3a5e4 Performance: Only copy features to child configuration when they've changed. This not only saves copying but allows the child config to avoid reading its parser configuration on reset.
fcdd7b486 Rewording the message for RootElementRequired.
c2c0427f7 bug fixes for 'generate synthetic annotations'
0a90dbec5 Changing all references of nagoya.apache.org to issues.apache.org.
0e178ab24 Updating copyright notice.
b94164bf3 Updating copyrights for 2005.
b5185639a Fixing JIRA Bug #1039: http://issues.apache.org/jira/browse/XERCESJ-1039
cfb42411e Updating copyright to 2005.
e9fdb613e Allow properties to be set to null on the schema loader. Previously we could not set null values on the configuration because it was backed by a java.util.Hashtable. We now use a HashMap. This allows properties such as the SecurityManager to be removed by the user.
c7c7140fb Fixing a bug. The systemId passed to EntityResolver2.resolveEntity may be an absolute or relative URI. That is it should be the literal system identifier, not the expanded one which resolved from the base URI.
8f8cdfef5 Should take "block=substitution" into account when computing the substitution group for an element.
59512e0fe The pattern for "integer" type was different from what schema 2E says.
55b575977 Updating copyright to 2005.
709e2dcf2 allow imports of multiple schema docs. under the same namespace to be resolved. This is under feature control:http://apache.org/xml/features/handle-multiple-imports. By default, the value is 'false' so the original Xerces behaviour is preserved.
75dac4228 refactoring. changing feature to: http://apache.org/xml/features/honour-all-schemaLocations
ddedda0bc If an instance document contains many errors we could be spending a great deal of time resizing the vector which stores error codes.  Allow this vector to manage its size better. Also, we only read the vector when we're augmenting PSVI so we can avoid the addElement calls if this feature is off.
4e11453e1 Fixing JIRA Bug #1043: http://issues.apache.org/jira/browse/XERCESJ-1043
8f6c85e2c Updating copyright to 2005.
4c9663b11 Fixing typos. "underyling" should have be "underlying".
de628cb47 minor changes to interfaces
7ccf2989d minor fixes
6a5085650 Making a couple of inner classes static. Neither Notation nor UnparsedEntity referenced any fields from the enclosing class.
85d2cf292 Fixing JIRA Bug #1044: http://issues.apache.org/jira/browse/XERCESJ-1044
f31e8d434 Adding three new feature URIs for XInclude processing.
3d879b760 Added support for two new features which control whether base URI fixup or language fixup is performed.
da6c5313c Update Xerces features array. The XIncludeHandler uses these to copy the configuration to a child parser.
02c6e53f5 Added support for two new features which control whether base URI fixup or language fixup is performed.
24eef7b7d Updating copyright to 2005.
5431e9599 fixes to interfaces
4faf10537 Fixing a typo in the javadoc.
b3530fffb Fixing a bug reported by Ritu Raj Tiwari on xerces-j-dev. When resolving an external subset if there's already a DTD in the grammar pool do not read the input source.
33d9cd906 Adding a comment.
09974283a Updating copyright to 2005.
7880451e9 When the type of an element is a union, the [member type definition] will not be available until the end of the element (the exception being if the element is empty). This is required for TypeInfo [1] though we weren't picking it up in endElement. Should be fixed now.
1dfcc8a45 minor fixes
d81bc5ac5 not allow second value to equal 60
931cbeb2a JIRA Issue #1045: http://issues.apache.org/jira/browse/XERCESJ-1045
81624851d Update copyright for 2005.
0fc2f4651 JIRA Issue #1046: http://issues.apache.org/jira/browse/XERCESJ-1046
0ba71eebe minor actual value interface changes
bba0f1c4b Improve performance of SymbolTable.addSymbol(String). In many instances the strings we pass into this method are already internalized. In such cases calling String.hashCode() will yield better performance than calculating a hash code ourselves. Updated hash(char[], int, int) so that it will yield the same result as String.hashCode().
1edc4df07 Fixing a bug in the code snippet that shows how to access PSVI with SAX. The XMLReader is castable to PSVIProvider not the JAXP SAXParser.
02cfd499f changing where un-normalized values are saved.
3a665c585 Accessing static fields in a static way.
df43017c2 Adding serialVersionUIDs to a serializable classes.
20d5a9cdb Adding a serialVersionUID to a serializable class.
8b5cea616 Updating copyright to 2005.
43c9cc252 Adding serialVersionUIDs to a serializable classes.
87494df87 Adding serialVersionUIDs to serializable classes.
ce27bc209 Updating copyright to 2005.
cbc00a4cb Cleanup unused imports.
9799fa207 Updated serialVersionUID.
18bd0b7fd Adding a serialVersionUID to a serializable class.
978731bd6 Adding a replace to allow DOM Level 3 target to compile again.
ee4ac5fa6 Moving @xerces.internal before @author.
bcd5cec6a Adding documentation for honour-all-schemaLocations and three new XInclude features.
e05257e5c Improve description of XInclude features.
cd5595b51 Mention new XInclude features as an option for disabling base URI and language fixup.
ff00cf0c5 Updating the release document.
a609aa639 Updating copyright to 2005.
bbb7cc060 Updating a couple FAQs for SAX 2.0.2.
a86b06f1a Minor update.
f9ba9eef7 Rewording text used for @xerces.internal and @xerces.experimental tags.
480cd2788 Updating text generated by taglets for @xerces.internal and @xerces.experimental.
6abafd28b Updating the taglets jar.
b93997ed9 fix unreported warning
acdb5a61a fix time comparison
9b89dd33d Allow Xerces to be built with HP JDKs.
1258ff7d3 Fixing a bug. In schema documents, namespace declarations on local element declarations were not recognized when referred to.
18ac925f5 Updating copyright for 2005.
6bdcc196f Fixing a bugs related to JIRA Issue #1059: http://issues.apache.org/jira/browse/XERCESJ-1059
b391c3958 Eliminating some control characters that found their way into this file.
55fd52d4f Only report a warning if input was provided.
3792a4726 Fixing JIRA Issue #1062: http://issues.apache.org/jira/browse/XERCESJ-1062
33e300211 The XInclude spec says that children of include elements which are elements not in the XInclude namespace and descendants of these elements are to be ignored.  We were not ignoring all such content.
a0ba98230 Adding serialVersionUID to serializable classes, in the process also fixed formatting.
08909f749 Adding serialVersionUID to serializable classes.
4c446166b Adding serialVersionUID to serializable classes.
4dd89a548 Adding serialVersionUID to serializable classes.
f5d35c859 Update list addresses in the documentation.
7fb34e885 Update list addresses in the documentation.
e5fbb688a Make ObjectFactory classes final.
8c697588d Fixing JIRA Issue #1063: http://issues.apache.org/jira/browse/XERCESJ-1063
73e30aa6d Update copyright for 2005.
aa793edc3 Fixing a bug. In the loop handling a CDATA section we should be comparing the current position against the end offset, not the length.
43d78eb3c Fixing JIRA Issue #815: http://issues.apache.org/jira/browse/XERCESJ-815
903230f2e Fixing JIRA Issue #1065: http://issues.apache.org/jira/browse/XERCESJ-1065
850c34a5c Updating the release plan.  Setting June 24th as the tentative release date for Xerces 2.7.0.
255887a76 Adding in stubs for getFeature/setFeature so that the code compiles with JAXP 1.3.
d279a36a3 Moving SAX support up to SAX 2.0.2.
01ddb3007 Moving DOM support up to DOM Level 3.
c492dc876 Moving DOM support up to DOM Level 3.
fd82ca8b6 Removing a comment that is no longer relevant.
7ad1c870b Updating samples so that they compile with DOM Level 3.
9a2125e42 Updating tests so that they compile with DOM Level 3.
c0e5a622b Upgrading to JAXP 1.3. This jar was built from xml-commons HEAD today.
96762d13e Removing DOM Level 3 interfaces from Xerces source tree. We now get this support from xml-commons through JAXP 1.3.
24f319e85 Removing org.w3c.dom.xpath interfaces from Xerces source tree. These belong in xml-commons and will become part of xml-apis.jar.
7791a58ed Moving XMLSerializer and XML11Serializer up to DOM Level 3.  I missed these two yesterday.
294ab1cfb Update release plan.
9af59dcde Adding a method to allow subclasses to bypass getFeature() on this class.
d648bd5fc Adding a new parser configuration for XInclude. JAXP 1.3 supports XInclude so the default configuration must also support it. We leave the existing XIncludeParserConfiguration as is since it is useful for the XInclude processor to have a hard wired config available. The new config differs from XIncludeParserConfiguration in that XInclude processing can be toggled on and off, XIncludeHandler is only added as a component if XInclude processing is enabled and XInclude namespace support is only used when XInclude processing is on.
de45af7f4 Upgrade default parser configuration to XIncludeAwareParserConfiguration.
289067179 Upgrade default parser configuration to XIncludeAwareParserConfiguration.
aa24e8f47 Upgrade default parser configuration to XIncludeAwareParserConfiguration.
0c47fbdd4 When href is absent and parse="text" the source infoset should be included as text. We had been reporting a fatal error for missing an xpointer which isn't even allowed when parse="text".
a74c5a6fd actual value interface changes for JAXP 1.3
c53fe4a2d message formatter used by JAXP 1.3 datatype impl
aa6e9386d The license should be Apache v2.0 though the RI contribution had the old v1.1 license, for some reason containing dates earlier than JAXP 1.3.
9a7b063a5 Adding a license to this file.
8416f7d6d datatype message file
4fa7231a1 bug fixes - reset on XMLGregorianCalendar - compare duration - gMonth lexical value fix
d151df115 Fixing a problem with UTF-16. The text reader was stripping off the byte order mark making it impossible for the decoder to determine the byte order causing garbage data to be sent as character events.
27ba33f7a Adding a new error message for same document references.
1a36c93d0 Report a resource error when parse="xml", href="" and an xpointer has been specified. This is a same document reference which this processor cannot handle because of its streaming nature.
13fbe77b4 Adding a META-INF/services file for the DatatypeFactory.
56fcece63 Miscellaneous updates for JAXP 1.3 including META-INF/services file for the DatatypeFactory.
6e83bd4a8 Updating SAX samples for XInclude features.
18a85d2f9 Updating DOM samples for XInclude features.
6b191f9c7 Miscellaneous cleanup to DOM samples.
46fe449cf Abstract schemas have been deprecated for several releases. Removing the sample to discourage new usage.
185d5ab98 Adding serialVersionUID to serializable classes.
4aa0b2916 Cleaning up imports.
86dd45ecc Adding serialVersionUID to serializable classes.
2d0d87c58 Cleaning up many warnings.
6be896330 Miscellaneous cleanup to DOM Level 3 tests.
dfd0449c8 Cleaning up imports.
ec8dcf473 Cleanup DOM ID test.
c98ff55e3 Cleanup DOM memory test.
7cdcc7a47 Cleanup DOM range tests.
4298398eb Cleanup more DOM tests.
ac7169a1f Cleanup of more parser tests.
3893a2107 Fixing a bug. It was possible that the XIncludeHandler could be used without being properly reset.
fae4903cf Updating documentation for SAX and DOM samples.
8c5999b54 XIncludeAwareParserConfiguration is now the default parser configuration. Updating the docs accordingly.
6be43dbaa Updating installation document for JAXP 1.3.
da62e7ecc Jira Bug#946 Fix: org.w3c.dom.ls.LSParser.abort() throws unexpected RuntimeException
57d42d116 bug fix
aab72ad1e Jira Bug#993 Fix:Identity-constraint validation on cross datatypes is incorrect
b71765686 Access static methods in a static way.
f389cbf28 bug fixes
20c07094c The XInclude spec says that children of include elements which are elements not in the XInclude namespace and descendants of these elements are to be ignored.  We were not ignoring all such content.
5aeea16e0 Fixing a typo.
aeb5879fe The XInclude 1.0 REC [1] states that: "It is a fatal error to attempt to replace an xi:include element appearing as the document (top-level) element in the source infoset with something other than a list of zero or more comments, zero or more processing instructions, and one element."
781e66788 Fixing a bug. In endElement() we should be decrementing the result depth regardless of whether the XIncludeHandler has a document handler.
4f736e27a actual value interface sample
aa7cd40aa jaxp 1.3 datatype API sample
acb37e01d update
7d1c436c5 update
77e5dfcb1 Adding a license to the file.
a13272bf1 Beginning of Validation API integration. DraconianErrorHandler was in org.apache.xerces.util in the RI. Moving it into org.apache.xerces.jaxp.validation.
a56cac126 Access singleton with static accessor rather than directly. Added a few comments to the code.
d018c1141 Merging in ReadOnlyGrammarPool from the RI.
53412258b Adding a new interface for supporting multiple Schema implementations. This exposes a grammar pool and whether to ignore schema locations; the same information exposed by SchemaImpl in the RI.
79612a69c A memory sensitive grammar pool implementation. Grammars stored in this pool are softly reachable and may be cleared by the garbage collector in response to memory demand. Grammar equality is determined using both the target namespace for the schema and the schema location, so this grammar pool is suitable for the Schema object created from SchemaFactory.newSchema().
1608ddfa9 The RI had one concrete implementation of Schema, creating 4 concrete implementations in Xerces to handle different scenarios.
aff4a5268 Merging in the Util class from the RI.
fd9219611 Fixing a typo.
448024d81 An XMLInputSource analogue to javax.xml.transform.dom.DOMSource, useful for transfering contents of a DOMSource down to the schema loader. Also allows an XNI entity resolver to return DOM input for schema includes and imports.
490930f30 Correct indentation.
5553273bb An XMLInputSource analogue to javax.xml.transform.sax.SAXSource, useful for transfering contents of a SAXSource down to the schema loader. Also allows an XNI entity resolver to return SAX input for schema includes and imports.
c1848f9f7 Making a couple classes final.
2a84c00c0 Making this class final and package private. It's only used within this package by DOMErrorHandlerWrapper.
d93dfa338 A message formatter for JAXP Validation API error messages.
15d59073a Remove experimental warning from datatype interfaces. They're final now.
2dd76de65 Minor javadoc change.
8ae181e2d Updating the release plan.
341059b0b Some cleanup.
473030de5 Initial check-in of the SchemaFactory. Merging this code in from the RI. Instead of passing Source objects directly to the schema loader we repackage them in XMLInputSource objects.
54efe5d50 Rename fields to conform to project coding standards.
b87f7d9cc Reuse DOMEntityResolverWrapper.
61ac59700 Make schema factory configurable. Allow all features and properties to be set that are supported by the schema loader. If a SecurityManager has been set treat that as if the secure processing feature has been set.
181ef10c9 Fixing a bug. We test equality of ShortLists in XSSimpleTypeDecl, however since there was no equals() method on this class, we were falling back to Object.equals() which compares by reference.
cc8e53282 As suggested in JIRA Issue 1077: http://issues.apache.org/jira/browse/XERCESJ-1077
3c06b2c1c Make Duration and XMLGregorianCalendar implementations package private.
76d5c68b4 Fixing a typo.
58bd177f3 Check for duplicates using the expanded system identifier rather than comparing the base URIs and system identifiers. The XInclude REC allows this. The processor was missing duplicate notations/unparsed entities which had equivalent expanded system identifiers.
d24713a1a Add a description for the sample.
586de9cf8 Fixing JIRA Bug #735: http://issues.apache.org/jira/browse/XERCESJ-735
993862089 Adding an internal feature which restricts the schema validator to only using the schema components provided from a grammar pool. This has similar semantics to the ignore schema location hints feature in the JAXP 1.3 RI.
ab616c507 A component manager for the validator. Unlike the one in the JAXP 1.3 RI, this one allows the application to get and set the features and properties supported by the components used by the validator.
2148479d0 A helper interface for SAX, DOM and stream input into the Validator.
b1b69690a DOM validation support.
b8689e1c7 Support for stream validation. Rather than going through SAX use XNI since there's no event consumer. After creating the parser configuration, we cache it in a SoftReference for future use.  If there's memory demand the garbage collector should clear it to reclaim some memory.
c3802c0cb Merging in ValidatorImpl from the RI with many modifications. Use native support for DOM and stream validation rather than identity transformers and SAX. Manage the configuration with a component manager rather than the ValidatorHandler. Re-implemented reset so that it interacts with the component manager rather than the validator handler.
2fc9967f8 Hooking in ValidatorImpl.
e7041f38b Use WeakReferenceXMLSchema for SchemaFactory.newSchema().
bcd3f2180 - Use ErrorHandlerWrapper for SAX ErrorHandler. - Fixing a bug in isSchemaLanguageSupported; this SchemaFactory only supports the W3C XML Schema standard.
4aab949f9 Message file for JAXP 1.3 Validation API errors.
300fb368c Adding a META-INF/services file for the SchemaFactory.
ba4592760 Created a grammar pool wrapper to avoid setting a grammar pool on the configuration each time newSchema() is called. This will cut down on the reset time if the configuration is never changed.  Hooking in the other two schema implementations: SimpleXMLSchema and EmptyXMLSchema.
7d172b336 Hooking in META-INF/services file for the SchemaFactory and fixing a build failure.
5d91dc496 Deprecating several static methods that mutate the encoding map.
9c9645095 For every IDC value we create a new Integer for the type and store it in a vector. To avoid this unnecessary object creation we use a specialized vector for short values.
60eea5441 In clear(), clear all of the vectors.
357321f31 Avoid more object creation. Do not create or use the vectors for value types unless nececessary. Usually each element in these vectors is the same value. If they're all equal just use a single field to store and access the value.
c8876a376 Fill in built-in kind field in setRestrictionValues(), setListValues() and setUnionValues().
40ac1510d Performance:
54a2313c7 Avoid object creation. When a substitution group contains no members, use the empty list singleton instead of creating a new one.
4f41e887f Recover some more performance in the schema validator by deferring creation of the XSModel. Only create the XSModel in the PSVI if the application requests it.
392f972e3 Set system identifier on the locator. This is not only useful for errors but also provides a base URI for any schema location hints in the document.
51371adc4 If the validation root is not the document element we must go up the ancestor chain to generate the namespace context. Created a namespace context which will walk up the ancestor chain of the DOMSource. It will only read the ancestor chain if there is no namespace/prefix mapping in the main namespace context.
e150cd779 In traverseLocal should be checking that the XSSimpleType is an instanceof XSSimpleTypeDecl before casting to it. Problem caught by Dave Brosius on j-dev@xerces.apache.org.
19526ea93 Eliminate unused import.
efd09a56f Making inner classes package private.
36d5f7eaa Support for SAX input into the schema loader. Much thanks to Jack Z. Wang who co-authored this class with me.
7ab071a53 A SAX wrapper around an XNI locator. The new SchemaContentHandler requires this.
854833347 Adding version information.
dd769bfa1 Support DOM input into the schema loader. Many modifications were made to XSDHandler in order to support direct usage of arbitrary DOM implementations. Since the input could be an Element node (i.e. the root of an inline schema) we now keep track of the schema root rather than the document that owns it. Much thanks to Jack Z. Wang for providing large portions of this support and Sandy Gao for reviewing the changes.
d0691e5eb Created 3 new samples which demonstrate usage of the JAXP 1.3 Validation API: SchemaFactory, Schema, Validator, ValidatorHandler and TypeInfoProvider.
bbfb19db3 Include JAXP samples in xercesSamples.jar.
699565707 Renaming DatatypeAPITest to DatatypeAPIUsage plus some minor formatting changes.
552db2dbf DatatypeAPITest was renamed to DatatypeAPIUsage.
634341df8 Updating xml-apis.jar with the latest fixes from xml-commons.
7c6172de4 Upgrading to Apache 2.0 license.
1828bb046 A sample which demonstrates usage of the JAXP 1.3 Parser API. Much thanks to Ankit Pasricha for writing large portions of this sample.
492334bf0 Adding a new page for JAXP samples.
5364c4e74 Hooking JAXP samples page into the documentation.
b3ae4afd2 Marking a few methods as final.
70c63ce31 Mark message formatter as final.
373c889b5 Marking Util class as final.
1e5c7e03d Minor documentation fix.
0504db697 Upgrading source to JAXP 1.3.
0876bfac4 Use new source package and build javadocs for new JAXP 1.3 packages.
05c7959b0 Remove separate DOM Level 3 API docs. These are now grouped with the regular API docs.
a5e0067ce Javadoc fix.
529e08099 Updates for JAXP 1.3.
04bf03f25 Update xerces.properties sample so that it points to the current default parser configuration.
e478f4a07 Fixing JIRA Issue #1082: http://issues.apache.org/jira/browse/XERCESJ-1082
ec492baa3 Fixing JIRA Issue #1082: http://issues.apache.org/jira/browse/XERCESJ-1082
f645be58d Removing an unused method and cleaning up unused imports.
8de0a309d Should be checking that finalSet is equal to DERIVATION_NONE. Problem caught by Dave Brosius on j-dev@xerces.apache.org.
523c28d57 Merging in schema and XInclude methods from the RI.
598c34368 Integrating support for XInclude and getSchema(), plus some code reorganization.
a4dc29030 Adding support for the secure processing feature. In the JAXP 1.3 RI it's stored in the feature Hashtable which requires special handling not to propogate the feature to the underlying parser. To simplify the logic here we just pass the feature to the parser constructors as a boolean.
fff398d00 Adding an option for toggling on/off secure processing.
24459a147 Fixing a typo.
2282f8af3 Updating usage information for Parser API sample.
276edcfbd Schema bug: namespace declarations on local attribute declarations were not recognized. should pop the namespace stack *after* we process the attribute declaration.
603c61761 Updating xml-apis.jar and xml-commons-external-src.zip with the latest source from xml-commons.
0517d697c Generate Javadocs for org.w3c.dom.xpath.
bd75ced32 Adding org.w3c.dom.xpath to the API page.
5c880c542 Fixing a bug from a previous commit.
d0b8e73aa Fixing JIRA Issue #1070: http://issues.apache.org/jira/browse/XERCESJ-1070
e9d1a98f6 Fixing incompatible change made to XSConstants for XML Schema 1.1 support.
9f500fc52 Manifest updates for JAXP 1.3.
21cc1d4f1 Merging in AttributesProxy from the JAXP 1.3 RI and added Attributes2 methods.
fc6590095 This class should implement Attributes2 not Attributes.
6e42974ec Merging in changes from the JAXP 1.3. Make XSComplexTypeDecl an implementer of org.w3c.dom.TypeInfo.
eba0a7c08 Merging in changes from the JAXP 1.3 RI. Make XSSimpleTypeDecl an implementer of org.w3c.dom.TypeInfo.
bd5d49c9f Fix to allow adoption of nodes between deferred and non-deferred Xerces DOM Documents.
1ae0cc3a6 Additional updates to DOMConfiguration in support of the DOMNormalizer bug fix http://cvs.apache.org/viewcvs.cgi/xml-xerces/java/src/org/apache/xerces/dom/DOMNormalizer.java?r1=1.60&r2=1.61&diff_format=h
2abfd83cd Merging in ValidatorHandlerImpl from the JAXP 1.3 RI with the following fixes, enhancements and other changes: - made the class an implementer of PSVIProvider; PSVI provided by the TypeInfoProvider - made the class an implementer of DTDHandler and EntityState to support the xs:ENTITY type - made the class an implementer of ValidatorHelper to support SAX input from a Validator - made the class an implementer of XMLDocumentHandler; receives events directly from the schema validator rather than going through XNI2SAX - delegate all set/getFeature set/getProperty calls to a component manager which supports all features and properties supported by the schema validator - if an instance of Attributes2 is passed to startElement store specified/declared in XMLAttributes - to provide base URI to LSResourceResolver make ResolutionForwarder implement EntityResolver2 - if SAXSource is empty and we create a SAXParser attempt to set a security manager if one was installed on the ValidatorHandler - performance: avoid creating QName and XMLString objects for each XNI call which takes these parameters - performance: avoid symbol table lookups when we know the strings have already been internalized - performance: send startPrefixMapping/endPrefixMapping calls directly to the content handler rather than iterating over the NamespaceContext later - bug fix: skippedEntity should call the method on the ContentHandler not itself - bug fix: startPrefixMapping/endPrefixMapping, prefix and URI must be passed to the SymbolTable
555ea6bb8 Delegate to ValidatorHandlerImpl for SAX validation. Make this class an implementer of PSVIProvider to allow applications to access PSVI during a SAX validation episode.
774b4d4bc Hooking in ValidatorHandlerImpl.
b8f55d6a0 PR: http://issues.apache.org/jira/browse/XERCESJ-916 Submitted by:	Naela Nissar / nnissar@ca.ibm.com
001327573 Adding an error message for TypeInfoProvider.
bc85acfa4 Provide error message for TypeInfoProvider illegal state.
7514cf82a Merge in ignore-schema-location-hints feature from the JAXP 1.3 RI. Renamed it use-grammar-pool-only so it covers other cases beyond just ignoring schema location hints.
315a1d388 Fix for defect http://issues.apache.org/jira/browse/XERCESJ-865
8b5295565 Fix formatting of schema error messages.
d8dbdcdfa Adding an FAQ on accessing PSVI with the JAXP 1.3 Validation API.
4963078a6 Removing an unused static field.
5f8cea55e Remove META-INF/services/org.apache.xerces.xni.parser.XMLParserConfiguration from xercesImpl.jar. xercesImpl.jar should not contain a META-INF/services entry indicating which configuration the parser should use. It prevents applications further down the classpath from overriding the parser's default and may also cause an incompatible mix of classes to be loaded leading to a failure such as a NoSuchMethodError.
6230baf80 Include javax.xml.xpath on API docs page.
52dc86560 Update XNI samples to use the new default configuration: XIncludeAwareParserConfiguration.
a7a539640 Make PSVIConfiguration extend XIncludeAwareParserConfiguration.
088733522 Making anySimpleType comparable with string.
6e0e72fc1 Remove META-INF/services file for the parser configuration from copy of Xerces used by build.xml.
b6e300154 Call isXIncludeAware and getSchema methods on the factory implementations directly rather than making virtual method calls on the abstract base factory classes. This will prevent a failure at runtime on a JDK 1.4 environment.
098f646a2 Added an FAQ on usage of JAXP 1.3 on JDK 1.4.
546b98c0f Fixing dvcompile target.
4e9e8c2ac Documentation updates for DOM Level 3.
0d805b14d Fixing a typo.
e6979d270 Completing the integration of JAXP 1.3 XInclude support.
2d82fb804 - Updating description on several message files. - A few were missing the BadMessageKey and FormatFailed messages. Adding the two messages to files which did not have them.
553acbc47 Some minor improvements.
3be83008b Minor documentation improvements.
84cc98e68 Updating the release plan.
0dc1609d2 Updating the release document.
c33a28c64 Updating SAX information and fixing some broken links.
6abaa4027 Added an import for XMLSchemaValidator.
8e0ad24ff Implementing reset for the DocumentBuilder. Restore the initial error handler and entity resolver.
dfa8c4cb7 Phase #1 of SAXParser reset. Restore initial handlers.
11e6ed444 Completing the implementation of reset.
20501407f Adding a new error message.
6eb61874f Making the JAXPSAXParser constructor package private to eliminate a generated anonymous class.
566d12238 Support DocumentBuilderFactory.setFeature/getFeature for all existing Xerces features.
045b3820c Formatting error messages provided for SAXNotRecognizedException and SAXNotSupportedException.
368abbce5 JAXP 1.3 added a setFeature method to DocumentBuilderFactory. Document this method as the preferred way for setting features on a DocumentBuilderFactory.
e455b2c24 Initial support for SAXParserFactory.setSchema() and DocumentBuilderFactory.setSchema().
4f27a51af Getting rid of DOM Level 3 targets as these are now part of the standard build.
6a8a66cd4 Modifying dom.dom3.Test to set the schema-type on the DOMNormalizer to XML Schema"http://www.w3.org/2001/XMLSchema".
6bd6337ff Echo the names of the DOM Level 3 test classes before they run.
08055d2bd Merging in LocatorProxy from the JAXP 1.3 RI.
894a1fdb8 Merging in ErrorHandlerProxy from the JAXP 1.3 RI.
8301519e0 Merging in from the JAXP 1.3 RI.
7a6a29a6f Fixing a bug. It was possible that the error handler would report the same error twice.
a7bb5d3c0 Plugging in JAXPValidatorComponent to support validation with third party Schema implementations.
b7cf3c745 Use XMLEntityManager for entity resolution.
2524e1871 Updating xml-apis.jar and xml-commons-external-src.zip with the latest source from xml-commons.
0a6ba0de0 Updating the release plan.
da546c9af In features/properties examples encourage setting of namespace awareness.
1ba12ea04 In XInclude example encourage setting of namespace awareness.
c12fd6946 A TypeInfo.getTypeName(...) bug fix.
1053418f9 When creating a DocumentBuilder, check that if a Schema has been specified that neither of the schema properties have been set.
96f5c6111 Clean-up unused imports introduced in the last commit.
52265dfd0 An XMLDTDHandler which records the names of unparsed entites in the DTD. We need this component in order to support the xs:ENTITY type.
bab6fe5b1 Adding a version tag to several classes.
727257f5a Supporting validation of xs:ENTITY and also fixing a bug. We need to use a different ValidationManager than the one in the configuration so that the validators in the pipeline don't interfere with the one for the Schema.
15ec01bde Clear the map of unparsed entities before reuse.
fc1373bba Upgrading to xml-commons-external-1_3_01.
dd7feaea7 Mark xml-commons work as complete.
5a1e552d7 Marking several classes as final.
aa5788094 Refreshing xml-commons-external-1_3_01.
bbd33f7ee Adding a version tag.
a938108c3 Like Xerces-C++, adding the project charter to the documentation: http://svn.apache.org/viewcvs.cgi/xerces/c/trunk/doc/charter.xml?view=markup
f5d45971f Updating the release doc and adding a description of Xerces-J 2.7.0.
33b2bb963 Fixing a couple bugs with respect to managing the NamespaceContext during DOM validation.
dca0edabd Update copyright for 2005.
e529fd488 Implementing first edition erratum E2-67: http://www.w3.org/2001/05/xmlschema-errata#e2-67
53ec8ba99 Make the home link point to xerces.apache.org.
9231cb3a3 Fixing JIRA Issue #1083: http://issues.apache.org/jira/browse/XERCESJ-1083
090ea6829 Fixing JIRA Issue #1078: http://issues.apache.org/jira/browse/XERCESJ-1078
5607854a2 Fixing JIRA Issue #1080: http://issues.apache.org/jira/browse/XERCESJ-1080
537c8bd13 Fixing JIRA Issue #1047: http://issues.apache.org/jira/browse/XERCESJ-1047
90e2d35c8 Fixing JIRA Issue #1073: http://issues.apache.org/jira/browse/XERCESJ-1073
caf98da7c Performance: Every time parse is invoked on the JAXP SAXParser it sets the entity resolver and error handler which causes the underlying configuration to change. This forces components to read the whole config on every parse when they could otherwise break after examining the PARSER_SETTINGS feature. Instead of creating a new XMLEntityResolver or XMLErrorHandler each time setEntityResolver and setErrorHandler is called, set the entity resolver or error handler on the existing XMLEntityResolver or XMLErrorHandler.
6bca4e973 Bug fix: When checking enumerations, two values are comparable if they're in the same value space.
9ee823b76 Adding a link for xerces.apache.org.
3e20fe47a In anticipation of Xerces-J's move to SVN, change the 'CVS Repository' label to 'Source Repository'.
27c8b1cab Making menu consistent with Xerces-C++ (where it makes sense). Added links to the mailing list archives.
c89d914be Move computation of primitive type outside of the loop.
b83672fd3 Fixing a bug. When a SAXSource has been specified as an input to the schema loader we weren't setting an error handler on the XMLReader.
f75c5bfdf Remove info about getting access to DOM Level 3 functionality. DOM Level 3 is part of the standard distribution now.
7b5ef9ebb Added info on how to create and set a javax.xml.validation.Schema on a parser.
2d0063d98 Adding a new PGP key for myself to the KEYS file.
ee691c0e0 Fixing a static mutability issue. Clone the recognized features/properites arrays before returning them to the caller.
84a3ae31d Fixing a bug with validation of float and double values. We delegate to Java's Float.parseFloat() and Double.parseDouble() methods when validating float and double values. These methods particularly in Java 5.0 allow lexical forms which are not allowed by the schema spec including: Infinity, -Infinity, +NaN, 0.2f, 0.7d and 0x1234.abcdP123. We now pre-screen the string for valid characters before passing it to the library methods.
f1bc48142 Fixing a bug affecting the following types: date, gDay, gMonthDay, gMonth and gYearMonth. We were accepting garbage immediately before the time zone, so a value such as "1111-11-11 some arbitrary text -05:00" was passing through without an error being flagged.
61a699515 The error message for invalid date values was reporting that the value is an invalid dateTime value. We weren't overriding getActualValue(String, ValidationContext) from DateTimeDV.
a86130bca xml-apis.jar now contains JAXP 1.3. Updating the docs to reflect that.
00feeda33 Note that Xerces-J also supports javax.xml.datatype and javax.xml.validation.
c707c2efc Prepare for Xerces-J 2.7.1.
8391b5ffc Upgrading to xml-commons-external-1_3_02.
ea2f0156e Fixing JIRA Issue #1088: http://issues.apache.org/jira/browse/XERCESJ-1088
52937e003 Fixing JIRA Issue #1090: http://issues.apache.org/jira/browse/XERCESJ-1090
52ea83a88 If the validator is reading from a StreamSource the messages for well-formedness errors weren't being formatted correctly. We need to register a message formatter. Should be fixed now.
b4780aa75 Register an error handler with the DocumentBuilder.
0a6bd04d2 When schema validation is enabled using DOM Level 3 the parser should be checking all schema constraints including UPA, so the schema-full-checking feature should also be turned on.
9721110e5 Fixing a bug. When the JAXP schema location property is set, schema full checking errors were being reported to a local error reporter which from a parsing context didn't contain the application's error handler. Errors reported in this context would always be reported using the default error handler which writes to the console.
083f42dfd Fixing JIRA Issue #1089: http://issues.apache.org/jira/browse/XERCESJ-1089
41c04714d Updating the JAR manifest to reflect that v1.3.02 of xml-commons external is now in use.
3a4fef86c Improve the description of the schema validation feature by emphasizing that schema-full-checking must be enabled in order for Xerces to perform expensive schema checks such as UPA.
2f9ddb369 Adding three new FAQs for questions recently raised on the j-users/j-dev lists.
06093d857 Updating the release doc for Xerces-J 2.7.1.
9477f2cc2 Updating the changes section for Xerces-J 2.7.1.
5f7ea79be Adding a note about what happened to the org.apache.xerces.dom3 package.
111798bd8 Fixing a typo introduced in the previous commit.
bcbcb082f Fixing a broken link to GUMP.
708057643 Fixing JIRA Issue #1094: http://issues.apache.org/jira/browse/XERCESJ-1094
4df56f2fe Attempting to fix JIRA Issues #1054 & #1076: http://issues.apache.org/jira/browse/XERCESJ-1054 http://issues.apache.org/jira/browse/XERCESJ-1076
dedff1ea6 Fixing a typo in the charter.
23ee1afb4 Fixing a bug. It was possible to append a second root element or DocumentType node to a deferred DOM if the children of the deferred node have never been synchronized.
ba95a0671 Fixing JIRA Issue #1097: http://issues.apache.org/jira/browse/XERCESJ-1097
c56bca22f Fixing a bug. When the schema root provided is not the document element there may be namespace bindings in effect from ancestors of the schema root.  If we cannot find a URI mapping for a prefix in the context of the schema root we must look at the ancestors for a binding.
4ca479646 Fixing a bug. When the schema root provided is not the document element there may be namespace bindings in effect from ancestors of the schema root.  If we cannot find a URI mapping for a prefix in the context of the schema root we must look at the ancestors for a binding.
e168accfb Updating copyright.
5a20aefbd Fixing a bug. Xerces' SAX parser implements both the Parser and XMLReader interfaces. If an application uses an instance both as a SAX1 and SAX2 parser it was possible that a document handler or a content handler from a previous parse would never be cleared.
f1699c1e9 If a LexicalHandler has been specified on the SAXResult forward lexical events from the parser to the application's LexicalHandler.
5cbac3b70 Fixing a bug. If the start document event has been seen on the child pipeline it means the resource was successfully opened and we started reporting document events. If an IOException is thrown after the start document event we had a failure midstream and cannot recover. We were treating this condition as a resource error and allowing a malformed stream of events to be reported by the parser.
429b7c42a Expanding on the previous fix. If parse="text" and an IOException has been thrown after we start reporting content we cannot recover from this error.
b635a9585 Fixing a typo.
bb51c50d2 Fixing a bug. An ArrayIndexOutOfBoundsException could be thrown when processing a document with a DTD with schema validation enabled. In such a case the schema validator removes itself from the pipeline if no schema is found for the document. These updates weren't being propogated to the child pipelines. Should be fixed now.
4a25f6357 Reverting part of the previous commit. DTD events from the child pipelines should never be propogated to the main one.
bb92d4d79 Fixing a bug. When an annotation has no <documentation> or <appinfo> children a text child containing the annotation text was stored on the first child of its parent. Only if the annotation is the first child will we find the text node there, otherwise it is lost. We now store the annotation text in a field on the <annotation> element node where it will always be found.
112416cc0 Updating copyright for 2005.
edc069a60 Restore serialization compatiblity with Xerces 2.6.
96146065a Restore serialization compatiblity with Xerces 2.6.
d10e678ea Restore serialization compatibility with Xerces 2.6.
9c79a00a9 Fixing JIRA Issue #1101: http://issues.apache.org/jira/browse/XERCESJ-1101
50b49c2cb Creating a version of DTD grammar which balances syntax trees.
d8371f2ae Added a protected method for use by BalancedDTDGrammar.
474233ba1 Fixing a typo from the previous commit.
748ae95b9 Adding a feature which controls whether the syntax trees generated while parsing a DTD are balanced. Turning on this feature prevents deep recursion for large content models. We could extend this to the schema syntax trees in the future.
7dc48012b Fixing a typo.
4f270ddbb Include the new balance-syntax-trees feature in the Xerces features array. The XIncludeHandler uses this array to copy the features of a parser configuration to a child pipeline.
4100c7b51 The NOTICE file is ASCII not binary.
96eb3d301 We've moved from CVS to SVN. Updating the link to the source repository.
fa950a154 Replace all references to CVS with SVN.
d01ba7155 Updating XJavac task to support compilation on IBM J2SE 5.0.
7c6fb012a Implementation-Vendor and Implementation-URL are supposed to specify which organization maintains the implementation and where it can be downloaded, in this case the ASF.
a3a18d00a JIRA Issue #1105: http://issues.apache.org/jira/browse/XERCESJ-1105
e3a0e511e Fixing JIRA Issue #1106: http://issues.apache.org/jira/browse/XERCESJ-1106
0611fbb89 Adding documentation for the validation/balance-syntax-trees feature.
b4004bb1a JIRA Issue #1107: http://issues.apache.org/jira/browse/XERCESJ-1107
7b1831a95 Restore serialization compatibility with Xerces 2.6.
8279b01fe Removing an unused local variable.
1420ac488 Restore serialization compatibility with Xerces 2.6.
b34ee186f JIRA Issue #1110: http://issues.apache.org/jira/browse/XERCESJ-1110
92a0c1d88 Add honour-all-schemaLocations option to SAX samples.
fbfaa3644 Add honour-all-schemaLocations option to DOM samples.
2c8329e82 Update description of options for SAX samples.
ca0353ffb Update description of options for DOM samples.
400fb31d1 Fixing an AIOOBE.
aa75aed35 Adding option to select schema language to validation samples.
38c2bf234 Update description of options for JAXP samples.
4fae975f8 The field in which we store annotations while building the complex type is never cleared when we start a new type. This is only a problem when we must traverse another complex type to complete the one we were traversing. This occurs when we haven't yet processed the base type. The base type was inheriting annotations from the sub type. Should be fixed now.
bdc72ee60 Fixing JIRA Issue #1111: http://issues.apache.org/jira/browse/XERCESJ-1111
267163239 Fixing a bug which caused an NPE to be thrown from the scanner when the continue-after-fatal-error feature is enabled. If the document being parsed is empty, the version detector reports the error at which point we should stop parsing because there's no input.
4424d9239 Removing an unused field.
afe851780 Cleanup imports.
67c7a45c4 Fixing JIRA Issue #682: http://issues.apache.org/jira/browse/XERCESJ-682
42042fe22 Add honour-all-schemaLocations option to XNI samples.
f31adcbe2 Removing an unused variable.
13a1c7c4f Minor cleanup.
46b15064a IntegratedParserConfiguration hasn't been the default parser configuration for a long time. When no parser configuration has been specified use XIncludeAwareParserConfiguration which is the current default.
e87d046d2 Adding honour-all-schemaLocations option to xni.XMLGrammarBuilder sample.
7d37a9e3f Update description of options for XNI samples.
4672f1057 Reverting a questionable performance "improvement" made for resuing StringBuffers. A reference to a StringBuffer was added to ChildNode which noticably increased the footprint of the entire DOM since just about every node had this field. This was not a good tradeoff and it's possible it didn't help performance at all since setting the length of StringBuffer to zero causes a new char array to be created internally. Thanks to Ken Geis who pointed out this problem on j-dev@xerces.apache.org.
9fa022111 XML Schema errata E2-66.
90894abe4 Updating copyright.
f22b6c5ef Fixing a StackOverflowError which can occur when an element type declaration has mixed content.
41d1faaf8 Minor fix.
a9c02c8e9 Only consult xsi:schemaLocation attribute and external schema location properties when it's the first time we resolve a location for a namespace.
23fd21d10 Small performance improvement when loading schemas. Given that now all elements in schema documents allow foreign attributes, we no longer need to keep a flag to indicate whether foreign attributes are allowed.
4e25e947f Fixing JIRA Issue #1115: http://issues.apache.org/jira/browse/XERCESJ-1115
97033b9bc Improvement for writing annotations: - IntegratedParserConfiguration is ancient and slow. Use the better performing XML11Configuration. - Parser instances use quite a bit of memory. Store them in SoftReferences so they can be   reclaimed if there is high demand for memory. - Use adopt node when possible to avoid creating a copy of the DOM before attaching it to the target. - Turn off the deferred DOM feature. There's no benefit to having it on since the target   is another document. We would end up traversing the entire DOM even when calling adoptNode.
3f1389e8b Minor improvement to the previous commit.
43722c718 The DTDValidator calls getQName() to get the name of an attribute but was always receiving null because this method in XMLAttributesProxy wasn't implemented. This caused spurious errors to be reported about missing required attributes and attributes named "null" which aren't declared. Implementing getQName() to fix this problem. Also implemented getURI(), getLocalName() and getPrefix() in case they're ever needed.
72fe498da Eliminating the separate DTD validator. It was being used even with validation off for any DOM containing a DocumentType node which is just a waste of cycles. Simply having a DocumentType node in a DOM was leading to the DTD being processed every time Document.normalizeDocument() is called even if DTD validation isn't turned on. This could be extremely slow especially if the system id in the DOCTYPE points to a resource somewhere on the internet.
1fb3491e7 Explicitly set the schema-type on the DOMConfiguration to "http://www.w3.org/2001/XMLSchema".
293e8dd2f Addressing JIRA Issues #1118, #1119 and #1120: http://issues.apache.org/jira/browse/XERCESJ-1118 http://issues.apache.org/jira/browse/XERCESJ-1119 http://issues.apache.org/jira/browse/XERCESJ-1120
ad9d18090 If the version of the document is XML 1.1 we need an instance of XML11DTDValidator. Added a version parameter to the CoreDOMImplementationImpl.getValidator/releaseValidator methods to facilitate this. Also made several identation fixes.
13e76b345 Since we use CoreDOMImplementationImpl as a singleton the pool of validators will never be garbage collected. It's possible these pools will contain many large objects which could otherwise be reclaimed when there's memory demand. To reduce the likelihood a VM could run out of memory because of this static pool, we now store the validators in SoftReferences.
9dbdb0816 Since we release validators back to a static pool we have to be careful not to pull in references to objects which aren't necessary. The DOMNormalizer is registered as the document handler on the validator handler. Since the DOMNormalizer has a reference to the DOM tree we were actually caching a DOM in the pool along with the validator. We now remove the document handler before returning the validator handler to the pool. If there was an exception thrown during normalization we now ensure that the validator is released if there was one.
23f80ef90 Adding several features and properties to the list of ones recognized by this configuration. Without these in the list, exceptions were being quietly thrown during reset in both the DTD and schema validator.
481e2b5a5 Always return true when the "internal/parser-settings" feature is queried.
114c1bcde Fixing a couple copy and paste errors introduced in the previous commit.
92993f1ca Fixing validation support for XML 1.1 documents. The XML11DTDValidator requires the XML11DTDDVFactory in order to function correctly. It also requires that the DTD_VALIDATOR_PROPERTY be recognized.
8cfb63aa4 Removing several unused fields.
0df3420f8 Removing an unused field.
a80b29aa3 Added a method to the DTD loader to make it possible to fill an existing DTD grammar owned by a validator with a specified internal subset and external subset. The DOM normalizer requires such a method. Previously the DOM normalizer was creating a grammar pool and tried to load the internal subset and external subset with separate calls to loadGrammar(). This approach doesn't work since it generates two DTDGrammar objects and it also has the potential to overwrite the application's grammar pool which was registered with the DOMConfiguration.
2a1d4a404 Creating a pool of DTD loaders for the DOM normalizer.
96cdaf121 Fixing DTD loading support. Previously the DOM normalizer was creating a grammar pool and tried to load the internal subset and external subset with separate calls to preparseGrammar(). This approach doesn't work since it generates two DTDGrammar objects (the second overwrites the first) and it also has the potential to overwrite the application's grammar pool which was registered with the DOMConfiguration.
a1f83056e Minor documentation fix.
52dd60c95 Let adoptNode return null instead of having a special case for the PSVI DOM. There may be other incompatible DOM implementations in the future so the instanceof check for PSVIDocumentImpl may eventually look like a hack.
f057d0127 Adding a version tag.
2c865164c Proposal for 2.8.0 release.
b0c965591 Update version and copyright info for packages, API docs, etc...
b6d351c73 Adding hashCode methods to several value classes. These need to be defined if we're going to be storing instances of these classes in hashtables.
35f514240 JIRA Issue #1092: https://issues.apache.org/jira/browse/XERCESJ-1092
aa09f74ac Updating the release plan.
f44b74b4e Upgrade to JUnit 3.8.1 (released 2002-09-04)
3361098bf The assert(boolean) method was removed in JUnit 3.8.1 so the current code no longer compiles. Changing assert(boolean) to assertTrue(boolean) as per Nathan Beyer's suggestion on j-dev@xerces.apache.org.
bfd50a726 JUnit 3.8.1 is licensed under the CPL v1.0.
ef1b8c6f9 Upgrade to Ant 1.6.5.
dd7d43d07 Updating build.bat and build.sh for Ant 1.6.5.
978866bde License and NOTICE for ant-nodeps.jar.
7c10c22f8 Removing optional.jar which no longer exists in Ant 1.6.5.
1ba9e1ae2 Fixing JIRA Bug #1128: https://issues.apache.org/jira/browse/XERCESJ-1128
0ab34d995 Adding an extension to ValidationState which can be configured to turn off checking for ID/IDREF errors and unparsed entity errors. This is need to support the http://apache.org/xml/features/validation/id-idref-checking and http://apache.org/xml/features/validation/unparsed-entity-checking.
e998a576a This class isn't intended for further extension so making it final.
b8610ce7f Addressing JIRA Issue #618: http://issues.apache.org/jira/browse/XERCESJ-618
863eb06a3 Fixing JIRA Bug #1127: http://issues.apache.org/jira/browse/XERCESJ-1127
33063bfcb Committing patch from Peter McCracken for supporting the following items in the Xerces 2.8.0 release plan:
fef57eb93 Updating the release plan. Peter McCracken has completed all of his items. Nathan Beyer has volunteered to fix bugs in xml-commons and has already provided patches which are pending review.
75f8536dc Adding JUnit tests contributed by Peter McCracken for: http://issues.apache.org/jira/browse/XERCESJ-1131. I've made a few minor modifications (renaming files, packages, etc...) but otherwise it's the same as what was posted.
5ebc9c5e5 Adding schema.config tests to the 'test' target. Patch thanks to Peter McCracken.
36a00ecca Adding documentation for the id-idref-checking, identity-constraint-checking and unparsed-entity-checking features.
9b7f036fb Fixing JIRA Bug #506: http://issues.apache.org/jira/browse/XERCESJ-506
3faf7230f Updating the release plan.
b23b90432 Fixing a minor bug. The InputSource returned from the resolution forwarder should contain the system identifier returned from the application's LSResourceResolver not the one which was passed to the resolveEntity() method.
68cf0f6d4 A read-only XNI wrapper for a JAXP NamespaceContext.
f10f805a2 Update SVN properties.
ba1f77ba1 Update SVN properties.
87429a2d3 Update SVN properties.
c5970d77c Update SVN properties.
a2a49c7f4 Fixing a bug. The DOM parser sets the input encoding on the document during the startDocument event. The problem is that this occurs before the XML declaration has been read so the encoding stored in the DOM may be the auto-detected encoding and not the actual encoding of the document.
654e40a9f Fixing JIRA Bug #1135: http://issues.apache.org/jira/browse/XERCESJ-1135
5a77a932a JIRA Issue #1117: http://issues.apache.org/jira/browse/XERCESJ-1117
3308f1c0f Minor doc fix.
f7e69c87e JIRA Issue #1116: https://issues.apache.org/jira/browse/XERCESJ-1116
a7e9cdfdc Setting format-pretty-print to true on the LSSerializer is now supported.
9d27e2860 Update the release plan.
8ded7bb88 Updating copyright year in the documentation.
962564ff9 Committing code and unit tests for the following line items from the Xerces 2.8.0 release plan: - Expose annotations in XSAttributeUse and XSParticle - Support lists of annotations for other XSObjects
c033a4ff2 Update the release plan.
e9045127c Deleting personal.xsd already exists under data.
430a3ad42 Added support for getDeclaredPrefixCount()/getDeclaredPrefixAt(int).
157d0da91 Miscellaneous clean-up and update of SVN properties.
6d2d8db20 JIRA Issue #1133: https://issues.apache.org/jira/browse/XERCESJ-1133
be65fde66 JIRA Issue #1125: http://issues.apache.org/jira/browse/XERCESJ-1125
4c84ea7a3 Update the release plan.
b88318312 Upgrading to xml-commons-external-1_3_03.
45eb7d5be Update the release plan.
940eaaec4 Use the http://apache.org/xml/properties/dom/current-element-node property to expose the current element node being processed by the validator. This property can be queried from an ErrorHandler to determine the approximate location of the error in the DOM.
51931887d Update the release plan.
e74f616e3 Fixing JIRA Bug #1141: http://issues.apache.org/jira/browse/XERCESJ-1141
4cf02411a JIRA Bug #1141: http://issues.apache.org/jira/browse/XERCESJ-1141
6b402e387 Adding documentation for the root-type-definition property.
17154883a Adding documentation for the ignore-xsi-type-until-elemdecl feature.
c1d05c738 JIRA Issue #1143: http://issues.apache.org/jira/browse/XERCESJ-1143
11da70225 JIRA Issue #1143: http://issues.apache.org/jira/browse/XERCESJ-1143
b92635d12 Update SVN properties.
6ee2e49ce The non-namespace aware setAttributeNode() was being called when building the DOM result which could cause attributes to be overwritten if they have the same nodeName. To fix this problem we now call setAttributeNodeNS().
1c08afbf1 If the use grammar pool only feature is set to true do not perform schema full checking.
4d8f332c8 Updating FAQ on DOM revalidation. In memory validation against a DTD is supported. The schema-type must be set to "http://www.w3.org/2001/XMLSchema" in order to enable XML schema validation.
c8aa2e5db Fixing JIRA Bug #1007: http://issues.apache.org/jira/browse/XERCESJ-1007
5df930f52 Minor documentation fix.
7c5a37c9c JIRA Issue #1068: http://issues.apache.org/jira/browse/XERCESJ-1068
e66759b31 A small improvement to the isEqual() method.
025f78e77 Fixing JIRA Bug #1137: http://issues.apache.org/jira/browse/XERCESJ-1137
9e22b58e2 Re-implementing the XPath fixup routine so that it doesn't create temporary objects. Since we no longer call trim(), this also fixes a bug in the white space processing. trim() trims off characters which are not XML spaces.
9ae404569 Remove hard reference to the XML11DTDProcessor to allow this class to be compiled without XML 1.1 support.
ad55d1cba JIRA Bug #1121: http://issues.apache.org/jira/browse/XERCESJ-1121
b8182c4df Cleanup unused imports.
78482e882 Some minor performance improvements. Avoid creating temporary String objects when appending character data to a StringBuffer.
a8dc2f3a0 Updating the JAR manifest to reflect that v1.3.03 of xml-commons external is now in use.
f3c92de82 Fixing JIRA Bug #1121: http://issues.apache.org/jira/browse/XERCESJ-1121
490b83f0c Update the release plan.
c5c323b26 Fixing indentation.
9b7dc9912 Updating the release doc for Xerces-J 2.8.0.
5bb765f49 Updating the release doc and adding a description of Xerces-J 2.8.0.
d0e5d1552 Minor language improvement.
a33d7da68 Updating the changes section for Xerces-J 2.8.0.
0ad3af9e4 Update the release plan.
b3e6f86f8 Fixing NPEs which can occur when the char array in the XMLString is null.
3bc56cef7 Fix for a ModelGroup getAnnotation/getAnnotations bug when traversing ComplexTypes with ComplexContents.
a7a963cba Updating the URL for the Xerces2 website. It moved to xerces.apache.org awhile ago.
6ed743d80 Fixing JIRA Issue #1149: http://issues.apache.org/jira/browse/XERCESJ-1149
fee9c9158 JIRA Issue #1148: http://issues.apache.org/jira/browse/XERCESJ-1148
0221ded82 Fixing copyright used in Javadoc footer.
7fa5bc431 In SAX usage example encourage setting of namespace awareness.
beff038be Reduce SAX parser reset cost. Time was being wasted looking up the value of the namespace-prefixes feature during reset. We always know its value.
5c5e0e9fb Fixing a bug where Test 24 failed when there are spaces in the path to the user directory.
f0bef0d6e Changed the processing of the root-type-definition property to account for built-in types.
ea8e1e1df Adding tests to verify that the root-type-definition property works with built-in types.
73cadf4ff Modified code to search for recursive includes.  Adds a fallback to the href attribute of the include element, if the system id is not available.  This also fixes a bug where and NPE would be thrown when the XMLLocator passed to the searchForRecursiveIncludes() method had no system id or expanded system id.
96da7cc9c Update SVN properties.
7e34be5c1 Static mutability fix. Make static QName fields private. They should never have had public visibility.
84925f43c Changed == to .equals() for determining if the root type definition is a built-in type.  Also updated the unit test to confirm this works.
467d4d24e Fix typo in method name.
6fb9cca6c Fixing a bug. In a simple type derived by restriction facet annotations were being lost if the derived type has no additional facets. In such a case applyFacets() is never called so we must copy the annotations from the base in the constructor.
9a6ab106f Fixing JIRA Issue #1159: http://issues.apache.org/jira/browse/XERCESJ-1159
c3157fd52 Return an empty ShortList from XSSimpleTypeDecl.getEnumerationTypeList() instead of null.
164e39290 Use permanent links for the XML namespaces REC and various DOM Level 2 RECs.
a088d5cd1 Fixing a bug. When printing surrogate character pairs within an attribute or entity value we must ensure that content() isn't called. This method assumes that the serializer is writing character content and will write a '>' character to the stream if it believes the start tag hasn't been closed. And it hasn't been closed yet if we're writing an attribute value.
d4ff153ec Documentation fix. org.w3c.dom.ls.DOMInputSource was renamed to org.w3c.dom.ls.LSInput a long time ago.
87df61faa Changed Test.java to not output error messages.  Also regenerated the expected output to not have error messages.
1f0dd2f50 Attempting to fix a bug where a schema document is loaded multiple times if it is both included and redefined. Depending on the ordering, Xerces may overwrite the redefined components with the original ones.
2e7bb5913 Allow PSVIConfiguration to be used with XML 1.1 documents.
e232be743 The PSVI writer should be set as the document source.
786c31343 Fixing a couple of typos.
8e6fe2eba We shouldn't be catching and ignoring OutOfMemoryErrors and StackOverflowErrors. Re-throw them.
90cc79626 Fixing a bug. If the LSSerializer fails in the middle of serialization we must ensure that its internal state is cleared so that it can be reused. If this isn't done, the serializer may throw an exception which complains that the serializer is already in use.
c6ffa0907 Updating several links in the documentation.
c1f51820c Fixing JIRA Bug #1167: http://issues.apache.org/jira/browse/XERCESJ-1167
200e5fa83 Fixing JIRA Bug #1123: http://issues.apache.org/jira/browse/XERCESJ-1123
6e0dbe8cd Marking several fields final in the native readers. They're assigned in the constructor and never re-assigned later.
0116e0a22 Adding native support for the ISO-8859-1 encoding.
5864e9cfe Update SVN properties.
6cf658836 Use ISO-8859-1 reader in an XInclude context.
c8a74a362 Update the copyright year.
d774c421d Fixing JIRA Bug #1126: http://issues.apache.org/jira/browse/XERCESJ-1126
61370c8cd Fixing JIRA Bug #1134: http://issues.apache.org/jira/browse/XERCESJ-1134
0ffce6ebe Adding an error message for src-import.1.2.
8ace8bfb5 Report src-import.1.2 when no namespace is specified on an import and the enclosing schema has no target namespace.
213d55829 Fixing JIRA Bug #1169: http://issues.apache.org/jira/browse/XERCESJ-1169
0dde63af3 Fixing JIRA Bug #1021: http://issues.apache.org/jira/browse/XERCESJ-1021
ba5bdbf66 Clean-up unused imports.
6e168cd9a Remove extra spaces added to comments in the internal subset.
3452001fb Fixing a bug in the processing of default attributes. If two or more defaulted attributes have the same local name it was possible for them to overwrite each other.
ec441667b Fixing an edge case not covered by the fix for XERCESJ-1123.
5f2ae3790 Eliminate creation of temporary Boolean objects.
8fc0c767e Eliminate creation of temporary Boolean objects.
155a81674 Eliminate creation of temporary Boolean objects.
dd47d3bde Adding constructors which allow a byte array to be passed directly to each of Xerces' Reader classes.
8badca494 Always use an AccessController when getting system properties.
e0f965f16 JIRA Issue #1174 http://issues.apache.org/jira/browse/XERCESJ-1174
094122bf4 Include org.w3c.dom.bootstrap in the Javadocs. It was previously missing.
ff3e3de8c Add org.w3c.dom.bootstrap to the API docs page.
ad9487d96 Expose the [nil] property in the PSVI reported on start element. It was always available.
667a49df3 Minor performance improvement. If we know the encoding is UTF-8 return the optimized UTF-8 reader immediately. The same goes for ISO-8859-1.
c19a38876 Fixing a bug. If an IDC field matches a strict or lax element wildcard and no element declaration is found for the element we were always reporting an error. This is because we weren't passing the actual type (which would be specified with xsi:type) to the XPath matcher.
33284eac6 Exposing a method on XSModel which returns the substitution group for a given element declaration. The implementation had already been in place for several releases.
ff038d578 Fixing indentation.
55a9a8580 Javadoc fix. An end tag for code was missing. <code>EncodingInfo<code> --> <code>EncodingInfo</code>
7dd5ec93e Improving the grammar in the description of the getAttributes() method.
b8f55e555 Refer to isElementContentWhitespace() from DOM L3 instead of the Xerces specific method.
87b836e12 Documentation updates for XML 1.0 4E, XML 1.1 SE, Namespaces in XML 1.0 SE and Namespaces in XML 1.1 SE and a few other minor updates.
41fc9f47a Fixing JIRA Bug #1180: http://issues.apache.org/jira/browse/XERCESJ-1180
6828f79a9 Fixing JIRA Bug #1181: http://issues.apache.org/jira/browse/XERCESJ-1181
c570cf804 Fixing a bug. When an error is detected in an internal entity the locator reports the current location in the closest external entity. This wasn't working for the document entity.
2149baaf8 It was possible for an application to set features on the SAXParserFactory which have values that are inconsistent with the factory built-in settings. This might mean the value they set gets ignored because the other instance of the setting overwrites the first when the SAXParser is initially configured. The features and built-in settings are now kept in synch. This may also improve performance for some applications since we're not always creating a new parser to test whether a feature is recognized by the factory.
2eb042646 It was possible for an application to set features on the DocumentBuilderFactory which have values that are inconsistent with the factory built-in settings. This might mean the value they set gets ignored because the other instance of the setting overwrites the first when the DocumentBuilder is initially configured. The features and built-in settings are now kept in synch. This may also improve performance for some applications since we're not always creating a new parser to test whether a feature is recognized by the factory.
0ec8131ca Call UserDataHandlers registered on the HTMLDocument node. In order to make this work the visibility of callUserDataHandlers() in CoreDocumentImpl was changed to protected (which just happens to satisfy a request made by Jacob Kjome on the j-users mailing list).
632b1b688 Prepare for Xerces-J 2.8.1.
08358b396 Fixing JIRA Bug #1176: http://issues.apache.org/jira/browse/XERCESJ-1176
0414900df Fixing JIRA Bug #1114: http://issues.apache.org/jira/browse/XERCESJ-1114
f7ab422d9 JIRA Issue #1184: http://issues.apache.org/jira/browse/XERCESJ-1184
4c6766d96 JIRA Issue #1185: http://issues.apache.org/jira/browse/XERCESJ-1185
0bd7a0c35 Removing an unused local variable.
c69cf9b0b Use the SymbolTable instead of calling String.intern() directly.
e5b62d7f9 Bug Fixes: - '<' must always be escaped in a well-formed attribute value - 0x09, 0x0A and 0x0D must be escaped in attribute values so   that they may be round-tripped. They would otherwise be   transformed to 0x20 during attribute value normalization.
5cc20b530 Fixing a couple bugs. Synthetic annotations weren't being generated for element ref and group ref particles.
bf34bc39d Fixing JIRA Bug #1187: http://issues.apache.org/jira/browse/XERCESJ-1187
14f499edc Fixing JIRA Bug #1147: http://issues.apache.org/jira/browse/XERCESJ-1147
f4674035e Once the DOMParser has completed building the DOM drop all internal references to the completed Document object. If the application is pooling parsers this will allow the garbage collector to reclaim the Document and all of its nodes if the application no longer has any references to it.
b72f36a10 Adding a small pool of byte buffers for the Readers created by the XMLEntityManager.
61a00c791 Reduce the overhead of creating a ScannedEntity by reusing byte buffers. This is similar to the improvement introduced in Rev 320110.
435b649d6 Minor revision to the previous commit. Pass the byte buffer to ScannedEntity's constructor directly.
ff617ad53 Updating the release doc for Xerces-J 2.8.1.
902151d9d More updates to the release doc for Xerces-J 2.8.1.
84d37810d Link to the Apache Mail Archives instead of the MARC ones which are not correctly archiving the j-users or j-dev lists.
4d58bf6d3 Updating the changes section for Xerces-J 2.8.1.
eda7d508e Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
0a60c70f2 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
9d0379ec2 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
19459445e Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
9da01ed71 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
93fdfffb8 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
f7f9b4b7e Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
6967d7641 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
750a98342 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
2336bf1a3 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
fb1c1f1f5 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
52375bdf9 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
58fd5d836 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
eb9060e87 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
86718c044 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
18d9403ad Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
9783552bf Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
480275784 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
68557a4e1 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
95d0649c8 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
857c3881b Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
faea10a26 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
5b226064e Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
6d9a6b77c Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
6d5e583e4 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
265f4cd0d Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
3691745ff Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
647c25ef6 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
7346054fd Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
23d7f19f0 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
660739e27 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
cc4cfa5f0 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
e4be0059b Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
04465bde7 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
69b86a6ab Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
0f3cb7e4b Update to new header for NOTICE files. See http://www.apache.org/legal/src-headers.html.
336852dd6 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
5a8e3fc38 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
060a32640 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
7ee9b3f3a Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
5adc86a36 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
8e5c3fe75 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
d34466afa Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
8b5a180a0 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
21f353f32 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
dbcef0cfe Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
46d1b9d7b Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
c649314c1 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
26f1c2549 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
00225f70b Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
7aa745d6c Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
03e67c031 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
dd1a0e173 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
aad615cda Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
28f27619e Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
bd6c51147 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
e79794d42 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
fa94314e1 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
2e63cd954 Apply the latest ASF license header to build.xml. See http://www.apache.org/legal/src-headers.html.
e5e00e09d Fixing a bug Ron Gavlin reported on the j-users list. When processing schema documents we mark the DOM nodes we've processed as "hidden" so that we don't revisit them. For input from Xerces' DOM implementation we were marking the nodes directly. If the same DOM was fed again to the schema loader the nodes were still marked as hidden and so weren't being processed. We should never mutate a user supplied DOM. I've modified the code so that we always use the hidden node Hashtable if the input is anything other than the schema opti DOM.
a474b0fef Fixing an end tag in the Javadoc.
3302ac207 JIRA Issue #1194 http://issues.apache.org/jira/browse/XERCESJ-1194
4ddd9388f JIRA Issue #1195: http://issues.apache.org/jira/browse/XERCESJ-1195
4db60ced1 Fixing @param arguments in the Javadoc.
981541617 Various Javadoc fixes.
26d955521 Various Javadoc fixes.
a12b496af Fixing JIRA Issue #1196: http://issues.apache.org/jira/browse/XERCESJ-1196
b74282013 Eliminate two unnecessary imports.
b000cb5f0 Various fixes for Javadoc warnings.
32ea5d43f The XSAttributeDecls for the xsi:* attributes are always the same objects. Only look them up once.
cec8c8526 Fix Javadoc.
c079f68d2 Fixing a potential NPE.
df7c360b6 Moving code which creates an OutputStream from a URI to XMLEntityManager.
69eac2d6e Minor performance improvement. Avoid constructing a new string when creating the rawname of a namespace declaration attribute.
1be8a6fc0 JIRA Issue #1200: http://issues.apache.org/jira/browse/XERCESJ-1200
6979f3e6b Fixing JIRA Issue #1193: http://issues.apache.org/jira/browse/XERCESJ-1193
8b3ccc267 Fixing a memory leak. In a JAXP 1.2 context the SchemaLoader will cache grammars loaded from InputStreams and InputSources in a HashTable since in general they can only be read once. This HashTable was never being cleared so could leak grammars which become unreachable if the application changes the value of the schemaSource property. I've changed the table to be a WeakHashMap. This will allow the key (InputStream or InputSource) and the grammar its associated with to be discarded once they become unreachable.
e3ae2832e Fixing a bug in the processing of the JAXP 1.2 schemaSource property. If the value specified for the property is an array and its component type is a subclass of File, InputStream or InputSource we should accept it.
81ad37d63 Fixing JIRA Issue #1203: http://issues.apache.org/jira/browse/XERCESJ-1203
336f9ee40 Localize schemaSource error messages.
ce2b27a17 Fixing a bug in the processing of the JAXP 1.2 schemaSource property. If the value specified for the property is an array and its component type is an interface we should accept it since it's possible that each of the members of the array are an instance of one of the allowable types.
d5493ddac Fixing JIRA Issue #1202: http://issues.apache.org/jira/browse/XERCESJ-1202
ad88feceb Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
2cbf9accd Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
ab7c5764a Adding the ASF license header to some more files. See http://www.apache.org/legal/src-headers.html.
cc16dd6b5 Deleting some ancient files from the root directory which are no longer relevant.
5e385937e JIRA Issue #1197: http://issues.apache.org/jira/browse/XERCESJ-1197
cfb3f3097 JIRA Issue #1197: http://issues.apache.org/jira/browse/XERCESJ-1197
2c4e5ee3d The ISSUES, STATUS and TODO files have been deleted.
0d330c28f The honour-all-schemaLocations feature is mixed case so requires special treatment.
636401f2d Fixing JIRA Issue #1204: http://issues.apache.org/jira/browse/XERCESJ-1204
382cc7ce0 Minor cleanup.
d3c6e8f42 Marking many methods in the scanner as final.
38d34418f Upgrade the SchemaParsingConfig so that it can read XML 1.1 documents. We're going to need this for XML Schema 1.1 but it's also good for XML Schema 1.0 too.
75dd1dfe7 Fixing JIRA Issue #1061: http://issues.apache.org/jira/browse/XERCESJ-1061
7a964220f Simplify BooleanDV. The fValueSpace array is unnecessary.
ffee07517 String.trim() removes all leading and trailing characters less than or equal to U+0020. This is okay for XML 1.0 since all of the valid characters in that range are white space but in XML 1.1 control chars are allowed. When the input to the schema loader or schema validator is an XML 1.1 document we need to be careful that we're not treating the control characters as XML spaces.
e8479277e We need to be careful with StringTokenizers. One of the default delimiters is form feed (\f or 0x0C). A reference to this character is legal in XML 1.1 but it isn't a space character so we must exclude it from the delimiter list.
dae168200 Fixing JIRA Issue #1206: http://issues.apache.org/jira/browse/XERCESJ-1206
d640d8eda Fixing JIRA Issue #1207: http://issues.apache.org/jira/browse/XERCESJ-1207
fb1462ce9 Fixing JIRA Issue #1209: http://issues.apache.org/jira/browse/XERCESJ-1209
fa818a79a JIRA Issue #1210: http://issues.apache.org/jira/browse/XERCESJ-1210
03a1626ed Update SVN properties.
1929a7a70 LICENSE and NOTICE files for the Xalan serializer.
d0d058b39 JIRA Issue #1210: http://issues.apache.org/jira/browse/XERCESJ-1210
25c92392a JIRA Issue #1210: http://issues.apache.org/jira/browse/XERCESJ-1210
d210aa91d JIRA Issue #1210: http://issues.apache.org/jira/browse/XERCESJ-1210
4a46192dc getFile() returns a concatenation of getPath() and getQuery(). We really only want the file path here.
2e38da3c8 JIRA Issue #1210: http://issues.apache.org/jira/browse/XERCESJ-1210
c48d3acb2 The JUnit license (which is an HTML file) isn't getting included in the tools distribution. Add **/*.html to the list of includes.
c435218b1 Minor performance improvement:
4107a1c79 JIRA Issue #1210: http://issues.apache.org/jira/browse/XERCESJ-1210
ef4f1a983 JIRA Issue #1210: http://issues.apache.org/jira/browse/XERCESJ-1210
85f3be7b6 JIRA Issue #1212: http://issues.apache.org/jira/browse/XERCESJ-1212
9e85e0fcc Fixing / adding version tags.
fcc0e68b7 Updated xml-apis.jar for testing. Built from latest source in xml-commons SVN.
b19af62e6 Adding a comment about the deprecated serializer.
bfed3e931 Updated xml-apis.jar and xml-commons-external-src.zip for testing. Built from latest source in xml-commons SVN.
2d518bee7 Updating the DOM serialization FAQ. Xerces' native serializer is deprecated now.
20ac059b1 Prepare for Xerces-J 2.9.0.
54011ecdf SoftReferenceSymbolTable is a SymbolTable that prevents OutOfMemoryErrors by keeping only SoftReferences to its symbols. SoftReferenceSymbolTableParserConfiguration is based on the default parser configuration, and defaults to using a SoftReferenceSymbolTable.
b0e20d0b2 Update to the latest ASF license header. See http://www.apache.org/legal/src-headers.html.
35cb8c1ed Updating SVN properties.
b53b83fbc Clean up DOM examples. Setting the DOMImplementationRegistry.PROPERTY system property is usually unnecessary. The DOMImplementationRegistry will find the META-INF entry in xercesImpl.jar and the load the right DOMImplementationSource. The Xerces serializer example is using a FileWriter which will write using the platform's default encoding. Since this has the potential to create a mismatch between the actual encoding of the document and encoding specified in the encoding declaration in the document this is often the wrong thing to be using. Changing the example to use a FileOutputStream instead.
e0477b312 Upgrading to the Xalan 2.7.1 serializer. Built from SVN on November 20th, 2006.
bf2b4c7cf JIRA Issue #1213: http://issues.apache.org/jira/browse/XERCESJ-1213
dec43ea5b To fix bug 1066/1032 by applying Ignacio Hernandez-Ros's patch. For details, see http://issues.apache.org/jira/browse/XERCESJ-1066?page=all
74c8b7022 Miscellaneous clean-up.
2e7229415 JIRA Issue #1213: http://issues.apache.org/jira/browse/XERCESJ-1213
0e8b23caa LICENSE and NOTICE files for xml-commons-resolver-1.2.
cc5714330 Add the resolver NOTICE to the source and binary packages.
29f69759b - Fixing the djdjar target. - Adding LICENSE and NOTICE to all of the xerces jar files   so that they can be distributed in the Maven repository   in compliance with ASF policy.
4f3a5c9bd Updating installation document for Xerces 2.9.0. There are several new files. The ISSUES, TODO and STATUS which were previously included in the source distribution have been removed. They were horribly out of date and no longer relevant.
cadf52825 Updating the serialization FAQ to reflect the recent move to the shared Xalan serializer and the deprecation of Xerces' native serializer.
65582adbd Documentation updates for xml-commons-resolver-1.2.
b9fffd837 Fixing a typo.
c5a3ecaaa Updating links to the XInclude REC. The 2nd edition was published November 15th.
0aab96edd Updating to the NOTICE file for the Xalan 2.7.1 serializer.
eddcabcb1 Updating to the NOTICE file for the Xalan 2.7.1 serializer.
3e24ee9f7 Removing an extra period.
7f246b90b JIRA Issue #1204: http://issues.apache.org/jira/browse/XERCESJ-1204
b5fe1882a Give SoftReferenceSymbolTableParserConfiguration a slightly shorter name.
69c6d7646 Give SoftReferenceSymbolTableParserConfiguration a slightly shorter name.
2ccd3ceda Add documentation on SoftReferenceSymbolTableConfiguration.
118b64457 Adding Javadoc.
ee769812a Updating the release doc for Xerces-J 2.9.0.
8740e5f71 Updating the changes section for Xerces-J 2.9.0.
f6862c506 Minor change to the docs.
7538952e6 A bit of rewording.
451af982e Fixing a typo.
44591638d More rewording.
8424fba31 More typo fixes.
e8ed2d3c9 Adding a couple people I missed to the 2.9 credits.
9f5322b2e Rewording a bit for clarity.
9fb53d39e Fixing JIRA Issue #1220: http://issues.apache.org/jira/browse/XERCESJ-1220
69dda8fd3 Improving a couple error messages related to the "Standalone Document Declaration" validity constraint.
e32f62b5f Updating the copyright year in the documentation.
cd0abff67 Updating the copyright year in the NOTICE file.
83ef46f17 Updating the copyright year used in the API docs.
f3295eccb Fixing JIRA Issue #1221: http://issues.apache.org/jira/browse/XERCESJ-1221
9600eff39 Marking a couple fields as final.
02832ccc7 Marking a few fields as final.
5314a3b04 Make RefCount a static final nested class. Mark IntVector as final.
65c0ee9b4 Fixing several instances of the same bug. When a namespace is unbound the URI in the NamespaceContext should be stored as null instead of the empty string.
b78d89433 Updating the JAR manifest to reflect that v1.3.04 of xml-commons external is now in use.
72d28cef7 Fixing JIRA Bug #1223: http://issues.apache.org/jira/browse/XERCESJ-1223
472a29a23 Correcting a formatting problem with one of the DOM messages.
1543bbc70 Fixing JIRA Bug #1224: http://issues.apache.org/jira/browse/XERCESJ-1224
126f16c74 Fixing JIRA Bug #1218: http://issues.apache.org/jira/browse/XERCESJ-1218
6875f8ac9 Fixing the imports in a couple of the DOM examples: org.w3c.dom.DOMImplementationRegistry -> org.w3c.dom.bootstrap.DOMImplementationRegistry
8ff5e52a0 Fixing JIRA Bugs #206, #380 and #773: http://issues.apache.org/jira/browse/XERCESJ-206 http://issues.apache.org/jira/browse/XERCESJ-380 http://issues.apache.org/jira/browse/XERCESJ-773
d3cbda242 Fixing JIRA Bug #977: http://issues.apache.org/jira/browse/XERCESJ-977
886a9068e Fixing JIRA Bug #1228: http://issues.apache.org/jira/browse/XERCESJ-1228
c322c1bec Make all of RangeImpl's fields private. Removed one unused field.
203814bd9 Fixing JIRA Bug #1232: http://issues.apache.org/jira/browse/XERCESJ-1232
5b1eefec3 Fixing JIRA Bug #1231: http://issues.apache.org/jira/browse/XERCESJ-1231
9e03c14c7 Fixing indentation.
8ce51b210 Fixing JIRA Bug #1230: http://issues.apache.org/jira/browse/XERCESJ-1230
d5bdc3349 Fixing JIRA Bug #1229: http://issues.apache.org/jira/browse/XERCESJ-1229
4bdd2b0d0 Clean up unused imports.
ffb4d4a59 Fix a problem with complex type annotation support when extension is used.
3ef83ccfc Fixing JIRA Bug #1235: http://issues.apache.org/jira/browse/XERCESJ-1235
cfa3e2f21 Fixing JIRA Bug #1234: https://issues.apache.org/jira/browse/XERCESJ-1234
d757c10b6 When support for DTD validation support was added to DOMNormalizer we forgot to add "http://www.w3.org/TR/REC-xml" as an allowable value for the "schema-type" property. The entity resolver property wasn't included in the parameter list returned from getParameterNames() and was not accounted for in canSetParameter(). Both of these minor bugs should be fixed now.
21558f237 Fixing an NPE. Need to take special care with DOM Level 1 Attr nodes.
a405ef4de Fixing JIRA Bug #1233: http://issues.apache.org/jira/browse/XERCESJ-1233
483664a45 Fix identation.
df4fad23f Fixing JIRA Bug #1238: http://issues.apache.org/jira/browse/XERCESJ-1238
59b623b20 Fixing JIRA Bug #1239: http://issues.apache.org/jira/browse/XERCESJ-1239
b643cf51f Fixing JIRA Bug #1079 and #1237: http://issues.apache.org/jira/browse/XERCESJ-1079 http://issues.apache.org/jira/browse/XERCESJ-1237
1732706e6 Fixing indentation. Tabs -> 4 spaces.
8fd671001 Fixing JIRA Bug #1240: http://issues.apache.org/jira/browse/XERCESJ-1240
d9ba6df01 Fixing the fix made to IDC in Revision 319835. There may be several instances of the same field that may be active at a time so we need a mayMatch flag per active XPath. This state is now stored in the XPathMatcher. Incidentally, this should also improve performance a bit since we're no longer churning a HashMap.
1d314f568 Fixing a bug. If the document doesn't have a DTD we weren't resetting the UnparsedEntityHandler.
2b7b650a8 Clean up unused imports.
03eb4faf3 Fixing JIRA Bug #1242: http://issues.apache.org/jira/browse/XERCESJ-1242
f3ca39908 Clean up unused imports.
0b16c7ecc Clean up unused imports.
125d16f2e Performance: Every time the XMLGrammarPreparser is invoked it sets several properties on the XMLGrammarLoader. This forces components to read the whole config on every parse when they could otherwise break after examining the PARSER_SETTINGS feature. Instead of setting these properties every time, first check if their values have changed since the last time they were applied to the grammar loader.
5ff7c783d Avoid the XMLConfigurationException thrown from the component manager when the XMLSchemaLoader is used an XMLGrammarLoader.
218ddc2e5 Fixing the dtdjar target (again).
0ad37b54b Fixing indentation.
163dc12c7 Fixing JIRA Bug #1243: http://issues.apache.org/jira/browse/XERCESJ-1243
b3081a7de Fixing JIRA Bug #1245: http://issues.apache.org/jira/browse/XERCESJ-1245
faff3c68e A light wrapper around an XMLLocator. Needed in order to fix XERCESJ-1247.
1415f597f Fixing JIRA Bug #1247: http://issues.apache.org/jira/browse/XERCESJ-1247
2832ff5c7 Formatting clean-up.
b5e8b743c Formatting clean-up.
45e14465a Implementations of UIEvent and MouseEvent.
7cbfbdbee Minor doc tweaks.
bf73d3ea7 Fixing a bug in the XMLVersionDetector (which was fixed a long time ago in the other scanner components). Illegal byte sequences in UTF-8, US-ASCII and other encodings are well-formedness errors. They should be reported to the error reporter like every other well-formedness violation.
417d7065a Remove an extra semi-colon.
97c229446 Minor doc fix.
423e13357 JIRA Issue #1189: http://issues.apache.org/jira/browse/XERCESJ-1189
8af97c42a Guard against an NPE which could occur if getMessage() is called from different threads.
ef1ee3e86 Fixing JIRA Bug #1249: http://issues.apache.org/jira/browse/XERCESJ-1249
8e7daca15 Fixing an NPE.
bbaac4e41 Localizing a DOM error message.
e10114179 Eliminating a couple anonymous classes. Locator2Impl has the same functionality.
e4eeb08e3 Eliminating an unused field.
ab51fb278 Hooking in the implementations of UIEvents and MouseEvents.
96a4ef475 Making several field final.
d7d976662 Making several field final.
93d26680b Making several fields final.
cd99c4d32 Making several fields final.
14060f314 Making several fields final.
7505ae240 Making one field final.
53db6ac40 Fixing JIRA Issue #1080: http://issues.apache.org/jira/browse/XERCESJ-1080
d2da90508 Minor grammar fix.
fc2516803 Modernizing this sample: - Use the DOM L2 namespace-aware createElementNS() methods instead of the non-namespace-aware DOM L1 methods - Use the DOM L3 LSSerializer to serialize the document instead of the deprecated native Xerces serializer
1b7d41640 Make FacetInfo static.
6b6ef9b98 Make ComplexTypeRecoverableError static.
18cd41067 Making all of the fields of FacetInfo final.
e5846a9c6 Making LocatorProxy a static final nested class.
ad42974f0 Making AbortHandler a static final nested class.
a5fdf2635 Making XNI2SAX a static final nested class.
e3aa891e6 Making LocalIDKey a static final nested class.
daa432890 Making ValidationContextImpl a static final nested class (and its fExternal field final).
5ae5f2616 Eliminating redundant casts and instanceof checks; XMLDTDProcessor is an XMLComponent.
82a34b582 Fixing JIRA Issue #1257: http://issues.apache.org/jira/browse/XERCESJ-1257
5c5d2f600 Improving the performance of toXMLFormat(). If the year < 10^9 avoid calling getEonAndYear(). This prevents a new BigInteger from being created. This change also fixes a bug in the serialization of negative years > -1000 which was causing leading zeros to be written in front of the '-' sign.
1f5c7320f Fixing indentation.
815dfee71 Fixing indentation.
17bf058e7 Improving performance of DatatypeFactory.newXMLGregorianCalendar(String). If the year < 10^9 avoid creating a new BigInteger which will be immediately GC'd. Also fixed a bug which allowed the year component to be three digits if it was preceeded with a '-' sign.
a86f82ce5 DatatypeFactory.newXMLGregorianCalendar(int, int, int, int, int, int, int, int) in the base class creates a new BigInteger for the year. Overriding the method to avoid creating this temp object.
394337a24 Fixing indentation.
10b9b010b Improving the performance of toGregorianCalendar(). If the year < 10^9 avoid calling getEonAndYear(). This prevents a new BigInteger from being created.
e50b2c31f Performance: If a default is provided for the year only call getEonAndYear() if necessary.
339976fce Fixing a bug and made a few perf improvements to isValid(). It wasn't checking if the value of days is valid for the specified month. This was allowing bogus dates like April 31st through.
7368f7449 Allow millisecond field to be set to 1000.
f900ffca1 Fixing indentation.
f37ec0f21 Shuffling code around to allow millisecond = 1000 to be specified in the factory methods as they were before.
474d1edc0 Fixing JIRA Issue #1260: http://issues.apache.org/jira/browse/XERCESJ-1260
1917d1b07 Removing "synchronized" from the getInstance() methods. The threading issue that they were added to address was eliminated when we started using the ObjectFactory to create instances of the DTDDVFactory.
d5640bc9e Removing "synchronized" from the getInstance() methods. The threading issue that they were added to address was eliminated when we started using the ObjectFactory to create instances of the SchemaDVFactory.
646d810ef Making all methods of SecuritySupport static. There's no longer a need for them to be instance methods since we eliminated SecuritySupport12.
016c9e2f5 Making all methods of SecuritySupport static. There's no longer a need for them to be instance methods since we eliminated SecuritySupport12.
f38437d78 Fixing a typo. "... is not recognized this SchemaFactory" -> "... is not recognized by this SchemaFactory".
5ea11950b Fixing an import in the DOM serialization example: org.w3c.dom.DOMImplementationRegistry -> org.w3c.dom.bootstrap.DOMImplementationRegistry
029231db2 Use valueOf() instead of directly calling the BigInteger/BigDecimal constructors.
883dc18e1 Fixing a bug. parseInt() was allowing maxDigits + 1 which caused XMLGregorianCalendar to accept bogus dates like "2007-008-003".
ababa1402 Use BigDecimal.valueOf(long) instead of new BigDecimal(double).
364bd6628 Prepare for Xerces-J 2.9.1.
78b718f59 JIRA Issue #1264: http://issues.apache.org/jira/browse/XERCESJ-1264
54018c668 Eliminating a couple blank lines.
4766518c2 Formatting improvements.
8ace65e49 Adding a comment.
e39a53a2a Saving some memory. Avoid filling in the stack trace of the ABORT exception. This is used to halt the parser but is never exposed to the calling application.
8d622d613 Fixing typos.
dc15f1af0 Fixing typos.
f91b49929 Fixing typos.
32a27c666 Fixing a typo.
8ec05a5dc Fixing a typo.
48ddc67b8 Fixing typos.
9c941ddd9 Fixing a typo.
72080aebe Fixing a typo.
02304837a Fixing a typo.
724a40cb3 Fixing a typo.
d2e4cf040 Fixing typos.
75c368c2b Fixing a typo.
cdc17ed1f Fixing a typo.
fe8aa4e2d Fixing a typo.
67b4c322e Fixing typos.
e53aadc05 Fixing typos.
5ddb65e11 Adding a new PGP key for myself to the KEYS file.
dc0f7a5ed Fixing JIRA Issue #1266: http://issues.apache.org/jira/browse/XERCESJ-1266
ed36b464d Fix for bug http://issues.apache.org/jira/browse/XERCESJ-1265. Thanks to Ed Merks.
56eb44c07 Updating the contributors FAQ.
564c76093 New source repository page. Copied from the Xerces-C and modified for Xerces-J.
9e60fa0a7 Link to the new "Source Repository" page.
e0637b1ac Marking a couple of fields final.
dbe0d31c8 Marking more fields final.
0014b3ba5 Marking several fields final.
8c53368d0 Marking one field final.
95c30c6b2 Marking many fields final.
2e2546c49 Marking many fields final.
646573168 Marking several fields final.
a6bf9fe13 Marking a couple of fields final.
0feace15b Marking several fields final.
3ba5f1a06 Marking several fields final.
37b3d6999 Marking several fields final.
6d9405635 Marking several fields final.
0f7584db6 Marking several fields final.
a8373f863 For JIRA Issue 1267.  Build a smaller DFA for UPA processing by changing the min/maxOccurs values.
1fc416d77 Fixing a bug. Should be passing the "location" parameter instead of "fLocator". This was causing no location info to be reported for schema errors.
1fbea113b Updating download links. The master distribution directory has changed from www.apache.org/dist/xml/xerces-j/ to www.apache.org/dist/xerces/j/.
a014c937f Updating the release doc for Xerces-J 2.9.1.
11fe8eece More updates to the release doc for Xerces-J 2.9.1.
6b70f798e Added a link to the UPA constraint in the XML Schema 1.0 specification.
e76ef1b33 Updating the changes section for Xerces-J 2.9.1.
87629c99d Commenting out an annotation test which appears to be bad.
7433dc531 Adding SVN properties.
432ed5820 Fixing a couple messages which were missing parentheses.
1471463ec Performance: If not entity resolver has been registered avoid expanding the system identifier.
0591f8c0e JIRA Issue #1451: http://issues.apache.org/jira/browse/XERCESJ-1451. Adding native support for UTF-16.
c8718883d A new UTF-16 test derived from the UTF-8 one.
0c7a38fee Plugging the new UTF16Reader into the XInclude text reader and doing a bit of re-factoring.
5e3e244be Plugging in the new UTF16Reader and doing quite a bit of re-factoring related to encoding handling.
fa54a1bcb Need to ensure that the buffer we're passing to the UTF-16 Reader is large enough.
733fecf22 Adding a target for building the xjavac.jar file.
0841d7bd8 Updating XJavac task to support compilation on IBM J2SE 6.
71c2d92a1 Updating XJavac task to support compilation on IBM J2SE 6.
df556b4b7 Fixing JIRA Bug #1229: http://issues.apache.org/jira/browse/XERCESJ-1229
660f48c44 Undo last commit.
488d3febc Fixing JIRA Bug #1278: http://issues.apache.org/jira/browse/XERCESJ-1278
f8fff7782 When reporting the error for the attribute call getTypeName() instead of getName(). The latter always returns null when the type is anonymous which isn't very useful to be reporting in an error message.
5c528940f Fixing some obvious typos. 0xF7 (division symbol) -> 0x7F (DEL). The latter is actually a control character which needs to be written as a character reference in XML 1.1.
ff27e70a8 Fixing JIRA Bug #1280: http://issues.apache.org/jira/browse/XERCESJ-1280
7b962f44a Synching up the French and Japanese translations of the regex error messages.
d5d076551 Adding the ASF license header to the message files. See http://www.apache.org/legal/src-headers.html.
6d056d80c Adding the ASF license header to the message files. See http://www.apache.org/legal/src-headers.html.
41d9c028b Adding SVN "Id" keyword.
48f90b7f6 Use valueOf() instead of directly calling the BigInteger/BigDecimal constructors.
ef9964ffb testing commit
28f0bec3b Undo test commit.
8b3961946 Minor performance improvement. Use an (unsynchronized) ArrayList instead of Vector for collecting String chunks.
897b79c7e Minor performance improvement. Use an (unsynchronized) ArrayList instead of Vector as the container for the nodes in the NodeList.
c915e29fc Minor performance improvement. Use an (unsynchronized) ArrayList instead of a Vector as the container for the strings in the DOMStringList.
6bd23efb5 Fixing a possible IndexOutOfBoundsException which was introduced by the previous commit.
b7d7a82b0 Minor performance improvement. Use an (unsynchronized) ArrayList instead of a Vector as the container for the DOMImplementations in the DOMImplementationList.
69e218e42 Fixing JIRA Bug #1286: http://issues.apache.org/jira/browse/XERCESJ-1286
0328f80c1 Some clean-up and minor performance improvements. Replace usage of HashTables/Vectors with unsynchronized HashMaps/ArrayLists.
ba97e58bf Some clean-up and minor performance improvements. Replace the usage of HashTable with the unsynchronized HashMap.
c3e6e426b Some minor performance improvements. Replace the usage of Hashtable with the unsynchronized HashMap.
ab875491f Minor improvement to LargeContainer.toString().
837a9d6a8 Some minor performance improvements. Replace the usage of Vector with the unsynchronized ArrayList.
4c8b4534c Some minor performance improvements. Replace the usage of Hashtable & Vector with the unsynchronized HashMap & ArrayList.
685d161bd Removing a couple unused imports.
17565ac71 Some minor performance improvements. Replace the usage of Vector with the unsynchronized ArrayList.
d9f6b57fd Some minor performance improvements. Replace the usage of Vector with the unsynchronized ArrayList.
076aa7fed Updating the copyright year used in the API docs.
1c735482b Updating the copyright year in the NOTICE file.
c17b11ea4 Updating the copyright year in the documentation.
162bac7f5 Some minor performance improvements. Replace the usage of Vector with the unsynchronized ArrayList. Note the changes for maintaining serialization compatibility with older versions of Xerces. When serializing the NamedNodeMap we always write out a Vector. When deserializing we convert the Vector back to an ArrayList.
7735795a6 Cleaning up the implementation of SchemaDOMParser. We were creating two instances of this class; one which just forwarded calls to SchemaParsingConfig and another which did the actual work. We only create one instance now.
9b5bff064 Removing an unused field.
7bca7d07e Fixing a typo. We should be setting minOccurs.
3a844b2ca Fixing a potential IndexOutOfBoundsException. Need to be careful when the remaining space left in the buffer is less than XMLEntityManager.DEFAULT_XMLDECL_BUFFER_SIZE. Thanks to David Cargill for pointing this problem out.
dc6ff2d33 Instead of using reflection call the methods on Locator2 directly to retrieve the document's XML version and encoding.
19b7089e4 Fixing a bug in the processing of the JAXP 1.2 "http://java.sun.com/xml/jaxp/properties/schemaSource" property. When the value specified is a java.io.File we need to make sure we set the system ID on the XMLInputSource otherwise relative URIs in the schema may not resolve.
7897d4b34 Fixing a bug in complex type traversal.
ba7898b39 Fixing a bug. We weren't reseting the NamespaceContext which can cause all sorts of problems including the loss of some namespace decls on XSAnnotation components.
1c60c8520 If an application wants to clear a property they're out of luck unless they use Java 5.0 or above (see System.clearProperty()). The closest thing they can do is set the value to the empty string. Instead of making a futile attempt to create an instance of a class named "" we treat it as if it were null (i.e. cleared) and then move on to the next step in the factory lookup.
15962bba4 If an application wants to clear a property they're out of luck unless they use Java 5.0 or above (see System.clearProperty()). The closest thing they can do is set the value to the empty string. Instead of making a futile attempt to create an instance of a class named "" we treat it as if it were null (i.e. cleared) and then move on to the next step in the factory lookup.
1bb5667ed Fields storing singleton instances of DOMImplementation should be final.
10f2bb8c4 Fixing the DOMImplementation class hierarchy. PSVIDocumentImpl extends DocumentImpl so PSVIDOMImplementationImpl should extend DOMImplementationImpl. XSImplementationImpl should extend the PSVIDOMImplementationImpl which supports all of the other DOM features supported by Xerces-J.
c42ccb922 Fixing JIRA Issue #1296: http://issues.apache.org/jira/browse/XERCESJ-1296
9ea763298 Performance: Reduce MalformedURIExceptions thrown while resolving xml:base. The URI class previously only accepted absolute URIs so at least one exception was always being thrown for relative URIs.
264f54e5b Use correct terminology. character entity -> character reference.
35cebc1dc Fixing a potential NPE.
15a922faa Fixing indentation.
6c2b11dd6 Before returning control to the user, disconnect the validator and other objects from the XMLReader. This keeps the user's application from mucking around with the Validator's internal ValidatorHandler and may allow for better garbage collection.
c93a1771e Before returning control to the user, disconnect the schema loader and other objects from the XMLReader. This should allow for better garbage collection.
b4162085b Before returning control to the user, disconnect the user's ContentHandler from the SchemaGrammar's XMLReader. This should allow for better garbage collection.
a7f11a950 If the XSGrammarPool is empty or if an empty list is passed to the the XSLoader return an XSModel which contains the built-in types instead of returning null.
79dd308b5 Added newSchema() method which allows an application to create a Schema from an XMLGrammarPool.
e5bd3e141 XSModel is immutable. Marking most of its fields final.
efdfe97be If the XSModel or SchemaGrammar has no annotations return the singleton empty list instead of creating a new one.
b90cd6a7e Fixing JIRA Issue #1308: http://issues.apache.org/jira/browse/XERCESJ-1308
6c728ce42 Fixing JIRA Issue #1309: http://issues.apache.org/jira/browse/XERCESJ-1309
4960f2c0d Making every field of this class final.
50174a9c4 Making every field of this class final.
5244120e5 Making every field of this class private.
b24142822 Making the fValue field final.
d161f24f1 Clean-up imports.
9cb8b1b94 Making the fType field final.
f1b6ebe50 Miscellaneous code clean-up.
62b1271a4 Minor performance improvements. Return the same list instance each time getNamespaces() and getNamespaceItems() is called instead of creating a new one each time.
e1bf07399 Deleting a class which is no longer used by the XSModel implementation.
3f2ce9b13 Reducing Xerces' static footprint. Only create the Schema4Annotations if it's needed.
7e6604e08 Organize imports.
c3c4d2a70 Marking many fields final.
8e69f9c5c Upgrade to Apache Ant 1.7.0.
2e30a4bc0 Updating build.bat and build.sh for Ant 1.7.0.
8ce366ce9 Miscellaneous code clean-up.
8d2be0af9 Fixing a bug in the construction of the simple type hierarchy. The base type of xs:negativeInteger is xs:nonPositiveInteger not xs:integer.
e66171036 Adding .project and .classpath files for Eclipse.
69043f40d Adding a template for new Java source files which automatically inserts the Apache license header.
105af6596 Code formatting style. Tabs should always be four spaces.
4e9daeab7 Upgrade to Apache Ant 1.7.1.
958596325 Upgrading to xml-commons-external-1_4_01 (pre-release).
b61b1d6eb Marking an immutable field final.
a1fde6bf0 Marking several more immutable fields as final.
8238e8661 Fixing JIRA Issue #1323: http://issues.apache.org/jira/browse/XERCESJ-1323
ad54212dc Eliminating a redundant call to String.indexOf().
647c8a37c Copying a StAX utility class on to the trunk from the stax-dev branch.
4da1e42d9 Copying a StAX utility class on to the trunk from the stax-dev branch.
6b22869ba JIRA Issue #1314: https://issues.apache.org/jira/browse/XERCESJ-1314
79c24d420 JIRA Issue #1316: http://issues.apache.org/jira/browse/XERCESJ-1316
59f121b96 JIRA Issue #1315: http://issues.apache.org/jira/browse/XERCESJ-1315
a80e4ad13 JIRA Issue #1313: http://issues.apache.org/jira/browse/XERCESJ-1313
5cad124a2 When ID/IDREF/ENTITY rules are checked against a list value, we temporarily hijack the ValidatedInfo object for the list value and use it for individual items in the list. We then restore it back to the original state.
796f0511e Fixing a potential NPE. The Javadoc for XMLGrammarPool.retrieveInitialGrammarSet() doesn't explicitly disallow null as a return value. It's possible that some user implementations will return null.
ad0481a7a Fixing a potential NPE. The Javadoc for XMLGrammarPool.retrieveInitialGrammarSet() doesn't explicitly disallow null as a return value. It's possible that some user implementations will return null.
9b657be45 JIRA Issue #1313: http://issues.apache.org/jira/browse/XERCESJ-1313
d03a1c0fd Fixing a bug. When the schema loader is provided with StAX input the annotation strings in the XSModel were all missing namespace declarations on the root of the document fragment. Need to report the prefixes to the NamespaceContext and return them from getAllPrefixes().
27739cd12 Fixing a potential NPE.
1e03fad51 JIRA Issue #1298: http://issues.apache.org/jira/browse/XERCESJ-1298
669bf72f3 Added a flag to StAXInputSource which when set to true instructs the consumer to consume all of the remaining events in the stream, even if the current position is at the root of a subtree. This allows the application to forget about XMLStreamReaders / XMLEventReaders it never cares to read again after the event consumer completes its task without sacrificing any resource recycling the StAX implementation may do once the end of the input has been reached.
413a393f0 Disallow null values for the XMLStreamReader / XMLEventReader constructor parameters.
4be14a05a Adding a class which allows one to extend or modify the behaviour of an existing XSSimpleType.
b94c3deb3 Delegation for toString().
d015ee9e6 Fixing a typo.
ff512d3f0 Return true for each of the JAXP Source features to indicate to the caller of getFeature() that this SchemaFactory supports all of the built-in JAXP Source types.
433ea76fa Return true for each of the JAXP Source/Result features to indicate to the caller of getFeature() that this Validator supports all of the built-in JAXP Source/Result types.
13e9def71 Include an error message in each of the NPEs thrown for a null feature/property name parameter.
d5ad0f70a Fixing several instances of the same bug. We were throwing a SAXNotRecognizedException where a SAXNotSupportedException should be thrown.
497ffc05f Marking many fields final.
62960fd41 Reorganized / cleaned up imports using Eclipse.
724817ec3 Reorganized / cleaned up imports using Eclipse.
c4c71b447 Reorganized / cleaned up imports using Eclipse.
6b1657fa3 Allow applications to set a SecurityManager on the DOMConfiguration to protect against DoS attacks.
aff5fcdcf Factored out DOMException handling to eliminate a lot of duplicate code.
78f2e07a4 Factored out DOMException handling to eliminate a lot of duplicate code.
8e3c34c98 Eliminating an unnecessary field. There's no value in caching the list that is used in setParameter() for collecting schema locations. Most sensibly written applications will configure the parser only once, in which case this list would be used at most once.
cb6d240b6 Marking many fields final.
3ed8b215a Eliminating a couple unused fields.
fc654f74b Removing "synchronized" from the toString() method. The threading issue that it was added to address was eliminated years ago.
487c97551 Updating to the latest level of xml-commons-external-1.4.01.
6444ae507 Fixing SVN properties.
ccfb771e9 Use a HashMap for the reversedIdentifiers table. There's no need for the synchronized Hashtable here.
5d041b44b Minor performance improvement. Iterate over the entries in the map instead of the keys. This avoids a redundant table lookup for each value.
4990982a6 Minor performance improvement. Iterate over the entries in the map instead of the keys. This avoids a redundant table lookup for each value.
9ae5260b6 Minor performance improvement. Iterate over the entries in the map instead of the keys. This avoids a redundant table lookup for each value.
4ecb783f2 Minor performance improvement. Iterate over the entries in the map instead of the keys. This avoids a redundant table lookup for each value.
456dc67c6 Minor performance improvement. Iterate over the entries in the map instead of the keys. This avoids a redundant table lookup for each value.
0c969b859 Improving debug info exposed by XSDocumentInfo. toString() now returns the targetNamespace and the schemaLocation.
0ad6a16ca Minor enhancements to the Schema DOM implementation to make it easier to debug.
844f85d9d Fixing JIRA Issue #1334: http://issues.apache.org/jira/browse/XERCESJ-1334
62eeb5009 Fixing JIRA Issue #1335: http://issues.apache.org/jira/browse/XERCESJ-1335
fba49d598 Class loading improvements. Avoid loading Abort and AbortHandler unless they're actually needed.
29072f5a3 Updating the JAR manifest to reflect that v1.4.01 of xml-commons external is now in use.
ee55caf9c Protect against NPEs and other failures which could occur if the application sets the LSParserFilter to null in the middle of a parse.
e90021b0b JIRA Issue #1317: http://issues.apache.org/jira/browse/XERCESJ-1317
2411c4940 Minor performance improvement. If the XMLStreamReader returns true for the "javax.xml.stream.isInterning" property avoid adding strings to the SymbolTable where possible.
8ad1e29c8 Enable reporting of column and line numbers in XMLStreamReaders which support it.
422a64c5a Fixing a bug. We cannot cache the Location object from the start document event. To get the correct line and column numbers it needs to be read at the point where the error occurs. To handle this introduced a wrapper around the XMLStreamReader which reads the Location from the reader on demand.
d043cbe09 Add support for QT types
41d9f998c When normalizing a String object to upper- or lower case one needs to be very careful not to rely on the default locale of the platform. This results from the fact that Turkish in particular does not map characters to their upper- or lower case equivalents in English. Now, everywhere where this could pose a problem, we force case conversion to be done according to an English locale.
7517100af JIRA Issue #1336: http://issues.apache.org/jira/browse/XERCESJ-1336
c940d2e0a JIRA Issue #1337: http://issues.apache.org/jira/browse/XERCESJ-1337
504dd511e Making several classes final.
fee8d1e7a JIRA Issue #1338: http://issues.apache.org/jira/browse/XERCESJ-1338
923bca30f Fixing a bug. ItemPSVI is supposed to return "an empty StringList if no errors occurred during the validation attempt". It was returning null.
740fe9056 JIRA Issue #1339: http://issues.apache.org/jira/browse/XERCESJ-1339
3bee6f5c1 When executing the (x)javac task explicitly specify the source and target level. Both of these values will be equal to the java version used for invoking Ant. Previously we were relying on default values; target was 1.1 for JDK 1.3 and 1.2 for JDK 1.4.
80a7c2d97 Fixing a bug. The Location must be set on the StAXLocationWrapper before calling startDocument() otherwise the document URI on the Schema DOM will not be set.
1a6b1dd88 Should only be trimming XML spaces off of an attribute value. Use XMLChar.trim() instead of String.trim().
f42be9cb9 Fixing JIRA Issues #1183 & #1340: http://issues.apache.org/jira/browse/XERCESJ-1183 http://issues.apache.org/jira/browse/XERCESJ-1340
0e7ae145f Fixing a bug in the support for the "honour-all-schemaLocations" feature. Before processing additional imports for the same namespace we check if we have already loaded the schema document pointed to by the schemaLocation. If we have we do not load it again. Unfortunately this didn't work because we were never setting the literal system identifier on the grammar description.
2e89fd219 Adding a flag to control the mutability of SchemaGrammars.
3e75fdc05 JIRA Issue #1343: http://issues.apache.org/jira/browse/XERCESJ-1343
bf9add43c Adding documentation for the "http://apache.org/xml/properties/locale" property.
4c9ee3ea9 Documentation for the "root-element-declaration" and "root-type-definition" properties.
dbe676611 JIRA Issue #1297: http://issues.apache.org/jira/browse/XERCESJ-1297
67c63b1eb Removing an unnecessary cast.
cf3384461 JIRA Issue #1297: http://issues.apache.org/jira/browse/XERCESJ-1297
f13e29207 Now that we've moved to JDK 1.3 call setInstanceFollowRedirects() directly instead of through reflection.
57436791b The 'root-element-declaration' property has higher precedence than the 'root-type-definition' property. If both are set the specified element declaration should be used.
1309d9c4f Report an error if the name of the root element does not match the name of the specified root element declaration.
f32de30f9 JIRA Issue #1318: http://issues.apache.org/jira/browse/XERCESJ-1318
cd7f2adaf * Removed some commented out markup. * Updated revalidation description. In memory validation against DTDs is supported too.
9aa176211 In anticipation of the next release bump the version in build.xml up to 2.10.0.
1f8eaeb0d As a consequence of our choice to design XSModel in IDL instead of Java we ended up creating many list type interfaces. If we had started this work in Java we would have used java.util.List instead, an interface which is built into the Java class library that has first class support in the Collections API and is used by countless applications. When we revisit the XSModel for XML Schema 1.1 we should retrofit java.util.List everywhere in the API where we are returning the XSModel specific list types. In anticipation of this change I've updated each of the list implementations so that they now implement java.util.List. This will make it easier to update the API when the time comes.
adc159bc9 As a consequence of our choice to design XSModel in IDL instead of Java we ended up creating many list type interfaces. If we had started this work in Java we would have used java.util.List instead, an interface which is built into the Java class library that has first class support in the Collections API and is used by countless applications. When we revisit the XSModel for XML Schema 1.1 we should retrofit java.util.List everywhere in the API where we are returning the XSModel specific list types. In anticipation of this change I've updated each of the list implementations so that they now implement java.util.List. This will make it easier to update the API when the time comes.
62b968415 As a consequence of our choice to design XSModel in IDL instead of Java we ended up creating many list type interfaces. If we had started this work in Java we would have used java.util.List instead, an interface which is built into the Java class library that has first class support in the Collections API and is used by countless applications. When we revisit the XSModel for XML Schema 1.1 we should retrofit java.util.List everywhere in the API where we are returning the XSModel specific list types. In anticipation of this change I've updated each of the list implementations so that they now implement java.util.List. This will make it easier to update the API when the time comes.
44f3524f3 Removing an unused field and marking a few others final.
c912c3d02 Fixing JIRA Issue #1348: http://issues.apache.org/jira/browse/XERCESJ-1348
1164f31e0 As a consequence of our choice to design XSModel in IDL instead of Java we ended up creating XSNamedMap. If we had started this work in Java we would have used java.util.Map instead, an interface which is built into the Java class library that has first class support in the Collections API and is used by countless applications. When we revisit the XSModel for XML Schema 1.1 we should retrofit java.util.Map everywhere into the API where we are returning XSNamedMap. In anticipation of this change I've updated the XSNamedMap implementation so that it now also implements java.util.Map. This will make it easier to update the API when the time comes.
411d9737b Created an implementation of LSInputList.
36b17f345 Marking LSInputListImpl final.
5fbadcf90 Added utility methods for creating StringLists and LSInputLists. Hope we can add these to the XSImplementation interface to make it easier for users to create instances of these lists.
a688045de Updating to the latest level of xml-commons-external-1.4.01.
fffb7f510 JIRA Issue #1354: http://issues.apache.org/jira/browse/XERCESJ-1354
29d518bca Fixing javadoc warnings for org.w3c.dom.views.* plus some other minor tweaks.
f3cb21591 Adding org.w3c.dom.views.* to the API docs.
9bd99c275 JIRA Issue #1353: http://issues.apache.org/jira/browse/XERCESJ-1353
8210a2f6a Creating package for StAX implementation.
bb9b0f253 Copying event implementation in from the stax-dev branch.
0617cce57 Copying event implementation in from the stax-dev branch.
f3531818a Copying event implementation in from the stax-dev branch.
54dcfe782 Making ElementTraversal implementation methods final plus some other minor tweaks.
312623651 Remove schemaType field. I doubt we need this any time soon and if we ever do we can add it back.
ffa910c7f Making many classes and methods final.
39f2b944d Adding org.apache.xerces.stax.* to the API docs.
c8012e2cd Marking many classes as @xerces.internal.
0f9124403 Lots of work on the StAX events, including an implementation of XMLEventFactory.
fa2d525e0 Adding SVN properties.
78ea88600 Updating to the latest level of xml-commons-external-1.4.01.
327662f97 Copying Location implementation in from the stax-dev branch.
e6213aa8f Copying Location implementation in from the stax-dev branch.
a32ac793b Copy the Location passed in if non-null and ensure that the events always return a non-null Location.
1897b7d6b Adding a toString() method for debugging purposes. Just calls writeAsEncodedUnicode().
301740e64 Implementation of writeAsEncodedUnicode().
f69153c23 Fixing a bug. The QName created for the default namespace was incorrect.
c090122c6 More fixes and improvements for the Namespace event.
eaad3fad2 Copying DefaultNamespaceContext in from the stax-dev branch.
251bb254a Updating the copyright year used in the API docs.
4c14f5429 Updating the copyright year in the NOTICE file.
0c892562c Updating the copyright year in the documentation.
eadfb0e06 Making DefaultNamespaceContext final.
347b7d7c8 Ensure that the NamespaceContext returned from a StartElement event is never null.
a357277b8 Reducing object allocation and eliminating mutation methods.
1cfc8e1f8 Adding META-INF/services/javax.xml.stream.XMLEventFactory to xercesImpl.jar.
e5ca6b833 Updating the W3C Software Notice and License to the one which the DOM Level 3 bindings (http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/java-binding.zip) are distributed with.
547943220 Fixing an NPE that occurs when the Locale is set to null.
97aa81a24 Fixing an NPE in complex type restriction involving <redefine>.
2c9d89b9e Fixing a bug. '24' is a valid value for the hour field, provided that the minute and second fields are '0'. Both the XML Schema specification and JAXP allows this.
2f386b484 Need to supply a default ValidationContext when facets are applied on simple types.
fe0b9bf41 Updating to the latest level of xml-commons-external-1.4.01.
12bb26f53 JIRA Issue #1353: http://issues.apache.org/jira/browse/XERCESJ-1353
5609609f1 JIRA Issue #1360: https://issues.apache.org/jira/browse/XERCESJ-1360
aaf0b5a06 JIRA Issue #1360: https://issues.apache.org/jira/browse/XERCESJ-1360
62901357e Improve error processing in schema loading. We should not be swallowing parse exceptions thrown by the SAX or StAX parser.
8f5051612 Adding basic tests for the DOM Element Traversal API.
7fde21c07 Adding dom.traversal tests to the "test" target.
15511cf00 Fixing a couple bugs. When searching for the next or previous element sibling we must retrieve the next or previous logical sibling before entering the main while loop.
96bc66c7d Additional tests for the Element Traversal API with documents containing entity references.
4ce71aa92 Fixing JIRA Issue #1361: http://issues.apache.org/jira/browse/XERCESJ-1361
1c8f38c08 Use lexical form for Java serialization to reduce compatibility concerns which may arise from making changes to the internal representation of Duration and XMLGregorianCalendar.
2449fa230 Minor performance improvement. If the given object is "this" object return true immediately.
535af27f4 Fixing JIRA Issue #1371: http://issues.apache.org/jira/browse/XERCESJ-1371
2e3f27cf5 JIRA Issue #1124: http://issues.apache.org/jira/browse/XERCESJ-1124
6ecd5d834 Pass the IOException from a resource error to the error reporter. This should help applications in determining the actual source of the error.
09936d82e JIRA Issue #1368: http://issues.apache.org/jira/browse/XERCESJ-1368
f56bad0a5 Replacing recursion in getElementAncestor() with a loop.
02eeef251 Ensure the same constructor is invoked in both places we create an XSModel.
74e6a4c8b Updating to the latest level of xml-commons-external-1.4.01.
9b2c27258 Changes for Xerces JIRA issue 1372: https://issues.apache.org/jira/browse/XERCESJ-1372. I will soon add details of my changes to the bug report.
e8c11b155 One more change for https://issues.apache.org/jira/browse/XERCESJ-1372
0ba9066e4 Should use addXSObject() for adding enumeration annotations. add() isn't implemented on XSObjectListImpl.
4af64d286 Renaming clear() to clearXSObjectList() on XSObjectListImpl to avoid a collision with a method of the same name on java.util.Collection. XSModel is still read-only. We don't want applications clearing XSObjectLists through the Collection API (at least not today).
71cea70cb Adding a native implementation of Iterator for the XSNamespaceItemList.
e7f4adb9c Adding native implementations of toArray() and toArray(Object[]).
b9ae3a438 Adding native implementations of toArray() and toArray(Object[]).
f95214138 Minor performance improvement. String.length() == 0 tends to be slightly faster than String.equals("").
cd249d7c6 Minor performance improvement. String.length() == 0 tends to be slightly faster than String.equals("").
2b8c30973 Minor performance improvement. String.length() == 0 tends to be slightly faster than String.equals("").
34e97bc06 Another change for https://issues.apache.org/jira/browse/XERCESJ-1372. Need to check substitution group (and possibly remove it) before adding the element declaration to the global element list.
f51115b93 Fixing reset(). We weren't re-initializing all of the fields.
96ef49623 Be consistent with the rest of the XML Schema API by returning an empty list instead of null.
dac45445b Fixing a bug. We weren't assigning an anonymous type name to the list type of xsi:schemaLocation. This string would be returned from DOM TypeInfo.getTypeName() and shouldn't be null.
9ae541706 Fixing JIRA Issue #1375: https://issues.apache.org/jira/browse/XERCESJ-1375. Fixing an NPE when a namespace is undeclared. Same issue that was addressed in SVN rev 694593. Patch thanks to Arthur De Magalhaes.
572e87947 Fixing JIRA Issue #1374: http://issues.apache.org/jira/browse/XERCESJ-1374. Fixing potential NPEs when comparing namespace URIs in the Schema DOM. Patch thanks to Arthur De Magalhaes.
6535eef84 Allow for namespace growth
05f68ba3c Allow for namespace growth - for now we use the same grammar instance and we do not override any global declarations
36f061f36 Fixing a typo. The qualified name should be "xml:base".
298b3ac52 Fixing JIRA Issue #1377: http://issues.apache.org/jira/browse/XERCESJ-1377. Synchronize all mutations made to Context.inuse.
e4355c541 Allow schema documents to be removed from the SchemaGrammar. This will be useful when we get around to fixing XERCESJ-1130.
fc10004b2 Fix for time comparison (only hours, minutes and seconds) should be used
77e51a8d0 [Internal] Tolerate duplicate global declarations (in different schema documents)
e3be649d7 Fixing JIRA Issue #1378: http://issues.apache.org/jira/browse/XERCESJ-1378. The computation of [validation attempted] was not taking attributes into account. Patch thanks to Arthur De Magalhaes.
36c56dace Note that Xerces does not support leap seconds in date/time values.
00a1cb925 Mention the JAXP secure processing feature as an alternative solution to the maxOccurs OutOfMemoryError for applications that cannot modify their schema.
0bdf77af1 Fixing JIRA Issue #1412: https://issues.apache.org/jira/browse/XERCESJ-1412. Resolves CVE-2009-2625 and a few other issues. We were missing checks for surrogates and well-formedness when scanning system identifiers.
88b6ca9d7 [Internal] Allow for component sharing
6c013a3d5 Create English language message bundles from the default ones as part of the build process.
8cbaee70a Fixing a bug in the creation of an OutputStream from a file:/// URI. We need to ensure that the directory structure underneath the file exists or create it if necessary. Previously this would fail with an IOException if the directories didn't already exist.
c2fa5201d Minor tweak to the previous commit.
274db3dde Fix a potential NPE where the target namespace of the grammar could be null.
558a6d357 JIRA Issue #1388: https://issues.apache.org/jira/browse/XERCESJ-1388. Allow back references with multiple digits.
fe1368124 When parsing a schema, return the grammar object when the schema root is null (it's null by default, but could be non-null in the case of namespace growth)
bb777e987 Allow substitution of the schema dv factory, which is responsible for creating new simple type definitions.
3ffc7c821 Clean-up unused imports.
476b179cb Fixing dtdjar target that was broken by recent changes.
21fe6763d JIRA Issue #XERCESJ-1452: http://issues.apache.org/jira/browse/XERCESJ-1452. Produce more helpful error messages when minOccurs/maxOccurs constraints are violated. We're able to do this in cases where we are using a counting DFA.
6094de870 JIRA Issue #1383: http://issues.apache.org/jira/browse/XERCESJ-1383. New dependency on ICU4J for supporting Unicode normalization. Binaries prepared by Richard Kelly as part of his GSoC project.
b6cddda69 Adding ICU4J to the .classpath.
0df4eb319 JIRA Issue #1383: http://issues.apache.org/jira/browse/XERCESJ-1383. Adding ICU4J to the binary and tools packages. Patch thanks to Richard Kelly.
00b1b8345 Fix typo. Wrong variable name was used.
e32210300 LICENSE file for ICU4J 1.8.1.
b23212edd Adding ICU4J license to the source and binary packages.
38db4443c Fixing a bug where we were sometimes ignoring a null setting for the locale. Miscellaneous clean-up in the message formatters.
0986062e3 Reduce code duplication. The only difference in all of the overriden createDocument() methods was the Document node class we create. That is all we need to override. The rest of the code can live in the base class.
a425ceac8 During schema loading, the declaration pool was designed to reuse objects for schema components. Seems it's now used more often than it should be. We should only reuse these objects when they are not exposed or cached. ... Also when reusing simple type objects, we need to clear the "anonymous" bit.
2052b710a It turned out that even when psvi is off and there is no grammar pool, the schema can still be exposed, making it unsafe to reuse objects in the declaration pool. Disabling the decl pool for now until we are clear about when it can be safely used. (It never worked anyway.)
83d512a40 When resetting XSElementDecl, we need to clear the "scope" field.
5360f1baa Fixing a bug. If the default locale is changed in many cases we weren't picking up the new one. This also simplifies the logic in many of the message formatters.
d8acd13c1 Fixing JIRA Issue #1394: https://issues.apache.org/jira/browse/XERCESJ-1394. If a prefix has been undeclared we must return null from Node.lookupNamespaceURI() instead of an empty string.
bfc533301 Reduce the cost of reset(). If we end up having to read from the component manager more than once make sure that we use a cached default value for the SchemaDVFactory if one was not explicitly provided. This eliminates repeated calls to SchemaDVFactory.getInstance() which can be very expensive.
15384f9a4 Fixing a bug: we didn't report an error when the "value" attribute is missing on facet elements in schema documents. Recover by ignoring such facet elements.
504207ba2 Fix for potential NPEs when processing substitution groups
8664e94a1 Fix for error when processing redefined schemas that redefine others
a8f3a33c2 Fix typo
36db27669 Remember the type name when it can't be resolved to a type definition.
02a70293e Updating links to the performance articles.
7470ba9fd Removing an AccessController.doPrivileged() which could allow an untrusted application to write to a file that it should not be able to.
45ff913e6 Adding support for "ElementTraversal" to hasFeature().
086119d9b Adding an assertion for hasFeature("ElementTraversal", "1.0").
c08116e59 Fix a problem with range tokens where lower case characters where not added (in a case insensitive mode)
f86aa512b A free spacing mode has no effect inside a character class (i.e. whitespace are included)
907713243 Fixing JIRA Issue #1389: http://issues.apache.org/jira/browse/XERCESJ-1389. Regex fix for case insensitive matching.
8c012139c A better error recovery approach when a complex type extension tries to define duplicate attribute uses. Instead of throwing away everything and derive from xs:anyType, just ignore the new duplicate attribute.
9087b722c A better error recovery approach when a complex type extension tries to define duplicate attribute uses. Instead of throwing away everything and derive from xs:anyType, just ignore the new duplicate attribute.
71b14cea4 A further fix for JIRA Issue #1389: http://issues.apache.org/jira/browse/XERCESJ-1389. [Case insensitive matching]
af847434a Fixing compilation errors on Java SE 1.4 and below. Character.toLowerCase(int) and Character.toUpperCase(int) didn't exist until Java SE 5.
5ab0b6b50 Minor performance improvement. Build map during class initialization to avoid synchronization on every get().
84e920570 Reduce visibility to prevent applications from inadvertently acquiring a dependency on this internal class.
369ad32d5 Allow character class subtraction in the normal mode
44823b855 JIRA Issue #1406: https://issues.apache.org/jira/browse/XERCESJ-1406. Eliminate redundant and unnecessary calls to findSchemaGrammar(). If namespace growth has been enabled only attempt to load more components if the triggering component was not already loaded.
8f2dd9fd7 If the value of "use-grammar-pool-only" is true do not allow any mutations to the existing grammars or any new grammars to be loaded, even if the "namespace-growth" feature has been enabled. This is the behaviour required by JAXP when an application loads the schemas up front from a SchemaFactory.
a301cd944 Fixing JIRA Issue #1403: http://issues.apache.org/jira/browse/XERCESJ-1403. Should be throwing the RuntimeException we create if there's some failure in class loading. Thanks to Ludger Bünger for discovering this issue.
8eb9d6415 Updating to the release candidate level of xml-commons-external-1.4.01.
66db3ba97 Adding a new PGP key for myself to the KEYS file.
a33e8d893 Fixing JIRA Issue #1410: http://issues.apache.org/jira/browse/XERCESJ-1410. Report a more appropriate error message when white space is missing between the '%' and the entity name in a parameter entity declaration.
e1e7a872a JIRA Issue #1299: https://issues.apache.org/jira/browse/XERCESJ-1299. Use weak references for storing the NodeIterators so that they can be garbage collected if the application no longer has any references to them. Inspired by the patch by Ludger Bünger except that I used a LinkedList instead of a WeakHashMap due its good memory management when items are removed (and also good for bulk removals through its iterator).
2ce5c7f9c Fixing JIRA Issue #1356: http://issues.apache.org/jira/browse/XERCESJ-1356. Nodes may be pinned down by the map used by compareDocumentPosition() which would be otherwise garbage collectible. Now storing the nodes in a WeakHashMap to eliminate this memory leak. Patch thanks to Ludger Bünger.
6c3e94083 Fixing JIRA Issue #1385: http://issues.apache.org/jira/browse/XERCESJ-1385. Should be checking whether "nohref" is present in getNoHref().
c8d3e1e73 JIRA Issue #1386: http://issues.apache.org/jira/browse/XERCESJ-1386. By request, making HTMLCollectionImpl implement java.io.Serializable so that the HTML DOM can be serialized to an ObjectOutputStream when the nodes contain instances of this class.
4a6bae5ff JIRA Issue #1380: http://issues.apache.org/jira/browse/XERCESJ-1380. Eliminate redundant implementations of getData() and setData() from ProcessingInstructionImpl which are identical to the implementation of those methods in the parent class (CharacterDataImpl). Patch for removing getData() thanks to Ludger Bünger. I added the removal of setData().
49b56961f Fixing JIRA Issue #1407: http://issues.apache.org/jira/browse/XERCESJ-1407. In several cases Document.renameNode() was creating the wrong Node implementations for the PSVI, HTML and WML DOMs. Patch thanks to Ludger Bünger.
77ff9da65 JIRA Issue #1407: http://issues.apache.org/jira/browse/XERCESJ-1407. Some additional improvements thanks to the patch by Ludger Bünger. Use Document factory methods instead of directly calling constructors in HTMLBuilder.
9379c9972 JIRA Issue #1300: https://issues.apache.org/jira/browse/XERCESJ-1300. Use weak references for storing the Ranges so that they can be garbage collected if the application no longer has any references to them. Inspired by the patch by Ludger Bünger except that I used a LinkedList instead of a WeakHashMap due its good memory management when items are removed (and also good for bulk removals through its iterator).
4d45945da Updating the copyright year used in the API docs.
7abec5d70 Updating the copyright year in the NOTICE file.
c7b5dac24 Updating the copyright year in the documentation.
562e56dd7 Commenting out a couple of setProperty() calls which are always unnecessary with Xerces.
95f0bb5ff Fixing JIRA Bug #1413: http://issues.apache.org/jira/browse/XERCESJ-1413. Allow Xerces to be built with the FreeBSD JDK.
40540ef06 Fixing JIRA Bug #1413: http://issues.apache.org/jira/browse/XERCESJ-1413. Allow Xerces to be built with the FreeBSD JDK.
dcd40a452 Minor performance improvement. If the component manager is the loader config don't bother querying it since it doesn't recognize the PARSER_SETTINGS feature. Prevents an XMLConfigurationException from being thrown.
d8d7d8daa Fixing JIRA Bug #1417: http://issues.apache.org/jira/browse/XERCESJ-1417. A link to the Xalan documentation was broken.
0df32768b Fixing JIRA Bug #1416: http://issues.apache.org/jira/browse/XERCESJ-1416. An NPE could occur when the value of the duration is invalid. Check for this condition and throw the correct exception.
59311a5fc Make the download link point to the Xerces TLP download page. This page looks nicer than the Stylebook based one and addresses the concerns raised in XERCESJ-1291 and XERCESJ-1294.
7d3b80349 Fixing JIRA Issue #1085: http://issues.apache.org/jira/browse/XERCESJ-1085. If an IOException was thrown from an attempt to read a schema document pass this exception on to the error reporter. Previously we were swallowing this exception and only reporting a vague error message. Applications can now get more information by querying SAXException.getException().
2190ea375 Fix problem in Regex, in normal mode with multi-line option, when last character is a new line and we are matching a '^'. The match should fail.
f7c63d224 Performance: Replacing Vectors with unsynchronized ArrayLists and HashTables with unsynchronized HashMaps. Should give a small boost to IDC processing.
557dfea5d Reduce the cost of resetting the XMLSchemaValidator. The CMNodeFactory only needs to read properties from the XMLComponentManager if its configuration has changed since the last time it was read.
7db88d34d applying the fix for JIRA issue, XERCESJ-1422 to trunk as well
ea6f64d4e Use the constant for maxOccurs="unbounded". If the value changes in the future we won't have to update this code.
8ee81a90e Adding a method for copying schema information fields from one ElementPSVImpl to another. Useful to avoid materializing the XSModel if it's never read by the application.
17e968bd1 Fixing a ClassCastException introduced by a previous commit.
b47802455 Adding an internal feature called: "http://apache.org/xml/features/internal/strings-interned". This makes it possible for applications to notify a ValidatorHandler that they are providing it with interned strings, allowing the ValidatorHandler to avoid passing strings for XML names through the SymbolTable.
c33372d0b Adding an internal feature called: "http://apache.org/xml/features/internal/strings-interned". This makes it possible for applications to notify a ValidatorHandler that they are providing it with interned strings, allowing the ValidatorHandler to avoid passing strings for XML names through the SymbolTable.
ab425b611 Once the LSSerializer (or XMLSerializer) has completed serializing the DOM drop internal references to the nodes from the Document. If the application is pooling serializers this will allow the garbage collector to reclaim the Document and all of its nodes if the application no longer has any references to it.
720369551 Fixing JIRA Issue #1248: https://issues.apache.org/jira/browse/XERCESJ-1248. Eliminating a static field which was holding on to a text node for mutation notifications. This was not thread-safe and could lead to a memory leak. Fixed thanks to the patch by Ludger Bünger (which I modified slightly; setting the value field on TextImpl directly instead of calling setNodeValueInternal()).
4530be8ed Fixing JIRA Issue #1423: http://issues.apache.org/jira/browse/XERCESJ-1423. On rehash() we need to clear the "prev" pointer when we add an entry at the head of a bucket. Our failure to do this could lead to an infinite loop later. Patch thanks to Anli Shundi (ashundi@tibco.com).
e6727f145 Allow the debug flag in ObjectFactory to be configured with a system property (called xerces.debug) to make it easier for applications to troubleshoot the discovery and loading of XMLParserConfigurations.
014a28ba4 Allow the debug flag in ObjectFactory to be configured with a system property (called xerces.debug) to make it easier for applications to troubleshoot the discovery and loading of XMLParserConfigurations.
d47478b0e Fixing a potential NPE in a debug method.
9d70ac953 Fixing an NPE.
bfb392571 Adding an accessor method which returns the wrapped XSSimpleType.
7cc5ab025 Fixing a ClassCastException. We were casting to the wrong SecurityManager class. The cast was unnecessary anyway since the object is just passed through to the SAX parser we just created.
862db02ae Secure processing: If we created the XMLReader make sure we configure it with a SecurityManager if one was set on the SchemaFactory.
a495ac532 Secure processing: If a SecurityManager was set on the Validator we need to propagate it to the parser which handles the StreamSources.
3d8dbf25e Fixing JIRA Issue #1446: http://issues.apache.org/jira/browse/XERCESJ-1446. When the value passed in is a StringBuffer we normalize the value in place. This is problematic for unions because it corrupts the initial value seen by the subsequent type validators. If there is more than one member type convert the initial value to a string before passing it on to the member type validators.
a6fdd0a0e Xerces' DatatypeFactory is thread-safe and stateless. Making the factory field static. We only need one for all the date/time/duration DVs.
f2c3d5aef Eliminating code in XMLAttributeImpl for storing whether an attribute has a schema ID type. Should save a bit of memory and also time in the schema validator. Nothing ever used this mechanism. The schema IDness of an attribute is retrieved from the PSVI.
cffac2dc1 Block extension / instantiation of FilePathToURI.
ad7bc2ae6 @xerces.internal and @version were missing.
ab08d4bb7 JIRA Issue #1424: http://issues.apache.org/jira/browse/XERCESJ-1424. Eliminate redundant URI validation in getBaseURI(). If the parent node returned a non-null value it means one of the ancestors already verified that the string is a valid URI. Patch thanks to Ludger Bünger.
f17b0f8ec there is a possible null pointer dereference at, ex.getSystemId(). this commit solves this, issue.
01410d325 null check of, variable 'lexicalRepresentation' looks like at a wrong place (this could lead to a null pointer dereference at, s.length()). this commit solves this issue.
2fe4c2e3e there's a repeated conditional test. this was harmless, but still it was appropriate to fix this.
b8c292b7a JIRA Issue #1398: https://issues.apache.org/jira/browse/XERCESJ-1398. Fixing a usually slow growing memory leak. When a UTF-8, UTF-16, UCS-2 or UCS-4 byte sequence crosses a buffer boundary we call the read() method on the RewindableInputStream. This was always buffering the value returned from the underlying InputStream in the data array even when it will never be read again. For a well behaved InputStream if this occurred on every buffer of a 2 GB document we'd grow the data array to over 1 MB. A pathological InputStream which always returns only a few bytes at time could have caused the memory to be burned much quicker.
6929e7345 Fix for Regex problems reported in the following Jira bugs: - Jira 589 (https://issues.apache.org/jira/browse/XERCESJ-589) - Jira 1326 (https://issues.apache.org/jira/browse/XERCESJ-1326) - Jira 1357 (https://issues.apache.org/jira/browse/XERCESJ-1357)
4b437e525 Upgrading the version of Xerces-J used by Ant to v2.9.1.
b8493699d Upgrading the version of Xalan used by Ant / Stylebook to v2.7.1.
3d97763d1 Only the Apache License Version 2.0 license applies to xalan.jar.
8495f8f19 JIRA Issue #1290: https://issues.apache.org/jira/browse/XERCESJ-1290. Adding documentation on the contents of the tools package.
423081171 Minor improvement to hopefully make it clear that the "tools" package contains build tools for building Xerces-J.
3ac348c60 Fixing JIRA Issue #1142: http://issues.apache.org/jira/browse/XERCESJ-1142. Some features were not recognized by the component manager, causing XMLConfigurationExceptions to be thrown and silently caught during reset. This should not occur anymore.
285554ad9 Update release information in preparation for Xerces-J 2.10.0
8e4af7a08 Backing out changes made for ICU4J. We're not quite ready to ship this jar yet.
e348cba43 Update FAQ to explain how validate against XML Schema 1.1
d54cb5f8c Exclude ICU4J from the tools distribution for now. We're not quite ready to ship it yet.
59ac1a1e5 When namespace growth is enabled and a null location is provided we cannot tell whether we've loaded this schema document before so we must assume that we haven't.
fd60da5a6 Updating readme for Xerces 2.10.0.
e8cd253e7 Fixing broken links to the JAXP specification.
89ca250fe adding faq information, for XPath 2.0 support in Xerces-J 2.10.0 release
4d51fbd85 doing some slight modifications to XPath 2.0 support faqs
618cf05a1 doing slight correction to english punctuation, in FAQ description
b9adb887f Applying Khaled's update (SVN rev 949753) to the trunk.
c31a024ba Our examples shouldn't encourage folks to use system properties for selecting the factory. The META-INF/services file located in xercesImpl.jar should be sufficient for finding the XML Schema 1.1 factory.
102d69d22 Some wording improvements to the new XML Schema 1.1 / XPath 2.0 FAQ.
9afb453f6 Adding a section which describes how to create an XML Schema 1.1 SchemaFactory.
66ca64649 Improvements to the XML Schema 1.1 usage example.
2bce8d0ba Adding a sample which demonstrates usage of the org.w3c.dom.ElementTraversal API.
3c148f100 Giving a local variable a more accurate name.
347216546 Adding @author tag.
f451cdd1f Adding @version tags to some classes that were missing them.
1ebbb804c Adding @version tags to some classes that were missing them.
84d80e359 Added documentation from the dom.ElementPrinter sample.
69d5c71a8 Fixing JIRA Issue #1450: http://issues.apache.org/jira/browse/XERCESJ-1450. Whenever we adopt a node from a deferred DOM we must ensure that the node and the entire tree beneath it has been fully materialized before transferring it to its new owner document.
2ddff33f8 Adding documentation on the current support for XML Schema 1.1.
fb95cffa8 Improving the description of Xerces-J 2.10.0.
51265ad9e Restoring previous version.
1768fd41d More updates to the Xerces-J 2.10.0 release notes.
ca47e35c2 Fix for Jira issue https://issues.apache.org/jira/browse/XERCESJ-809. The fix is very similar to the patch Gareth submitted, to expand the location strings when they are stored in the hashtable.
844f055f7 Xerces-J requires JDK 1.3 or higher to compile.
c5b3566ca Updating download page link.
dceb25b32 Reducing visibility of a couple classes which don't need to be public.
4a9812e0d Fix for Jira bug 1456 (https://issues.apache.org/jira/browse/XERCESJ-1456)
761633b39 Eliminate unnecessary creation of XMLStrings and char arrays in the construction of synthetic annotations.
84e111c4d Eliminate unnecessary creation of XNI QNames in the construction of synthetic annotations.
4115a62f7 Fixing an NPE. The application may have set the ContentHandler / DocumentHandler to null within setDocumentLocator() so we need to check for null again before calling startDocument().
023d5a963 Minor improvement. Use StringBuffer.append(char) for one char length strings.
dbfa03c45 Making XSNamedMapEntry static. Should reduce memory usage slightly.
0a864e2a8 Fixing JIRA Issue #1461: http://issues.apache.org/jira/browse/XERCESJ-1461. A couple averaging computations in binary search and divide and conquer methods could overflow for large values. Corrected by using "x >>> 1" instead of "x / 2".
617f3cf5e Fixing JIRA Issue #1458: http://issues.apache.org/jira/browse/XERCESJ-1458. xs:anySimpleType or xs:anyAtomicType do not have any facets, however the schema validator was normalizing white space for these types using the collapse rules. There's still an issue with the XSModel (returning a whitespace facet for xs:anySimpleType / xs:anyAtomicType) but at least the validator has the correct behaviour now.
223500379 Fixing JIRA Issue #1459: https://issues.apache.org/jira/browse/XERCESJ-1459. xs:anySimpleType and xs:anyAtomicType have no facets but we were reporting that they had a whitespace facet.
d0bd9aeef Fixing JIRA Issue #1463: http://issues.apache.org/jira/browse/XERCESJ-1463. A call to findSchemaGrammar() was missing for substitution groups. This could lead to an error reported for the substitution element if its declaration has not been loaded yet.
8e943f593 Minor enhancements to the Schema DOM to allow nodes from it to be imported into Xerces' other DOM implementations. I expect this will be useful in the work that Udayanga has been doing for xs:override.
bd0a1b94e @xerces.internal was missing.
935938a1d Fixing JIRA Issue #1464: http://issues.apache.org/jira/browse/XERCESJ-1464. Use 31 bits in computing the hash instead of 27. Should improve the distribution of symbols in a very large table. Thanks to Roland Illig for spotting this issue.
3b8e5f227 Fixing some Javadoc text.
36ab8d826 In anticipation of the next release bump the version in build.xml up to 2.11.0.
3343d4d5c Setting the default debuglevel to be "lines,source" when debug has been enabled.
3701f6a12 For Jira issue https://issues.apache.org/jira/browse/XERCESJ-1469. Update XSModel interfaces to a) expose an interface for values, and b) expose Identity Constraint definitions as top-level components.
f6982555d For Jira issue https://issues.apache.org/jira/browse/XERCESJ-1469. Update XSModel interfaces to a) expose an interface for values, and b) expose Identity Constraint definitions as top-level components.
64fff1d30 Setting SVN properties for new files.
3c6d39e1d When evaluating list values, need to set the "actualType" after the list is processed, otherwise the "actualType" would have the item type, because same ValidatedInfo is used to process both the list and the items. And when copying an XSValue, need to be careful to only ask for the memberTypes if the type is a list of union.
c5920a30d Reducing the number of array accesses in newSchema(Source[]).
33998917b Fixing a bug on the error handling path for StAX input. XMLStreamReaders cannot directly throw an IOException, so we need to check before re-throwing the exception whether it wraps an IOException and if it does possibly only report a warning.
d40a4b3d6 Fix up SVN properties.
5f91c8d7f Fix for Backreference processing in RegEx. Jira Bug: https://issues.apache.org/jira/browse/XERCESJ-1473
d9e9ba528 Fixing JIRA Issue #1411: http://issues.apache.org/jira/browse/XERCESJ-1411. Some minor Javadoc typos have been corrected. Patch thanks to Johannes Koch.
159748107 Updating the documentation on the current support for XML Schema 1.1.
7f0e8db31 Reducing visibility of a class which isn't accessed outside of this package.
e2e92202c Updating readme for Xerces 2.11.0.
12755cb90 Synch up with the FAQ update (rev 1039244) made to the XML Schema 1.1 branch.
5a654d658 Updating the release doc for Xerces-J 2.11.0.
62e659761 Synch up with the FAQ update (rev 1039532) made to the XML Schema 1.1 branch.
9625132ba committing changes for JIRA issue XERCESJ-1486 to trunk.
fabaf9190 Some minor improvements for performance and to also make it easier for applications which use object identity for comparing schema components... Only create the XSParticle and XSWildcard once for xs:anyType. Return the empty list singleton instead of creating a new one when there are no attribute uses.
b348c9473 Use the singleton empty list instead of creating new ones.
cf954fbe3 Updating the copyright year used in the API docs.
6af72c578 Updating the copyright year in the NOTICE file.
57861bcf2 Updating the copyright year in the documentation.
5a56ab6f5 Marking a static field (containing a singleton) final.
ed5031950 Use ArrayList instead of Vector.
05b31d3b2 Avoid calling methods that were deprecated in Xerces-J 2.11.0.
1ed9d0463 Making ElementState static. It does not need access to the enclosing class.
c8870d729 JIRA Issue #1494: http://issues.apache.org/jira/browse/XERCESJ-1494. Adding isConstant() and constant() methods to ItemPSVI to make it easier for users to persist PSVI information that they receive from a PSVIProvider or PSVI annotated DOM.
2013ca1fd Removing an unused import.
f890ce20b JIRA Issue #1499: http://issues.apache.org/jira/browse/XERCESJ-1499. Reducing the initial footprint of SymbolHash buckets within a SchemaGrammar from 1,515 to 177 (about 12% of the default size). Implemented a rehash() method on SymbolHash to grow the maps if they actually become filled.
5a87040f7 Fix for JIRA bug https://issues.apache.org/jira/browse/XERCESJ-1500
2d9741194 Fixing JIRA Issue #1501: http://issues.apache.org/jira/browse/XERCESJ-1501. Namespace declarations may have been added by namespace fix-up. If the "namespace-declarations" parameter has been set to false we need to fetch the AttributeMap again if it contained no attributes prior to namespace fix-up.
ad11356d4 removing an unnecessary return statement
1593a8f1b Sometimes grammar objects in a schema get out of sync. We end up having multiple objects for the same namespace.
0af83cf3d Given the following XML document,
88afc7d61 Fixing a Javadoc typo.
1c77d0b29 Fixing JIRA Issue #1421: http://issues.apache.org/jira/browse/XERCESJ-1421. We were calling previousSibling() when the node was in an inconsistent state, which would return the last child instead of null when the first child is being removed. We were just lucky to get the correct result from checkNormalizationAfterRemove(). Now it works by design and should be slightly faster when we're removing the first child. Patch thanks to Ludger Bünger. Also thanks to Thiwanka Somasiri for helping to investigate this issue and evaluating Ludger's patch.
9c1a2512e Fixing Jira bug XERCESJ-1513 (https://issues.apache.org/jira/browse/XERCESJ-1513), by adding missing ranges to "Nd" category. Because the character code points may be bigger than 0xffff, the ranges need to be represented as an int array and not a String.
bf01f3979 Fixing Jira bug XERCESJ-1511 (https://issues.apache.org/jira/browse/XERCESJ-1511), by making sure that when a pattern is fully parsed, the last token is EOF. That is, it's an error if the last token is a closing parenthesis.
6b4a70136 Fixing Jira bug XERCESJ-1512 (https://issues.apache.org/jira/browse/XERCESJ-1512), by capturing pattern facet when only the empty string is specified as the pattern value.
4c27d0a02 Fixing Jira bug XERCESJ-1514 (https://issues.apache.org/jira/browse/XERCESJ-1514).
42e44fcaf Fixing Jira bug XERCESJ-1515 (https://issues.apache.org/jira/browse/XERCESJ-1515), to only look for a key when the keyref has complete field values.
742a23184 Reducing the initial footprint of the declared attrs SymbolHash (25% of the default size).
4accc65f7 The static field XSDHandler.ATTRIBUTE_TYPE should be accessed in a static way.
d7d748d02 Clean-up unused imports.
04353636a Marking another immutable field final.
831aff884 committing fix for the JIRA issue XERCESJ-1518
78d814b51 Memory usage improvement. The fBuckets field in the base class isn't used so make the array as small as possible.
02a0338d3 Fixing JIRA Issue #1520: http://issues.apache.org/jira/browse/XERCESJ-1520. Corrects several problems with rehash() and removeEntry(), in particular a case where we were double counting cleared SoftReferences which could lead to fCount becoming negative.
51c3e1286 JIRA Issue #1521: http://issues.apache.org/jira/browse/XERCESJ-1521. Compact the SoftReferenceSymbolTable if after cleaning out cleared SoftReferences the number of symbols drops below 25% of the table's load factor threshold.
cef6c8f8b JIRA Issue #1522: http://issues.apache.org/jira/browse/XERCESJ-1522. Removing trailing spaces from error messages.
0923792e3 JIRA Issue #1522: http://issues.apache.org/jira/browse/XERCESJ-1522. Removing trailing spaces from error messages. Thanks to Jesse Glick for locating these occurrences.
c348dc6e7 Fixing JIRA Issue #1523: http://issues.apache.org/jira/browse/XERCESJ-1523. Allow Xerces to be built with Java SE 7.
00a17a3b2 Fixing a bug. When the schema type is DTD: "http://www.w3.org/TR/REC-xml" we were only allowing XML 1.0 documents. DOM L3 requires XML 1.1 support.
5d5f24f5c Updating download links to Oracle and IBM JDKs.
